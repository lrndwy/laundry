*, ::before, ::after {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
  --tw-contain-size:  ;
  --tw-contain-layout:  ;
  --tw-contain-paint:  ;
  --tw-contain-style:  ;
}

::backdrop {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
  --tw-contain-size:  ;
  --tw-contain-layout:  ;
  --tw-contain-paint:  ;
  --tw-contain-style:  ;
}

/*
! tailwindcss v3.4.17 | MIT License | https://tailwindcss.com
*/

/*
1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)
2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)
*/

*,
::before,
::after {
  box-sizing: border-box;
  /* 1 */
  border-width: 0;
  /* 2 */
  border-style: solid;
  /* 2 */
  border-color: #e5e7eb;
  /* 2 */
}

::before,
::after {
  --tw-content: '';
}

/*
1. Use a consistent sensible line-height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
3. Use a more readable tab size.
4. Use the user's configured `sans` font-family by default.
5. Use the user's configured `sans` font-feature-settings by default.
6. Use the user's configured `sans` font-variation-settings by default.
7. Disable tap highlights on iOS
*/

html,
:host {
  line-height: 1.5;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
  -moz-tab-size: 4;
  /* 3 */
  -o-tab-size: 4;
     tab-size: 4;
  /* 3 */
  font-family: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
  /* 4 */
  font-feature-settings: normal;
  /* 5 */
  font-variation-settings: normal;
  /* 6 */
  -webkit-tap-highlight-color: transparent;
  /* 7 */
}

/*
1. Remove the margin in all browsers.
2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.
*/

body {
  margin: 0;
  /* 1 */
  line-height: inherit;
  /* 2 */
}

/*
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
3. Ensure horizontal rules are visible by default.
*/

hr {
  height: 0;
  /* 1 */
  color: inherit;
  /* 2 */
  border-top-width: 1px;
  /* 3 */
}

/*
Add the correct text decoration in Chrome, Edge, and Safari.
*/

abbr:where([title]) {
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
}

/*
Remove the default font size and weight for headings.
*/

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}

/*
Reset links to optimize for opt-in styling instead of opt-out.
*/

a {
  color: inherit;
  text-decoration: inherit;
}

/*
Add the correct font weight in Edge and Safari.
*/

b,
strong {
  font-weight: bolder;
}

/*
1. Use the user's configured `mono` font-family by default.
2. Use the user's configured `mono` font-feature-settings by default.
3. Use the user's configured `mono` font-variation-settings by default.
4. Correct the odd `em` font sizing in all browsers.
*/

code,
kbd,
samp,
pre {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
  /* 1 */
  font-feature-settings: normal;
  /* 2 */
  font-variation-settings: normal;
  /* 3 */
  font-size: 1em;
  /* 4 */
}

/*
Add the correct font size in all browsers.
*/

small {
  font-size: 80%;
}

/*
Prevent `sub` and `sup` elements from affecting the line height in all browsers.
*/

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/*
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
3. Remove gaps between table borders by default.
*/

table {
  text-indent: 0;
  /* 1 */
  border-color: inherit;
  /* 2 */
  border-collapse: collapse;
  /* 3 */
}

/*
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
3. Remove default padding in all browsers.
*/

button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-feature-settings: inherit;
  /* 1 */
  font-variation-settings: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  font-weight: inherit;
  /* 1 */
  line-height: inherit;
  /* 1 */
  letter-spacing: inherit;
  /* 1 */
  color: inherit;
  /* 1 */
  margin: 0;
  /* 2 */
  padding: 0;
  /* 3 */
}

/*
Remove the inheritance of text transform in Edge and Firefox.
*/

button,
select {
  text-transform: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Remove default button styles.
*/

button,
input:where([type='button']),
input:where([type='reset']),
input:where([type='submit']) {
  -webkit-appearance: button;
  /* 1 */
  background-color: transparent;
  /* 2 */
  background-image: none;
  /* 2 */
}

/*
Use the modern Firefox focus style for all focusable elements.
*/

:-moz-focusring {
  outline: auto;
}

/*
Remove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)
*/

:-moz-ui-invalid {
  box-shadow: none;
}

/*
Add the correct vertical alignment in Chrome and Firefox.
*/

progress {
  vertical-align: baseline;
}

/*
Correct the cursor style of increment and decrement buttons in Safari.
*/

::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto;
}

/*
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/

[type='search'] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/*
Remove the inner padding in Chrome and Safari on macOS.
*/

::-webkit-search-decoration {
  -webkit-appearance: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to `inherit` in Safari.
*/

::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/*
Add the correct display in Chrome and Safari.
*/

summary {
  display: list-item;
}

/*
Removes the default spacing and border for appropriate elements.
*/

blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
  margin: 0;
}

fieldset {
  margin: 0;
  padding: 0;
}

legend {
  padding: 0;
}

ol,
ul,
menu {
  list-style: none;
  margin: 0;
  padding: 0;
}

/*
Reset default styling for dialogs.
*/

dialog {
  padding: 0;
}

/*
Prevent resizing textareas horizontally by default.
*/

textarea {
  resize: vertical;
}

/*
1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)
2. Set the default placeholder color to the user's configured gray 400 color.
*/

input::-moz-placeholder, textarea::-moz-placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

input::placeholder,
textarea::placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

/*
Set the default cursor for buttons.
*/

button,
[role="button"] {
  cursor: pointer;
}

/*
Make sure disabled buttons don't get the pointer cursor.
*/

:disabled {
  cursor: default;
}

/*
1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)
2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)
   This can trigger a poorly considered lint error in some tools but is included by design.
*/

img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  display: block;
  /* 1 */
  vertical-align: middle;
  /* 2 */
}

/*
Constrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)
*/

img,
video {
  max-width: 100%;
  height: auto;
}

/* Make elements with the HTML hidden attribute stay hidden by default */

[hidden]:where(:not([hidden="until-found"])) {
  display: none;
}

:root,
[data-theme] {
  background-color: var(--fallback-b1,oklch(var(--b1)/1));
  color: var(--fallback-bc,oklch(var(--bc)/1));
}

@supports not (color: oklch(0 0 0)) {
  :root {
    color-scheme: light;
    --fallback-p: #491eff;
    --fallback-pc: #d4dbff;
    --fallback-s: #ff41c7;
    --fallback-sc: #fff9fc;
    --fallback-a: #00cfbd;
    --fallback-ac: #00100d;
    --fallback-n: #2b3440;
    --fallback-nc: #d7dde4;
    --fallback-b1: #ffffff;
    --fallback-b2: #e5e6e6;
    --fallback-b3: #e5e6e6;
    --fallback-bc: #1f2937;
    --fallback-bs: #1f2937;
    --fallback-in: #00b3f0;
    --fallback-inc: #000000;
    --fallback-su: #00ca92;
    --fallback-suc: #000000;
    --fallback-wa: #ffc22d;
    --fallback-wac: #000000;
    --fallback-er: #ff6f70;
    --fallback-erc: #000000;
  }

  @media (prefers-color-scheme: dark) {
    :root {
      color-scheme: dark;
      --fallback-p: #7582ff;
      --fallback-pc: #050617;
      --fallback-s: #ff71cf;
      --fallback-sc: #190211;
      --fallback-a: #00c7b5;
      --fallback-ac: #000e0c;
      --fallback-n: #2a323c;
      --fallback-nc: #a6adbb;
      --fallback-b1: #1d232a;
      --fallback-b2: #191e24;
      --fallback-b3: #15191e;
      --fallback-bc: #a6adbb;
      --fallback-bs: #989eab;
      --fallback-in: #00b3f0;
      --fallback-inc: #000000;
      --fallback-su: #00ca92;
      --fallback-suc: #000000;
      --fallback-wa: #ffc22d;
      --fallback-wac: #000000;
      --fallback-er: #ff6f70;
      --fallback-erc: #000000;
    }
  }
}

html {
  -webkit-tap-highlight-color: transparent;
}

[class*="icon-[tabler--"] {
  display: inline-block;
  width: 1rem;
  height: 1rem;
  background-color: currentColor;
  -webkit-mask-image: var(--svg);
  mask-image: var(--svg);
  -webkit-mask-repeat: no-repeat;
  mask-repeat: no-repeat;
  -webkit-mask-size: 100% 100%;
  mask-size: 100% 100%;
}

.icon-\[tabler--building\] {
  --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M3 21h18M9 8h1m-1 4h1m-1 4h1m4-8h1m-1 4h1m-1 4h1M5 21V5a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2v16'/%3E%3C/svg%3E");
}

.icon-\[tabler--check\] {
  --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='m5 12l5 5L20 7'/%3E%3C/svg%3E");
}

.icon-\[tabler--home\] {
  --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M5 12H3l9-9l9 9h-2M5 12v7a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2v-7'/%3E%3Cpath d='M9 21v-6a2 2 0 0 1 2-2h2a2 2 0 0 1 2 2v6'/%3E%3C/g%3E%3C/svg%3E");
}

.icon-\[tabler--logout\] {
  --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M14 8V6a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h7a2 2 0 0 0 2-2v-2'/%3E%3Cpath d='M9 12h12l-3-3m0 6l3-3'/%3E%3C/g%3E%3C/svg%3E");
}

.icon-\[tabler--mail\] {
  --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M3 7a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z'/%3E%3Cpath d='m3 7l9 6l9-6'/%3E%3C/g%3E%3C/svg%3E");
}

.icon-\[tabler--menu-2\] {
  --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M4 6h16M4 12h16M4 18h16'/%3E%3C/svg%3E");
}

.icon-\[tabler--message\] {
  --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M8 9h8m-8 4h6m4-9a3 3 0 0 1 3 3v8a3 3 0 0 1-3 3h-5l-5 3v-3H6a3 3 0 0 1-3-3V7a3 3 0 0 1 3-3z'/%3E%3C/svg%3E");
}

.icon-\[tabler--package\] {
  --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='m12 3l8 4.5v9L12 21l-8-4.5v-9zm0 9l8-4.5M12 12v9m0-9L4 7.5m12-2.25l-8 4.5'/%3E%3C/svg%3E");
}

.icon-\[tabler--shopping-cart\] {
  --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M4 19a2 2 0 1 0 4 0a2 2 0 1 0-4 0m11 0a2 2 0 1 0 4 0a2 2 0 1 0-4 0'/%3E%3Cpath d='M17 17H6V3H4'/%3E%3Cpath d='m6 5l14 1l-1 7H6'/%3E%3C/g%3E%3C/svg%3E");
}

.icon-\[tabler--trash\] {
  --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M4 7h16m-10 4v6m4-6v6M5 7l1 12a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2l1-12M9 7V4a1 1 0 0 1 1-1h4a1 1 0 0 1 1 1v3'/%3E%3C/svg%3E");
}

.icon-\[tabler--trending-down\] {
  --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='m3 7l6 6l4-4l8 8'/%3E%3Cpath d='M21 10v7h-7'/%3E%3C/g%3E%3C/svg%3E");
}

.icon-\[tabler--trending-up\] {
  --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='m3 17l6-6l4 4l8-8'/%3E%3Cpath d='M14 7h7v7'/%3E%3C/g%3E%3C/svg%3E");
}

.icon-\[tabler--user\] {
  --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M8 7a4 4 0 1 0 8 0a4 4 0 0 0-8 0M6 21v-2a4 4 0 0 1 4-4h4a4 4 0 0 1 4 4v2'/%3E%3C/svg%3E");
}

:root {
  color-scheme: light;
  --rounded-box: 0.5rem ;
  --rounded-btn: 0.375rem;
  --rounded-tooltip: 0.25rem;
  --animation-btn: 0.25s;
  --animation-input: .2s;
  --btn-focus-scale: 0.95;
  --border-btn: 1px;
  --tab-border: 1px;
  --tab-radius: 0.5rem;
  --p: 57.5934% 0.247012 287.240256;
  --pc: 93.7482% 0.032368 291.504163;
  --s: 55.7871% 0.022138 301.905408;
  --sc: 95.0453% 0.002858 308.427423;
  --a: 62.3083% 0.188015 259.814527;
  --ac: 93.1918% 0.031591 255.585479;
  --n: 40.6559% 0.025056 282.210785;
  --nc: 97.6419% 0.001323 286.375536;
  --b1: 100% 0 0;
  --b2: 94.7244% 0.005338 286.297402;
  --b3: 88.6277% 0.008239 278.622785;
  --bc: 37.567% 0.022158 281.800147;
  --bs: 37.567% 0.022158 281.800147;
  --in: 71.4837% 0.125737 215.220903;
  --inc: 95.6262% 0.044329 203.387778;
  --su: 73.1062% 0.216656 147.043973;
  --suc: 96.444% 0.02867 172.082912;
  --wa: 79.8713% 0.164239 73.09399;
  --wac: 98.4165% 0.02418 94.061776;
  --er: 65.3932% 0.222085 25.863858;
  --erc: 97.5752% 0.015143 61.349242;
}

@media (prefers-color-scheme: dark) {
  :root {
    color-scheme: dark;
    --rounded-box: 0.5rem ;
    --rounded-btn: 0.375rem;
    --rounded-tooltip: 0.25rem;
    --animation-btn: 0.25s;
    --animation-input: .2s;
    --btn-focus-scale: 0.95;
    --border-btn: 1px;
    --tab-border: 1px;
    --tab-radius: 0.5rem;
    --p: 57.5934% 0.247012 287.240256;
    --pc: 93.7482% 0.032368 291.504163;
    --s: 55.7871% 0.022138 301.905408;
    --sc: 100% 0 0;
    --a: 62.3083% 0.188015 259.814527;
    --ac: 93.1918% 0.031591 255.585479;
    --n: 65.7482% 0.022235 294.952787;
    --nc: 18.5128% 0.016696 301.919165;
    --b1: 26.8442% 0.028285 299.769973;
    --b2: 22.6865% 0.023344 295.952775;
    --b3: 39.9632% 0.030791 300.243852;
    --bc: 78.094% 0.014175 295.24394;
    --bs: 18.5128% 0.016696 301.919165;
    --in: 71.4837% 0.125737 215.220903;
    --inc: 95.6262% 0.044329 203.387778;
    --su: 73.1062% 0.216656 147.043973;
    --suc: 96.444% 0.02867 172.082912;
    --wa: 79.8713% 0.164239 73.09399;
    --wac: 98.4165% 0.02418 94.061776;
    --er: 65.3932% 0.222085 25.863858;
    --erc: 97.5752% 0.015143 61.349242;
  }
}

[data-theme=light] {
  color-scheme: light;
  --rounded-box: 0.5rem ;
  --rounded-btn: 0.375rem;
  --rounded-tooltip: 0.25rem;
  --animation-btn: 0.25s;
  --animation-input: .2s;
  --btn-focus-scale: 0.95;
  --border-btn: 1px;
  --tab-border: 1px;
  --tab-radius: 0.5rem;
  --p: 57.5934% 0.247012 287.240256;
  --pc: 93.7482% 0.032368 291.504163;
  --s: 55.7871% 0.022138 301.905408;
  --sc: 95.0453% 0.002858 308.427423;
  --a: 62.3083% 0.188015 259.814527;
  --ac: 93.1918% 0.031591 255.585479;
  --n: 40.6559% 0.025056 282.210785;
  --nc: 97.6419% 0.001323 286.375536;
  --b1: 100% 0 0;
  --b2: 94.7244% 0.005338 286.297402;
  --b3: 88.6277% 0.008239 278.622785;
  --bc: 37.567% 0.022158 281.800147;
  --bs: 37.567% 0.022158 281.800147;
  --in: 71.4837% 0.125737 215.220903;
  --inc: 95.6262% 0.044329 203.387778;
  --su: 73.1062% 0.216656 147.043973;
  --suc: 96.444% 0.02867 172.082912;
  --wa: 79.8713% 0.164239 73.09399;
  --wac: 98.4165% 0.02418 94.061776;
  --er: 65.3932% 0.222085 25.863858;
  --erc: 97.5752% 0.015143 61.349242;
}

[data-theme=dark] {
  color-scheme: dark;
  --rounded-box: 0.5rem ;
  --rounded-btn: 0.375rem;
  --rounded-tooltip: 0.25rem;
  --animation-btn: 0.25s;
  --animation-input: .2s;
  --btn-focus-scale: 0.95;
  --border-btn: 1px;
  --tab-border: 1px;
  --tab-radius: 0.5rem;
  --p: 57.5934% 0.247012 287.240256;
  --pc: 93.7482% 0.032368 291.504163;
  --s: 55.7871% 0.022138 301.905408;
  --sc: 100% 0 0;
  --a: 62.3083% 0.188015 259.814527;
  --ac: 93.1918% 0.031591 255.585479;
  --n: 65.7482% 0.022235 294.952787;
  --nc: 18.5128% 0.016696 301.919165;
  --b1: 26.8442% 0.028285 299.769973;
  --b2: 22.6865% 0.023344 295.952775;
  --b3: 39.9632% 0.030791 300.243852;
  --bc: 78.094% 0.014175 295.24394;
  --bs: 18.5128% 0.016696 301.919165;
  --in: 71.4837% 0.125737 215.220903;
  --inc: 95.6262% 0.044329 203.387778;
  --su: 73.1062% 0.216656 147.043973;
  --suc: 96.444% 0.02867 172.082912;
  --wa: 79.8713% 0.164239 73.09399;
  --wac: 98.4165% 0.02418 94.061776;
  --er: 65.3932% 0.222085 25.863858;
  --erc: 97.5752% 0.015143 61.349242;
}

:root {
  --motion-default-timing: cubic-bezier(.165, .84, .44, 1);
  --motion-bounce: linear(0, 0.004, 0.016, 0.035, 0.063, 0.098, 0.141 13.6%, 0.25, 0.391, 0.563, 0.765,1, 0.891 40.9%, 0.848, 0.813, 0.785, 0.766, 0.754, 0.75, 0.754, 0.766, 0.785,0.813, 0.848, 0.891 68.2%, 1 72.7%, 0.973, 0.953, 0.941, 0.938, 0.941, 0.953,0.973, 1, 0.988, 0.984, 0.988, 1);
  --motion-spring-smooth: linear(0, 0.001 0.44%, 0.0045 0.94%, 0.0195 2.03%, 0.0446 3.19%, 0.0811 4.5%, 0.1598 6.82%, 0.3685 12.34%, 0.4693 15.17%, 0.5663, 0.6498 21.27%, 0.7215 24.39%, 0.7532 25.98%, 0.7829 27.65%, 0.8105, 0.8349 31.14%, 0.8573 32.95%, 0.8776 34.84%, 0.8964 36.87%, 0.9136 39.05%, 0.929 41.37%, 0.9421 43.77%, 0.9537 46.38%, 0.9636 49.14%, 0.9789 55.31%, 0.9888 62.35%, 0.9949 71.06%, 0.9982 82.52%, 0.9997 99.94%);
  --motion-spring-snappy: linear(0, 0.0014, 0.0053 1.02%, 0.0126, 0.0227 2.18%, 0.0517 3.41%, 0.094 4.79%, 0.1865 7.26%, 0.4182 12.77%, 0.5246 15.46%, 0.6249, 0.7112, 0.7831 23.95%, 0.8146 25.4%, 0.844, 0.8699 28.45%, 0.8935, 0.9139 31.64%, 0.932, 0.9473, 0.9601 36.65%, 0.9714 38.47%, 0.9808 40.35%, 0.9948 44.49%, 1.0031 49.43%, 1.0057 53.35%, 1.0063 58.14%, 1.0014 80.78%, 1.0001 99.94%);
  --motion-spring-bouncy: linear(0, 0.0018, 0.0069, 0.0151 1.74%, 0.0277 2.4%, 0.062 3.7%, 0.1115 5.15%, 0.2211 7.77%, 0.4778 13.21%, 0.5912 15.75%, 0.6987 18.44%, 0.7862 20.98%, 0.861 23.59%, 0.8926, 0.9205, 0.945 27.51%, 0.9671 28.89%, 0.9868, 1.003 31.79%, 1.0224 34.11%, 1.0358 36.58%, 1.0436 39.27%, 1.046 42.31%, 1.0446 44.71%, 1.0406 47.47%, 1.0118 61.84%, 1.0027 69.53%, 0.9981 80.49%, 0.9991 99.94%);
  --motion-spring-bouncier: linear(0, 0.0023, 0.0088, 0.0194 1.59%, 0.035 2.17%, 0.078 3.33%, 0.1415 4.64%, 0.2054 5.75%, 0.2821 6.95%, 0.5912 11.45%, 0.7205 13.43%, 0.8393 15.45%, 0.936 17.39%, 0.9778, 1.015, 1.0477, 1.0759, 1.0998 22.22%, 1.1203, 1.1364, 1.1484 25.26%, 1.1586 26.61%, 1.1629 28.06%, 1.1613 29.56%, 1.1537 31.2%, 1.1434 32.6%, 1.1288 34.19%, 1.0508 41.29%, 1.0174 44.87%, 1.0025 46.89%, 0.9911 48.87%, 0.9826 50.9%, 0.9769 53.03%, 0.9735 56.02%, 0.9748 59.45%, 0.9964 72.64%, 1.0031 79.69%, 1.0042 86.83%, 1.0008 99.97%);
  --motion-spring-bounciest: linear(0, 0.0032, 0.0131, 0.0294, 0.0524, 0.0824, 0.1192 1.54%, 0.2134 2.11%, 0.3102 2.59%, 0.4297 3.13%, 0.8732 4.95%, 1.0373, 1.1827 6.36%, 1.2972 7.01%, 1.3444, 1.3859, 1.4215, 1.4504, 1.4735, 1.4908, 1.5024, 1.5084 9.5%, 1.5091, 1.5061, 1.4993, 1.4886, 1.4745, 1.4565 11.11%, 1.4082 11.7%, 1.3585 12.2%, 1.295 12.77%, 1.0623 14.64%, 0.9773, 0.9031 16.08%, 0.8449 16.73%, 0.8014, 0.7701 17.95%, 0.7587, 0.7501, 0.7443, 0.7412 19.16%, 0.7421 19.68%, 0.7508 20.21%, 0.7672 20.77%, 0.7917 21.37%, 0.8169 21.87%, 0.8492 22.43%, 0.9681 24.32%, 1.0114, 1.0492 25.75%, 1.0789 26.41%, 1.1008, 1.1167, 1.1271, 1.1317 28.81%, 1.1314, 1.1271 29.87%, 1.1189 30.43%, 1.1063 31.03%, 1.0769 32.11%, 0.9941 34.72%, 0.9748 35.43%, 0.9597 36.09%, 0.9487, 0.9407, 0.9355, 0.933 38.46%, 0.9344 39.38%, 0.9421 40.38%, 0.9566 41.5%, 0.9989 44.12%, 1.0161 45.37%, 1.029 46.75%, 1.0341 48.1%, 1.0335 49.04%, 1.0295 50.05%, 1.0221 51.18%, 0.992 55.02%, 0.9854 56.38%, 0.9827 57.72%, 0.985 59.73%, 1.004 64.67%, 1.0088 67.34%, 1.0076 69.42%, 0.9981 74.28%, 0.9956 76.85%, 0.9961 79.06%, 1.0023 86.46%, 0.999 95.22%, 0.9994 100%);
}

* {
  --motion-origin-scale-x: 100%;
  --motion-origin-scale-y: 100%;
  --motion-origin-translate-x: 0%;
  --motion-origin-translate-y: 0%;
  --motion-origin-rotate: 0deg;
  --motion-origin-blur: 0px;
  --motion-origin-grayscale: 0%;
  --motion-origin-opacity: 100%;
  --motion-origin-background-color: ;
  --motion-origin-text-color: ;
  --motion-end-scale-x: 100%;
  --motion-end-scale-y: 100%;
  --motion-end-translate-x: 0%;
  --motion-end-translate-y: 0%;
  --motion-end-rotate: 0deg;
  --motion-end-blur: 0px;
  --motion-end-grayscale: 0%;
  --motion-end-opacity: 100%;
  --motion-end-background-color: ;
  --motion-end-text-color: ;
  --motion-loop-scale-x: 100%;
  --motion-loop-scale-y: 100%;
  --motion-loop-translate-x: 0%;
  --motion-loop-translate-y: 0%;
  --motion-loop-rotate: 0deg;
  --motion-loop-blur: 0px;
  --motion-loop-grayscale: 0%;
  --motion-loop-opacity: 100%;
  --motion-loop-background-color: ;
  --motion-loop-text-color: ;
  --motion-duration: 700ms;
  --motion-timing: var(--motion-default-timing);
  --motion-perceptual-duration-multiplier: 1;
  --motion-delay: 0ms;
  --motion-loop-count: infinite;
  --motion-scale-duration: var(--motion-duration);
  --motion-scale-timing: var(--motion-timing);
  --motion-scale-perceptual-duration-multiplier: var(--motion-perceptual-duration-multiplier);
  --motion-scale-delay: var(--motion-delay);
  --motion-scale-loop-count: var(--motion-loop-count);
  --motion-translate-duration: var(--motion-duration);
  --motion-translate-timing: var(--motion-timing);
  --motion-translate-perceptual-duration-multiplier: var(--motion-perceptual-duration-multiplier);
  --motion-translate-delay: var(--motion-delay);
  --motion-translate-loop-count: var(--motion-loop-count);
  --motion-rotate-duration: var(--motion-duration);
  --motion-rotate-timing: var(--motion-timing);
  --motion-rotate-perceptual-duration-multiplier: var(--motion-perceptual-duration-multiplier);
  --motion-rotate-delay: var(--motion-delay);
  --motion-rotate-loop-count: var(--motion-loop-count);
  --motion-filter-duration: var(--motion-duration);
  --motion-filter-timing: var(--motion-timing);
  --motion-filter-perceptual-duration-multiplier: var(--motion-perceptual-duration-multiplier);
  --motion-filter-delay: var(--motion-delay);
  --motion-filter-loop-count: var(--motion-loop-count);
  --motion-opacity-duration: var(--motion-duration);
  --motion-opacity-timing: var(--motion-timing);
  --motion-opacity-perceptual-duration-multiplier: var(--motion-perceptual-duration-multiplier);
  --motion-opacity-delay: var(--motion-delay);
  --motion-opacity-loop-count: var(--motion-loop-count);
  --motion-background-color-duration: var(--motion-duration);
  --motion-background-color-timing: var(--motion-timing);
  --motion-background-color-perceptual-duration-multiplier: var(--motion-perceptual-duration-multiplier);
  --motion-background-color-delay: var(--motion-delay);
  --motion-background-color-loop-count: var(--motion-loop-count);
  --motion-text-color-duration: var(--motion-duration);
  --motion-text-color-timing: var(--motion-timing);
  --motion-text-color-perceptual-duration-multiplier: var(--motion-perceptual-duration-multiplier);
  --motion-text-color-delay: var(--motion-delay);
  --motion-text-color-loop-count: var(--motion-loop-count);
  --motion-scale-in-animation: none;
  --motion-translate-in-animation: none;
  --motion-rotate-in-animation: none;
  --motion-filter-in-animation: none;
  --motion-opacity-in-animation: none;
  --motion-background-color-in-animation: none;
  --motion-text-color-in-animation: none;
  --motion-scale-out-animation: none;
  --motion-translate-out-animation: none;
  --motion-rotate-out-animation: none;
  --motion-filter-out-animation: none;
  --motion-opacity-out-animation: none;
  --motion-background-color-out-animation: none;
  --motion-text-color-out-animation: none;
  --motion-scale-loop-animation: none;
  --motion-translate-loop-animation: none;
  --motion-rotate-loop-animation: none;
  --motion-filter-loop-animation: none;
  --motion-opacity-loop-animation: none;
  --motion-background-color-loop-animation: none;
  --motion-text-color-loop-animation: none;
  --motion-all-enter-animations: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation);
  --motion-all-exit-animations: var(--motion-scale-out-animation), var(--motion-translate-out-animation), var(--motion-rotate-out-animation), var(--motion-filter-out-animation), var(--motion-opacity-out-animation), var(--motion-background-color-out-animation), var(--motion-text-color-out-animation);
  --motion-all-loop-animations: var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
  --motion-all-loop-and-enter-animations: var(--motion-all-loop-animations), var(--motion-all-enter-animations);
}

@media screen and (prefers-reduced-motion: no-preference) {
  @keyframes motion-scale-in {
    0% {
      scale: var(--motion-origin-scale-x) var(--motion-origin-scale-y);
    }

    100% {
      scale: 1 1;
    }
  }

  @keyframes motion-scale-out {
    0% {
      scale: 1 1;
    }

    100% {
      scale: var(--motion-end-scale-x) var(--motion-end-scale-y);
    }
  }

  @keyframes motion-scale-loop-mirror {
    0%, 100% {
      scale: 1 1;
    }

    50% {
      scale: var(--motion-loop-scale-x) var(--motion-loop-scale-y);
    }
  }

  @keyframes motion-scale-loop-reset {
    0% {
      scale: 1 1;
    }

    100% {
      scale: var(--motion-loop-scale-x) var(--motion-loop-scale-y);
    }
  }

  @keyframes motion-translate-in {
    0% {
      translate: var(--motion-origin-translate-x) var(--motion-origin-translate-y);
    }

    100% {
      translate: 0 0;
    }
  }

  @keyframes motion-translate-out {
    0% {
      translate: 0 0;
    }

    100% {
      translate: var(--motion-end-translate-x) var(--motion-end-translate-y);
    }
  }

  @keyframes motion-translate-loop-mirror {
    0%, 100% {
      translate: 0 0;
    }

    50% {
      translate: var(--motion-loop-translate-x) var(--motion-loop-translate-y);
    }
  }

  @keyframes motion-translate-loop-reset {
    0% {
      translate: 0 0;
    }

    100% {
      translate: var(--motion-loop-translate-x) var(--motion-loop-translate-y);
    }
  }

  @keyframes motion-rotate-in {
    0% {
      rotate: var(--motion-origin-rotate);
    }

    100% {
      rotate: 0;
    }
  }

  @keyframes motion-rotate-out {
    0% {
      rotate: 0;
    }

    100% {
      rotate: var(--motion-end-rotate);
    }
  }

  @keyframes motion-rotate-loop-mirror {
    0%, 100% {
      rotate: 0deg;
    }

    50% {
      rotate: var(--motion-loop-rotate);
    }
  }

  @keyframes motion-rotate-loop-reset {
    0% {
    }

    100% {
      rotate: var(--motion-loop-rotate);
    }
  }
}

@keyframes motion-filter-in {
  0% {
    filter: blur(var(--motion-origin-blur)) grayscale(var(--motion-origin-grayscale));
  }

  100% {
    filter: blur(0) grayscale(0);
  }
}

@keyframes motion-filter-out {
  0% {
    filter: blur(0) grayscale(0);
  }

  100% {
    filter: blur(var(--motion-end-blur)) grayscale(var(--motion-end-grayscale));
  }
}

@keyframes motion-filter-loop-mirror {
  0%, 100% {
    filter: blur(0) grayscale(0);
  }

  50% {
    filter: blur(var(--motion-loop-blur)) grayscale(var(--motion-loop-grayscale));
  }
}

@keyframes motion-filter-loop-reset {
  0% {
    filter: blur(0) grayscale(0);
  }

  100% {
    filter: blur(var(--motion-loop-blur)) grayscale(var(--motion-loop-grayscale));
  }
}

@keyframes motion-opacity-in {
  0% {
    opacity: var(--motion-origin-opacity);
  }
}

@keyframes motion-opacity-out {
  100% {
    opacity: var(--motion-end-opacity);
  }
}

@keyframes motion-opacity-loop-mirror {
  0%, 100% {
  }

  50% {
    opacity: var(--motion-loop-opacity);
  }
}

@keyframes motion-opacity-loop-reset {
  0% {
  }

  100% {
    opacity: var(--motion-loop-opacity);
  }
}

@keyframes motion-background-color-in {
  0% {
    background-color: var(--motion-origin-background-color);
  }
}

@keyframes motion-background-color-out {
  100% {
    background-color: var(--motion-end-background-color);
  }
}

@keyframes motion-background-color-loop-mirror {
  0%, 100% {
  }

  50% {
    background-color: var(--motion-loop-background-color);
  }
}

@keyframes motion-background-color-loop-reset {
  0% {
  }

  100% {
    background-color: var(--motion-loop-background-color);
  }
}

@keyframes motion-text-color-in {
  0% {
    color: var(--motion-origin-text-color);
  }
}

@keyframes motion-text-color-out {
  100% {
    color: var(--motion-end-text-color);
  }
}

@keyframes motion-text-color-loop-mirror {
  0%, 100% {
  }

  50% {
    color: var(--motion-loop-text-color);
  }
}

@keyframes motion-text-color-loop-reset {
  0% {
  }

  100% {
    color: var(--motion-loop-text-color);
  }
}

.container {
  width: 100%;
}

@media (min-width: 640px) {
  .container {
    max-width: 640px;
  }
}

@media (min-width: 768px) {
  .container {
    max-width: 768px;
  }
}

@media (min-width: 1024px) {
  .container {
    max-width: 1024px;
  }
}

@media (min-width: 1280px) {
  .container {
    max-width: 1280px;
  }
}

@media (min-width: 1536px) {
  .container {
    max-width: 1536px;
  }
}

.icon-\[solar--user-bold\] {
  display: inline-block;
  width: 1em;
  height: 1em;
  background-color: currentColor;
  -webkit-mask-image: var(--svg);
  mask-image: var(--svg);
  -webkit-mask-repeat: no-repeat;
  mask-repeat: no-repeat;
  -webkit-mask-size: 100% 100%;
  mask-size: 100% 100%;
  --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Ccircle cx='12' cy='6' r='4' fill='black'/%3E%3Cpath fill='black' d='M20 17.5c0 2.485 0 4.5-8 4.5s-8-2.015-8-4.5S7.582 13 12 13s8 2.015 8 4.5'/%3E%3C/svg%3E");
}

.icon-\[tabler--building\] {
  display: inline-block;
  width: 1em;
  height: 1em;
  background-color: currentColor;
  -webkit-mask-image: var(--svg);
  mask-image: var(--svg);
  -webkit-mask-repeat: no-repeat;
  mask-repeat: no-repeat;
  -webkit-mask-size: 100% 100%;
  mask-size: 100% 100%;
  --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M3 21h18M9 8h1m-1 4h1m-1 4h1m4-8h1m-1 4h1m-1 4h1M5 21V5a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2v16'/%3E%3C/svg%3E");
}

.icon-\[tabler--check\] {
  display: inline-block;
  width: 1em;
  height: 1em;
  background-color: currentColor;
  -webkit-mask-image: var(--svg);
  mask-image: var(--svg);
  -webkit-mask-repeat: no-repeat;
  mask-repeat: no-repeat;
  -webkit-mask-size: 100% 100%;
  mask-size: 100% 100%;
  --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='m5 12l5 5L20 7'/%3E%3C/svg%3E");
}

.icon-\[tabler--home\] {
  display: inline-block;
  width: 1em;
  height: 1em;
  background-color: currentColor;
  -webkit-mask-image: var(--svg);
  mask-image: var(--svg);
  -webkit-mask-repeat: no-repeat;
  mask-repeat: no-repeat;
  -webkit-mask-size: 100% 100%;
  mask-size: 100% 100%;
  --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M5 12H3l9-9l9 9h-2M5 12v7a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2v-7'/%3E%3Cpath d='M9 21v-6a2 2 0 0 1 2-2h2a2 2 0 0 1 2 2v6'/%3E%3C/g%3E%3C/svg%3E");
}

.icon-\[tabler--logout\] {
  display: inline-block;
  width: 1em;
  height: 1em;
  background-color: currentColor;
  -webkit-mask-image: var(--svg);
  mask-image: var(--svg);
  -webkit-mask-repeat: no-repeat;
  mask-repeat: no-repeat;
  -webkit-mask-size: 100% 100%;
  mask-size: 100% 100%;
  --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M14 8V6a2 2 0 0 0-2-2H5a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h7a2 2 0 0 0 2-2v-2'/%3E%3Cpath d='M9 12h12l-3-3m0 6l3-3'/%3E%3C/g%3E%3C/svg%3E");
}

.icon-\[tabler--mail\] {
  display: inline-block;
  width: 1em;
  height: 1em;
  background-color: currentColor;
  -webkit-mask-image: var(--svg);
  mask-image: var(--svg);
  -webkit-mask-repeat: no-repeat;
  mask-repeat: no-repeat;
  -webkit-mask-size: 100% 100%;
  mask-size: 100% 100%;
  --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M3 7a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z'/%3E%3Cpath d='m3 7l9 6l9-6'/%3E%3C/g%3E%3C/svg%3E");
}

.icon-\[tabler--menu-2\] {
  display: inline-block;
  width: 1em;
  height: 1em;
  background-color: currentColor;
  -webkit-mask-image: var(--svg);
  mask-image: var(--svg);
  -webkit-mask-repeat: no-repeat;
  mask-repeat: no-repeat;
  -webkit-mask-size: 100% 100%;
  mask-size: 100% 100%;
  --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M4 6h16M4 12h16M4 18h16'/%3E%3C/svg%3E");
}

.icon-\[tabler--message\] {
  display: inline-block;
  width: 1em;
  height: 1em;
  background-color: currentColor;
  -webkit-mask-image: var(--svg);
  mask-image: var(--svg);
  -webkit-mask-repeat: no-repeat;
  mask-repeat: no-repeat;
  -webkit-mask-size: 100% 100%;
  mask-size: 100% 100%;
  --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M8 9h8m-8 4h6m4-9a3 3 0 0 1 3 3v8a3 3 0 0 1-3 3h-5l-5 3v-3H6a3 3 0 0 1-3-3V7a3 3 0 0 1 3-3z'/%3E%3C/svg%3E");
}

.icon-\[tabler--package\] {
  display: inline-block;
  width: 1em;
  height: 1em;
  background-color: currentColor;
  -webkit-mask-image: var(--svg);
  mask-image: var(--svg);
  -webkit-mask-repeat: no-repeat;
  mask-repeat: no-repeat;
  -webkit-mask-size: 100% 100%;
  mask-size: 100% 100%;
  --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='m12 3l8 4.5v9L12 21l-8-4.5v-9zm0 9l8-4.5M12 12v9m0-9L4 7.5m12-2.25l-8 4.5'/%3E%3C/svg%3E");
}

.icon-\[tabler--shopping-cart\] {
  display: inline-block;
  width: 1em;
  height: 1em;
  background-color: currentColor;
  -webkit-mask-image: var(--svg);
  mask-image: var(--svg);
  -webkit-mask-repeat: no-repeat;
  mask-repeat: no-repeat;
  -webkit-mask-size: 100% 100%;
  mask-size: 100% 100%;
  --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M4 19a2 2 0 1 0 4 0a2 2 0 1 0-4 0m11 0a2 2 0 1 0 4 0a2 2 0 1 0-4 0'/%3E%3Cpath d='M17 17H6V3H4'/%3E%3Cpath d='m6 5l14 1l-1 7H6'/%3E%3C/g%3E%3C/svg%3E");
}

.icon-\[tabler--trash\] {
  display: inline-block;
  width: 1em;
  height: 1em;
  background-color: currentColor;
  -webkit-mask-image: var(--svg);
  mask-image: var(--svg);
  -webkit-mask-repeat: no-repeat;
  mask-repeat: no-repeat;
  -webkit-mask-size: 100% 100%;
  mask-size: 100% 100%;
  --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M4 7h16m-10 4v6m4-6v6M5 7l1 12a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2l1-12M9 7V4a1 1 0 0 1 1-1h4a1 1 0 0 1 1 1v3'/%3E%3C/svg%3E");
}

.icon-\[tabler--trending-down\] {
  display: inline-block;
  width: 1em;
  height: 1em;
  background-color: currentColor;
  -webkit-mask-image: var(--svg);
  mask-image: var(--svg);
  -webkit-mask-repeat: no-repeat;
  mask-repeat: no-repeat;
  -webkit-mask-size: 100% 100%;
  mask-size: 100% 100%;
  --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='m3 7l6 6l4-4l8 8'/%3E%3Cpath d='M21 10v7h-7'/%3E%3C/g%3E%3C/svg%3E");
}

.icon-\[tabler--trending-up\] {
  display: inline-block;
  width: 1em;
  height: 1em;
  background-color: currentColor;
  -webkit-mask-image: var(--svg);
  mask-image: var(--svg);
  -webkit-mask-repeat: no-repeat;
  mask-repeat: no-repeat;
  -webkit-mask-size: 100% 100%;
  mask-size: 100% 100%;
  --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cg fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='m3 17l6-6l4 4l8-8'/%3E%3Cpath d='M14 7h7v7'/%3E%3C/g%3E%3C/svg%3E");
}

.icon-\[tabler--user\] {
  display: inline-block;
  width: 1em;
  height: 1em;
  background-color: currentColor;
  -webkit-mask-image: var(--svg);
  mask-image: var(--svg);
  -webkit-mask-repeat: no-repeat;
  mask-repeat: no-repeat;
  -webkit-mask-size: 100% 100%;
  mask-size: 100% 100%;
  --svg: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' width='24' height='24'%3E%3Cpath fill='none' stroke='black' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M8 7a4 4 0 1 0 8 0a4 4 0 0 0-8 0M6 21v-2a4 4 0 0 1 4-4h4a4 4 0 0 1 4 4v2'/%3E%3C/svg%3E");
}

.advance-select-option {
  width: 100%;
  cursor: pointer;
  padding-left: 1rem;
  padding-right: 1rem;
  padding-top: 0.625rem;
  padding-bottom: 0.625rem;
  border-radius: var(--rounded-btn, 0.375rem);
  font-size: 1rem;
  line-height: 1.375rem;
  font-weight: 400;
  --tw-text-opacity: 1;
  color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity, 1)));
}

.alert {
  position: relative;
  width: 100%;
  padding: 1rem;
  font-size: 1rem;
  line-height: 1.375rem;
  border-radius: var(--rounded-box, 0.5rem);
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b2,oklch(var(--b2)/var(--tw-bg-opacity, 1)));
  color: var(--fallback-bc,oklch(var(--bc)/0.8));
}

.avatar.placeholder > div {
  display: flex;
  align-items: center;
  justify-content: center;
}

.badge {
  display: inline-flex;
  height: 1.5rem;
  align-items: center;
  justify-content: center;
  gap: 0.375rem;
  padding-left: 0.75rem;
  padding-right: 0.75rem;
  text-align: center;
  font-size: 0.875rem;
  line-height: 1.25rem;
  font-weight: 400;
  width: -moz-fit-content;
  width: fit-content;
  border-radius: var(--rounded-btn, 0.375rem);
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b2,oklch(var(--b2)/var(--tw-bg-opacity, 1)));
  --tw-text-opacity: 1;
  color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity, 1)));
}

.btn {
  display: inline-flex;
  height: 2.375rem;
  min-height: 2.375rem;
  flex-shrink: 0;
  cursor: pointer;
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
  flex-wrap: wrap;
  align-items: center;
  justify-content: center;
  padding-left: 1rem;
  padding-right: 1rem;
  font-size: 1rem;
  line-height: 1.375rem;
  font-weight: 500;
  gap: 0.5rem;
  border-radius: var(--rounded-btn, 0.375rem);
  border-color: currentColor;
  border-color: oklch(var(--btn-color, var(--b2)) / var(--tw-border-opacity));
  text-decoration-line: none;
  transition-duration: 200ms;
  transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
  border-width: var(--border-btn, 1px);
  transition-property: color, background-color, border-color, opacity, box-shadow, transform;
  --tw-text-opacity: 1;
  color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity, 1)));
  --tw-shadow: 0 2px 4px 0 var(--fallback-bs,oklch(var(--bs)/0.26));
  --tw-shadow-colored: 0 2px 4px 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  outline-color: var(--fallback-bc,oklch(var(--bc)/1));
  background-color: oklch(var(--btn-color, var(--b2)) / var(--tw-bg-opacity));
  --tw-bg-opacity: 1;
  --tw-border-opacity: 1;
}

.btn-disabled,
  .btn[disabled],
  .btn:disabled {
  pointer-events: none;
}

.btn-circle {
  height: 2.375rem;
  width: 2.375rem;
  border-radius: 9999px;
  padding: 0px;
}

:where(.btn:is(input[type="checkbox"])),
:where(.btn:is(input[type="radio"])) {
  width: auto;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
}

.btn:is(input[type="checkbox"]):after,
.btn:is(input[type="radio"]):after {
  --tw-content: attr(aria-label);
  content: var(--tw-content);
}

.card {
  position: relative;
  display: flex;
  flex-direction: column;
  border-radius: var(--rounded-box, 0.5rem);
  border-color: var(--fallback-bc,oklch(var(--bc)/0.4));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1)));
  color: var(--fallback-bc,oklch(var(--bc)/0.8));
  box-shadow: var(--card-shadow, 0px 2px 4px 0px oklch(var(--bs) / 0.26));
  border-width: var(--card-border, 0px);
}

.card:focus {
  outline: 2px solid transparent;
  outline-offset: 2px;
}

.card figure {
  display: flex;
  align-items: center;
  justify-content: center;
}

.card.image-full {
  display: grid;
}

.card.image-full:before {
  position: relative;
  content: "";
  z-index: 10;
  border-radius: var(--rounded-box, 0.5rem);
  background-image: linear-gradient(0deg, rgba(0, 0, 0, 0.58) 0%, rgba(0, 0, 0, 0.58) 100%);
}

.card.image-full:before,
    .card.image-full > * {
  grid-column-start: 1;
  grid-row-start: 1;
}

.card.image-full > figure img {
  height: 100%;
  -o-object-fit: cover;
     object-fit: cover;
}

.card.image-full > .card-body {
  position: relative;
  z-index: 20;
  --tw-text-opacity: 1;
  color: var(--fallback-nc,oklch(var(--nc)/var(--tw-text-opacity, 1)));
}

:where(.card figure > *) {
  width: 100%;
}

.card-group > .card {
  flex: 1 0 0%;
  border-radius: 0px;
  --card-shadow: none;
  --card-border: 0;
}

.carousel {
  position: relative;
  width: 100%;
  overflow: hidden;
  border-radius: 1rem;
}

.carousel-body {
  display: flex;
  flex-wrap: nowrap;
}

.carousel-prev,
.carousel-next {
  position: absolute;
  top: 0px;
  bottom: 0px;
  display: inline-flex;
  height: 100%;
  width: 10%;
  align-items: center;
  justify-content: center;
  color: var(--fallback-bc,oklch(var(--bc)/0.8));
}

@media not all and (min-width: 640px) {
  .carousel-prev,
.carousel-next {
    width: 18%;
  }
}

.carousel-prev {
  inset-inline-start: 0px;
  border-start-start-radius: 1rem;
  border-end-start-radius: 1rem;
}

.carousel-next {
  inset-inline-end: 0px;
  border-start-end-radius: 1rem;
  border-end-end-radius: 1rem;
}

.active.carousel-box {
  --tw-bg-opacity: 1;
  background-color: var(--fallback-p,oklch(var(--p)/var(--tw-bg-opacity, 1)));
}

.active .carousel-box {
  --tw-bg-opacity: 1;
  background-color: var(--fallback-p,oklch(var(--p)/var(--tw-bg-opacity, 1)));
}

.active.carousel-dot {
  --tw-bg-opacity: 1;
  background-color: var(--fallback-p,oklch(var(--p)/var(--tw-bg-opacity, 1)));
}

.active .carousel-dot {
  --tw-bg-opacity: 1;
  background-color: var(--fallback-p,oklch(var(--p)/var(--tw-bg-opacity, 1)));
}

.checkbox {
  flex-shrink: 0;
  --chkbg: var(--fallback-n,oklch(var(--n)/1));
  --chkfg: var(--fallback-nc,oklch(var(--nc)/1));
  position: relative;
  width: 1.5rem;
  height: 1.5rem;
  cursor: pointer;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  border-radius: var(--rounded-btn, 0.375rem);
  border-width: 1.5px;
  border-color: var(--fallback-bc,oklch(var(--bc)/0.4));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1)));
}

.collapse:not(td):not(tr):not(colgroup) {
  visibility: visible;
}

.diff {
  position: relative;
  display: grid;
  width: 100%;
  overflow: hidden;
  container-type: inline-size;
  grid-template-columns: auto 1fr;
}

.drawer {
  position: fixed;
  z-index: 80;
  display: flex;
  width: 100%;
  height: 100%;
  max-width: 24rem;
  flex-direction: column;
  justify-content: space-between;
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1)));
  --tw-shadow: 0 4px 6px -1px var(--fallback-bs,oklch(var(--bs)/0.2));
  --tw-shadow-colored: 0 4px 6px -1px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.drawer-body {
  flex-grow: 1;
  overflow-y: auto;
  padding-left: 1.5rem;
  padding-right: 1.5rem;
  font-size: 1rem;
  line-height: 1.375rem;
  overflow-x: hidden;
}

.drawer-body::-webkit-scrollbar {
  width: 0.5rem;
}

.drawer-body:last-child {
  padding-bottom: 1.5rem;
}

.dropdown-menu {
  z-index: 10;
  margin-top: 0.5rem;
  text-wrap: nowrap;
  padding: 0.5rem;
  font-size: 1rem;
  line-height: 1.375rem;
  opacity: 0;
  transition-property: opacity,margin;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 300ms;
  border-radius: var(--rounded-box, 0.5rem);
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1)));
  --tw-shadow: 0 10px 15px -2px var(--fallback-bs,oklch(var(--bs)/0.34));
  --tw-shadow-colored: 0 10px 15px -2px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.dropdown-item {
  clear: both;
  display: flex;
  width: 100%;
  align-items: center;
  -moz-column-gap: 0.5rem;
       column-gap: 0.5rem;
  padding-left: 1rem;
  padding-right: 1rem;
  padding-top: 0.625rem;
  padding-bottom: 0.625rem;
  text-align: inherit;
  border-radius: var(--rounded-btn, 0.375rem);
  background-color: transparent;
  --tw-text-opacity: 1;
  color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity, 1)));
  text-decoration-line: none;
  text-decoration-thickness: 0px;
}

.dropdown-header,
.dropdown-footer {
  position: static;
  display: flex;
  align-items: center;
  padding-left: 1rem;
  padding-right: 1rem;
  padding-top: 0.625rem;
  padding-bottom: 0.625rem;
  border-color: var(--fallback-bc,oklch(var(--bc)/0.1));
  color: var(--fallback-bc,oklch(var(--bc)/0.8));
}

.dropdown-header {
  margin: -0.5rem;
  margin-bottom: 0.5rem;
  border-top-left-radius: var(--rounded-box, 0.5rem);
  border-top-right-radius: var(--rounded-box, 0.5rem);
  border-bottom-width: 1px;
}

.dropdown-footer {
  margin-left: -0.5rem;
  margin-right: -0.5rem;
  margin-bottom: -0.5rem !important;
  border-bottom-right-radius: var(--rounded-box, 0.5rem);
  border-bottom-left-radius: var(--rounded-box, 0.5rem);
  border-top-width: 1px;
}

.footer {
  display: grid;
  width: 100%;
  grid-auto-flow: row;
  place-items: start;
  -moz-column-gap: 1rem;
       column-gap: 1rem;
  row-gap: 2.5rem;
  color: var(--fallback-bc,oklch(var(--bc)/0.8));
}

.footer > * {
  display: grid;
  place-items: start;
  gap: 0.75rem;
}

@media (min-width: 48rem) {
  .footer {
    grid-auto-flow: column;
  }

  .footer-center {
    grid-auto-flow: row dense;
  }
}

.label:where(:not(.label-text)) {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

.indicator {
  position: relative;
  display: inline-flex;
  width: -moz-max-content;
  width: max-content;
}

.indicator :where(.indicator-item) {
  z-index: 1;
  position: absolute;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  white-space: nowrap;
}

.input {
  height: 2.375rem;
  width: 100%;
  flex-shrink: 1;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  padding-left: 0.75rem;
  padding-right: 0.75rem;
  font-size: 1rem;
  line-height: 1.375rem;
  font-weight: 400;
  border-radius: var(--rounded-btn, 0.375rem);
  border-width: 1px;
  border-color: var(--fallback-bc,oklch(var(--bc)/0.4));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1)));
  color: var(--fallback-bc,oklch(var(--bc)/0.8));
  transition: border-color 0.15s ease-in-out,
    box-shadow 0.15s ease-in-out;
}

.input::file-selector-button {
  margin-inline-end: 1rem;
  display: inline-flex;
  height: 100%;
  flex-shrink: 0;
  cursor: pointer;
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
  flex-wrap: wrap;
  align-items: center;
  justify-content: center;
  padding-left: 1rem;
  padding-right: 1rem;
  text-align: center;
  font-size: 0.875rem;
  line-height: 1.25rem;
  line-height: 1em;
  border-start-start-radius: var(--rounded-btn, 0.375rem);
  border-end-start-radius: var(--rounded-btn, 0.375rem);
  border-width: 0px;
  background-color: var(--fallback-bc,oklch(var(--bc)/0.2));
  font-weight: 600;
  text-transform: uppercase;
  --tw-text-opacity: 1;
  color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity, 1)));
  text-decoration-line: none;
}

.input[type="number"]::-webkit-inner-spin-button {
  margin-top: -0.25rem;
  margin-bottom: -0.25rem;
  margin-inline-end: -0.25rem;
}

.input[type="file"] {
  padding-left: 0px;
  padding-right: 0px;
}

.join {
  display: inline-flex;
  align-items: stretch;
  border-radius: var(--rounded-btn, 0.375rem);
}

.join :where(.join-item) {
  border-start-end-radius: 0;
  border-end-end-radius: 0;
  border-end-start-radius: 0;
  border-start-start-radius: 0;
}

.join .join-item:not(:first-child):not(:last-child),
  .join *:not(:first-child):not(:last-child) .join-item {
  border-start-end-radius: 0;
  border-end-end-radius: 0;
  border-end-start-radius: 0;
  border-start-start-radius: 0;
}

.join > .join-item:first-child:not(:last-child),
  .join *:first-child:not(:last-child) .join-item {
  border-start-end-radius: 0;
  border-end-end-radius: 0;
}

.join > :where(.join-item:first-child:not(:last-child)),
  .join :where(*:first-child:not(:last-child) .join-item) {
  border-end-start-radius: inherit;
  border-start-start-radius: inherit;
}

.join > .join-item:last-child:not(:first-child),
  .join *:last-child:not(:first-child) .join-item {
  border-end-start-radius: 0;
  border-start-start-radius: 0;
}

.join > :where(.join-item:last-child:not(:first-child)),
  .join :where(*:last-child:not(:first-child) .join-item) {
  border-start-end-radius: inherit;
  border-end-end-radius: inherit;
}

@supports not selector(:has(*)) {
  :where(.join *) {
    border-radius: inherit;
  }
}

@supports selector(:has(*)) {
  :where(.join *:has(.join-item)) {
    border-radius: inherit;
  }
}

.\!link {
  display: inline-block !important;
  cursor: pointer !important;
  text-decoration-line: underline !important;
}

.link {
  display: inline-block;
  cursor: pointer;
  text-decoration-line: underline;
}

@media (hover:hover) {
  .label a:hover {
    --tw-text-opacity: 1;
    color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity, 1)));
  }

  .menu li:not(.disabled, :disabled, [disabled]) > :not(ul, .menu-title, .collapse, .btn):active,
.menu li:not(.disabled, :disabled, [disabled]) > :not(ul, .menu-title, .collapse, .btn).active {
    background-color: var(--fallback-p,oklch(var(--p)/0.1));
    --tw-text-opacity: 1;
    color: var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity, 1)));
  }

  .radio.is-valid:hover,
.validate .radio:valid:hover {
    --tw-border-opacity: 1 !important;
    border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity, 1))) !important;
  }

  .radio.is-invalid:hover,
.validate .radio:invalid:hover {
    --tw-border-opacity: 1 !important;
    border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity, 1))) !important;
  }

  .radio-inset.is-valid:hover,
.validate .radio-inset:valid:hover {
    --tw-border-opacity: 1 !important;
    border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity, 1))) !important;
  }

  .radio-inset.is-invalid:hover,
.validate .radio-inset:invalid:hover {
    --tw-border-opacity: 1 !important;
    border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity, 1))) !important;
  }

  .tabs-bordered > .tab:hover {
    border-color: var(--fallback-p,oklch(var(--p)/0.3));
    --tw-text-opacity: 1;
    color: var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity, 1)));
  }

  .tabs-lifted > .tab:hover {
    border-color: var(--fallback-p,oklch(var(--p)/0.3));
    --tw-text-opacity: 1;
    color: var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity, 1)));
  }

  .\!table tr.hover:hover,
  .\!table tr.hover:nth-child(even):hover {
    background-color: var(--fallback-bc,oklch(var(--bc)/0.05)) !important;
  }

  .table tr.hover:hover,
  .table tr.hover:nth-child(even):hover {
    background-color: var(--fallback-bc,oklch(var(--bc)/0.05));
  }

  .\!table tr.hover:hover,
  .\!table tr.hover:nth-child(even):hover {
    background-color: var(--fallback-bc,oklch(var(--bc)/0.05)) !important;
  }

  .table-striped tr.hover,
  .table-striped tr.hover:nth-child(even) {
    background-color: var(--fallback-bc,oklch(var(--bc)/0.05));
  }
}

.mask {
  -webkit-mask-size: contain;
          mask-size: contain;
  -webkit-mask-repeat: no-repeat;
          mask-repeat: no-repeat;
  -webkit-mask-position: center;
          mask-position: center;
}

.menu {
  display: flex;
  flex-direction: column;
  flex-wrap: wrap;
  gap: 0.125rem;
  border-radius: var(--rounded-box, 0.5rem);
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1)));
  padding: 0.5rem;
}

.menu :where(li ul) {
  position: relative;
  white-space: nowrap;
}

.menu :where(li:not(.menu-title) > *:not(ul, .collapse, .menu-title, .btn)) {
  display: grid;
  grid-auto-flow: column;
  align-content: flex-start;
  align-items: center;
  gap: 0.5rem;
  grid-auto-columns: minmax(auto, max-content) auto max-content;
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
}

.menu :where(li > .menu-dropdown:not(.menu-dropdown-show)) {
  display: none;
}

:where(.menu li) {
  position: relative;
  display: flex;
  flex-shrink: 0;
  flex-direction: column;
  flex-wrap: wrap;
  align-items: stretch;
}

:where(.menu li) .badge {
  justify-self: end;
}

.modal {
  pointer-events: none;
  position: fixed;
  inset: 0px;
  z-index: 80;
  margin: 0px;
  display: grid;
  width: 100%;
  height: 100%;
  justify-items: center;
  padding: 1rem;
  opacity: 0;
  transition-property: all;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.navbar {
  display: flex;
  align-items: center;
  padding: var(--navbar-padding, 0.75rem 1.5rem);
  width: 100%;
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1)));
}

.navbar-end {
  display: flex;
  width: 50%;
  justify-content: flex-end;
}

.pin-input {
  width: 2.375rem;
  height: 2.375rem;
  text-align: center;
  font-size: 1rem;
  line-height: 1.375rem;
  border-radius: var(--rounded-btn, 0.375rem);
  border-width: 1px;
  border-color: var(--fallback-bc,oklch(var(--bc)/0.25));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1)));
  transition: border-color 0.15s ease-in-out,
    box-shadow 0.15s ease-in-out;
}

.progress {
  display: flex;
  height: 0.375rem;
  width: 100%;
  overflow: hidden;
  border-radius: 9999px;
  --progress-color: var(--fallback-n,oklch(var(--n)/1));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b2,oklch(var(--b2)/var(--tw-bg-opacity, 1)));
}

.progress-bar {
  display: flex;
  align-items: center;
  justify-content: center;
  overflow: hidden;
  white-space: nowrap;
  border-radius: 9999px;
  font-size: 0.75rem;
  line-height: 1rem;
  font-weight: 500;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
  transition-duration: 500ms;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  --tw-bg-opacity: 1;
  background-color: var(--fallback-bc,oklch(var(--bc)/var(--tw-bg-opacity, 1)));
  --tw-text-opacity: 1;
  color: var(--fallback-b1,oklch(var(--b1)/var(--tw-text-opacity, 1)));
}

.range {
  height: 0.5rem;
  width: 100%;
  -moz-appearance: none;
       appearance: none;
  -webkit-appearance: none;
  --range-shdw: var(--fallback-bc,oklch(var(--bc)/1));
  position: relative;
  border-radius: 9999px;
  background-color: transparent;
  transition-property: all;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.range:focus {
  outline: none;
}

.select {
  display: inline-flex;
  cursor: pointer;
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  height: 2.375rem;
  width: 100%;
  padding-left: 0.75rem;
  padding-right: 0.75rem;
  font-size: 1rem;
  line-height: 2;
  line-height: 1.375rem;
  border-radius: var(--rounded-btn, 0.375rem);
  border-width: 1px;
  border-color: var(--fallback-bc,oklch(var(--bc)/0.4));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1)));
  color: var(--fallback-bc,oklch(var(--bc)/0.8));
  background-image: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='1em' height='1em' viewBox='0 0 24 24'><path fill='none' stroke='%239293AE' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='m6 9l6 6l6-6'/></svg>");
  background-size: 1.3em;
  background-position: calc(100% - 1rem) center;
  background-repeat: no-repeat;
}

.select[multiple] {
  height: auto;
}

.select.select-floating.select-lg .select-floating-label {
  margin-inline-start: 0.75rem;
}

.select.select-floating.select-lg .select-filled-label {
  margin-inline-start: 1rem;
}

.stack {
  display: inline-grid;
  place-items: center;
  align-items: flex-end;
}

.stack > * {
  grid-column-start: 1;
  grid-row-start: 1;
  transform: translateY(14%) scale(0.9);
  z-index: 1;
  width: 100%;
  opacity: 0.6;
}

.stack > *:nth-child(2) {
  transform: translateY(7%) scale(0.95);
  z-index: 2;
  opacity: 0.8;
}

.stack > *:nth-child(1) {
  transform: translateY(0) scale(1) translateX(0);
  z-index: 3;
  opacity: 1;
}

.stats {
  display: inline-grid;
  border-radius: var(--rounded-box, 0.5rem);
  border-color: var(--fallback-bc,oklch(var(--bc)/0.4));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1)));
  color: var(--fallback-bc,oklch(var(--bc)/0.8));
  box-shadow: var(--card-shadow, 0px 2px 4px 0px oklch(var(--bs) / 0.26));
  border-width: var(--card-border, 0px);
}

:where(.stats) {
  grid-auto-flow: column;
  overflow-x: auto;
}

.switch {
  flex-shrink: 0;
  --tglbg: var(--fallback-b3,oklch(var(--b3)/1));
  --handleoffset: 1.35rem;
  --handleoffsetcalculator: calc(var(--handleoffset) * -1);
  --switchhandleborder: 0 0;
  height: 1.5rem;
  width: 2.875rem;
  cursor: pointer;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  overflow: hidden;
  border-radius: 9999px;
  background-color: var(--fallback-b1,oklch(var(--b1)/1));
  transition: background,
    box-shadow var(--animation-input, 0.2s) ease-out;
  box-shadow: var(--handleoffsetcalculator) 0 0 4px var(--tglbg) inset,
    0 0 0 4px var(--tglbg) inset,
    var(--switchhandleborder);
}

.tabs {
  display: flex;
  align-items: flex-end;
}

.tabs-lifted:has(.tab-content[class^="rounded-"]) .tab:first-child:not(.tab-active),
  .tabs-lifted:has(.tab-content[class*=" rounded-"]) .tab:first-child:not(.tab-active) {
  border-bottom-color: transparent;
}

.tab {
  position: relative;
  display: inline-flex;
  height: 2.375rem;
  cursor: pointer;
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  align-items: center;
  justify-content: center;
  text-align: center;
  font-size: 1rem;
  line-height: 1.375rem;
  --tab-padding: 1rem;
  --tw-text-opacity: 1;
  color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity, 1)));
  --tab-bg: var(--fallback-b1,oklch(var(--b1)/1));
  --tab-border-color: var(--fallback-bc,oklch(var(--bc)/0.1));
  padding-inline-start: var(--tab-padding, 1rem);
  padding-inline-end: var(--tab-padding, 1rem);
}

.\!table {
  position: relative !important;
  width: 100% !important;
  border-radius: var(--rounded-box, 0.5rem) !important;
  text-align: left !important;
  font-size: 0.875rem !important;
  line-height: 1.25rem !important;
  overflow-y: auto !important;
  overflow-x: hidden !important;
}

.table {
  position: relative;
  width: 100%;
  border-radius: var(--rounded-box, 0.5rem);
  text-align: left;
  font-size: 0.875rem;
  line-height: 1.25rem;
  overflow-y: auto;
  overflow-x: hidden;
}

.\!table :where(.table-pin-rows thead tr) {
  position: sticky !important;
  top: 0px !important;
  z-index: 1 !important;
  --tw-bg-opacity: 1 !important;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1))) !important;
}

.table :where(.table-pin-rows thead tr) {
  position: sticky;
  top: 0px;
  z-index: 1;
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1)));
}

.\!table :where(.table-pin-rows tfoot tr) {
  position: sticky !important;
  bottom: 0px !important;
  z-index: 1 !important;
  --tw-bg-opacity: 1 !important;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1))) !important;
}

.table :where(.table-pin-rows tfoot tr) {
  position: sticky;
  bottom: 0px;
  z-index: 1;
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1)));
}

.\!table :where(.table-pin-cols tr th) {
  position: sticky !important;
  inset-inline-end: 0px !important;
  inset-inline-start: 0px !important;
  --tw-bg-opacity: 1 !important;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1))) !important;
}

.table :where(.table-pin-cols tr th) {
  position: sticky;
  inset-inline-end: 0px;
  inset-inline-start: 0px;
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1)));
}

.textarea {
  display: block;
  min-height: 5rem;
  width: 100%;
  flex-shrink: 1;
  resize: none;
  padding-left: 1rem;
  padding-right: 1rem;
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
  font-size: 1rem;
  line-height: 1.375rem;
  border-radius: var(--rounded-box, 0.5rem);
  border-width: 1px;
  border-color: var(--fallback-bc,oklch(var(--bc)/0.4));
  color: var(--fallback-bc,oklch(var(--bc)/0.8));
  overflow-y: auto;
  overflow-x: hidden;
}

.\!timeline {
  position: relative !important;
  display: flex !important;
}

.timeline {
  position: relative;
  display: flex;
}

:where(.\!timeline > li) {
  position: relative !important;
  display: grid !important;
  flex-shrink: 0 !important;
  align-items: center !important;
  grid-template-rows: var(--timeline-row-start, minmax(0, 1fr)) auto var(--timeline-row-end, minmax(0, 1fr)) !important;
  grid-template-columns: var(--timeline-col-start, minmax(0, 1fr)) auto var(--timeline-col-end, minmax(0, 1fr)) !important;
}

:where(.timeline > li) {
  position: relative;
  display: grid;
  flex-shrink: 0;
  align-items: center;
  grid-template-rows: var(--timeline-row-start, minmax(0, 1fr)) auto var(--timeline-row-end, minmax(0, 1fr));
  grid-template-columns: var(--timeline-col-start, minmax(0, 1fr)) auto var(--timeline-col-end, minmax(0, 1fr));
}

.\!timeline > li > hr {
  width: 100% !important;
}

.timeline > li > hr {
  width: 100%;
}

:where(.\!timeline > li > hr):first-child {
  grid-column-start: 1 !important;
  grid-row-start: 2 !important;
}

:where(.timeline > li > hr):first-child {
  grid-column-start: 1;
  grid-row-start: 2;
}

:where(.\!timeline > li > hr):last-child {
  grid-column-start: 3 !important;
  grid-column-end: none !important;
  grid-row-start: 2 !important;
  grid-row-end: auto !important;
}

:where(.timeline > li > hr):last-child {
  grid-column-start: 3;
  grid-column-end: none;
  grid-row-start: 2;
  grid-row-end: auto;
}

.tooltip {
  display: inline-block;
  text-align: center;
}

.tooltip-content {
  visibility: hidden;
  position: absolute;
  display: inline-block;
  padding: 0.5rem;
  opacity: 0;
  width: -moz-max-content;
  width: max-content;
  z-index: 20;
  transition-property: opacity;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.accordion-toggle {
  width: 100%;
  cursor: pointer;
  padding-left: 1.25rem;
  padding-right: 1.25rem;
  padding-top: 1rem;
  padding-bottom: 1rem;
  font-size: 1.125rem;
  line-height: 1.5rem;
  font-weight: 500;
  --tw-text-opacity: 1;
  color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity, 1)));
}

.accordion-toggle:disabled {
  pointer-events: none;
  opacity: 0.5;
}

.accordion-shadow :where(.accordion-item) {
  margin-top: 0.5rem;
  margin-bottom: 0.5rem;
  border-radius: var(--rounded-box, 0.5rem);
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1)));
  --tw-shadow: 0 4px 6px -1px var(--fallback-bs,oklch(var(--bs)/0.2));
  --tw-shadow-colored: 0 4px 6px -1px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.accordion-shadow :where(.accordion-item) .accordion-item:first-of-type {
  margin-top: 0px;
}

.accordion-shadow :where(.accordion-item) .accordion-item:last-of-type {
  margin-bottom: 0px;
}

.accordion-shadow :where(.accordion-item) > *:first-child {
  border-top-left-radius: var(--rounded-box, 0.5rem);
  border-top-right-radius: var(--rounded-box, 0.5rem);
}

.accordion-shadow :where(.accordion-item) > *:last-child {
  border-bottom-right-radius: var(--rounded-box, 0.5rem);
  border-bottom-left-radius: var(--rounded-box, 0.5rem);
}

.accordion:where(.accordion-bordered) > :not([hidden]) ~ :not([hidden]) {
  --tw-divide-y-reverse: 0;
  border-top-width: calc(1px * calc(1 - var(--tw-divide-y-reverse)));
  border-bottom-width: calc(1px * var(--tw-divide-y-reverse));
  border-color: var(--fallback-bc,oklch(var(--bc)/0.25));
}

.accordion:where(.accordion-bordered) {
  border-radius: var(--rounded-box, 0.5rem);
  border-width: 1px;
  border-color: var(--fallback-bc,oklch(var(--bc)/0.25));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1)));
}

.disabled.advance-select-toggle {
  pointer-events: none;
  border-width: 0px;
  background-color: var(--fallback-n,oklch(var(--n)/0.1));
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
  color: var(--fallback-n,oklch(var(--n)/0.5));
}

.disabled .advance-select-toggle {
  pointer-events: none;
  border-width: 0px;
  background-color: var(--fallback-n,oklch(var(--n)/0.1));
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
  color: var(--fallback-n,oklch(var(--n)/0.5));
}

.advance-select-option:hover {
  background-color: var(--fallback-n,oklch(var(--n)/0.1));
}

.advance-select-option:focus {
  background-color: var(--fallback-n,oklch(var(--n)/0.1));
  outline: 2px solid transparent;
  outline-offset: 2px;
}

.advance-select-option.active,
  .advance-select-option:active {
  background-color: var(--fallback-p,oklch(var(--p)/0.1));
  --tw-text-opacity: 1;
  color: var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity, 1)));
}

select.is-valid + .advance-select-toggle,
.advance-select-tag:has(> .is-valid),
.validate select:has(~ * > .selected) + .advance-select-toggle {
  --tw-border-opacity: 1;
  border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity, 1)));
}

select.is-valid + .advance-select-toggle:focus,
  select.is-valid + .advance-select-toggle:focus-within,
  .advance-select-tag:has(> .is-valid):focus,
  .advance-select-tag:has(> .is-valid):focus-within,
  .validate select:has(~ * > .selected) + .advance-select-toggle:focus,
  .validate select:has(~ * > .selected) + .advance-select-toggle:focus-within {
  --tw-border-opacity: 1;
  border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity, 1)));
  --tw-shadow: 0 1px 2px 0 var(--fallback-bs,oklch(var(--bs)/0.22));
  --tw-shadow: var(--tw-shadow-colored);
  --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
  --tw-shadow-color: var(--fallback-su,oklch(var(--su)/0.22));
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  --tw-ring-opacity: 1;
  --tw-ring-color: var(--fallback-su,oklch(var(--su)/var(--tw-ring-opacity, 1)));
}

select.is-invalid + .advance-select-toggle,
.advance-select-tag:has(> .is-invalid),
.validate select:not(:has(~ * > .selected)) + .advance-select-toggle {
  --tw-border-opacity: 1;
  border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity, 1)));
}

select.is-invalid + .advance-select-toggle:focus,
  select.is-invalid + .advance-select-toggle:focus-within,
  .advance-select-tag:has(> .is-invalid):focus,
  .advance-select-tag:has(> .is-invalid):focus-within,
  .validate select:not(:has(~ * > .selected)) + .advance-select-toggle:focus,
  .validate select:not(:has(~ * > .selected)) + .advance-select-toggle:focus-within {
  --tw-border-opacity: 1;
  border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity, 1)));
  --tw-shadow: 0 1px 2px 0 var(--fallback-bs,oklch(var(--bs)/0.22));
  --tw-shadow: var(--tw-shadow-colored);
  --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
  --tw-shadow-color: var(--fallback-er,oklch(var(--er)/0.22));
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  --tw-ring-opacity: 1;
  --tw-ring-color: var(--fallback-er,oklch(var(--er)/var(--tw-ring-opacity, 1)));
}

.validate .label:has(~ .advance-select > select:valid) > *,
.validate .label-text:has(~ .advance-select > select:valid),

.validate .advance-select:has(> select:valid) ~ .label,
.validate .advance-select:has(> select:valid) ~ .label-text,
.validate .advance-select:has(> select:valid) ~ .label .label-text {
  --tw-text-opacity: 1;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity, 1)));
}

.validate .label:has(~ * > select:invalid) > *,
.validate .label-text:has(~ * > select:invalid),

.validate .advance-select:has( > select:invalid) ~ .label,
.validate .advance-select:has(> select:invalid) ~ .label-text,
.validate .advance-select:has( > select:invalid) ~ .label .label-text {
  --tw-text-opacity: 1;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity, 1)));
}

.validate .label ~ *:has(> select:valid) ~ * > .success-message,
.validate .advance-select:has(> select:valid) ~ * > .success-message,
.validate .advance-select:has(> select:valid) ~ .success-message {
  display: block;
}

.validate .label ~ *:has(> select:invalid) ~ * > .error-message,
.validate .advance-select:has(> select:invalid) ~ * > .error-message,
.validate .advance-select:has(> select:invalid) ~ .error-message {
  display: block;
}

.avatar-group :where(.avatar).placeholder > div {
  border-radius: 9999px;
  border-width: 2px;
  --tw-border-opacity: 1;
  border-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-border-opacity, 1)));
}

@media (prefers-reduced-motion: no-preference) {
  .btn {
    animation: button-pop var(--animation-btn, 0.25s) ease-out;
  }
}

.btn:active:hover,
  .btn:active:focus {
  animation: button-pop 0s ease-out;
  transform: scale(var(--btn-focus-scale, 0.97));
}

@supports not (color: oklch(0% 0 0)) {
  .btn {
    background-color: var(--btn-color, var(--fallback-b2));
    border-color: var(--btn-color, var(--fallback-b2));
  }

  .btn:focus-visible {
    background-color: var(--btn-color, var(--fallback-b2));
    border-color: var(--btn-color, var(--fallback-b2));
  }

  .btn-primary {
    --btn-color: var(--fallback-p);
  }

  .btn-error {
    --btn-color: var(--fallback-er);
  }
}

@media (hover: hover) {
  .btn:hover {
    --tw-shadow: 0 4px 6px -1px var(--fallback-bs,oklch(var(--bs)/0.2));
    --tw-shadow-colored: 0 4px 6px -1px var(--tw-shadow-color);
    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  }

  @supports (color: color-mix(in oklab, black, black)) {
    .btn:hover {
      background-color: color-mix(
            in oklab,
            oklch(var(--btn-color, var(--b2)) / var(--tw-bg-opacity, 1)) 90%,
            black
          );
      border-color: color-mix(
            in oklab,
            oklch(var(--btn-color, var(--b2)) / var(--tw-border-opacity, 1)) 90%,
            black
          );
    }
  }

  @supports not (color: oklch(0% 0 0)) {
    .btn:hover {
      background-color: var(--btn-color, var(--fallback-b2));
      border-color: var(--btn-color, var(--fallback-b2));
    }
  }

  .btn.glass:hover {
    --glass-opacity: 25%;
    --glass-border-opacity: 15%;
  }

  .btn-soft:hover {
    background-color: var(--fallback-n,oklch(var(--n)/0.3));
  }

  .btn-soft.btn-primary:hover {
    background-color: var(--fallback-p,oklch(var(--p)/0.3));
  }

  .btn-soft.btn-secondary:hover {
    background-color: var(--fallback-s,oklch(var(--s)/0.3));
  }

  .btn-soft.btn-accent:hover {
    background-color: var(--fallback-a,oklch(var(--a)/0.3));
  }

  .btn-soft.btn-success:hover {
    background-color: var(--fallback-su,oklch(var(--su)/0.3));
  }

  .btn-soft.btn-info:hover {
    background-color: var(--fallback-in,oklch(var(--in)/0.3));
  }

  .btn-soft.btn-warning:hover {
    background-color: var(--fallback-wa,oklch(var(--wa)/0.3));
  }

  .btn-soft.btn-error:hover {
    background-color: var(--fallback-er,oklch(var(--er)/0.3));
  }

  .btn-outline.btn-primary:hover {
    --tw-border-opacity: 1;
    border-color: var(--fallback-p,oklch(var(--p)/var(--tw-border-opacity, 1)));
    background-color: var(--fallback-p,oklch(var(--p)/0.1));
  }

  .btn-outline.btn-error:hover {
    --tw-border-opacity: 1;
    border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity, 1)));
    background-color: var(--fallback-er,oklch(var(--er)/0.1));
  }

  .btn-text:hover {
    border-color: transparent;
    background-color: var(--fallback-bc,oklch(var(--bc)/0.1));
  }

  .btn-text.btn-primary:hover {
    background-color: var(--fallback-p,oklch(var(--p)/0.1));
  }

  .btn-text.btn-secondary:hover {
    background-color: var(--fallback-s,oklch(var(--s)/0.1));
  }

  .btn-text.btn-accent:hover {
    background-color: var(--fallback-a,oklch(var(--a)/0.1));
  }

  .btn-text.btn-success:hover {
    background-color: var(--fallback-su,oklch(var(--su)/0.1));
  }

  .btn-text.btn-info:hover {
    background-color: var(--fallback-in,oklch(var(--in)/0.1));
  }

  .btn-text.btn-warning:hover {
    background-color: var(--fallback-wa,oklch(var(--wa)/0.1));
  }

  .btn-text.btn-error:hover {
    background-color: var(--fallback-er,oklch(var(--er)/0.1));
  }

  .btn-disabled:hover,
    .btn[disabled]:hover,
    .btn.disabled:hover,
    .btn:disabled:hover {
    opacity: 0.5;
    --tw-shadow: 0 0 #0000;
    --tw-shadow-colored: 0 0 #0000;
    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  }

  @supports (color: color-mix(in oklab, black, black)) {
    .btn:is(input[type="checkbox"]:checked):hover, .btn:is(input[type="radio"]:checked):hover {
      background-color: color-mix(in oklab, var(--fallback-p,oklch(var(--p)/1)) 90%, black);
      border-color: color-mix(in oklab, var(--fallback-p,oklch(var(--p)/1)) 90%, black);
    }
  }

  :where(.menu li:not(.menu-title, .disabled, [disabled], :disabled) > *:not(ul, .collapse, .menu-title)):not(.active, .btn, .disabled, :disabled, [disabled]):hover {
    cursor: pointer;
    outline: 2px solid transparent;
    outline-offset: 2px;
  }

  @supports (color: oklch(0 0 0)) {
    :where(.menu li:not(.menu-title, .disabled, [disabled], :disabled) > *:not(ul, .collapse, .menu-title)):not(.active, .btn, .disabled, :disabled, [disabled]):hover {
      background-color: var(--fallback-n,oklch(var(--n)/0.1));
    }
  }

  .tab[disabled]:hover {
    pointer-events: none;
    border-color: var(--fallback-bc,oklch(var(--bc)/0.1));
    color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity, 1)));
    --tw-text-opacity: 0.4;
  }
}

@supports (color: color-mix(in oklab, black, black)) {
  .btn:focus-visible {
    background-color: color-mix(in oklab, oklch(var(--btn-color, var(--b2)) / var(--tw-bg-opacity, 1)) 90%, black);
    border-color: color-mix(in oklab, oklch(var(--btn-color, var(--b2)) / var(--tw-border-opacity, 1)) 90%, black);
  }
}

.btn:focus-visible {
  outline-style: solid;
  outline-width: 2px;
  outline-offset: 0px;
}

.btn-primary {
  --tw-text-opacity: 1;
  color: var(--fallback-pc,oklch(var(--pc)/var(--tw-text-opacity, 1)));
  outline-color: var(--fallback-p,oklch(var(--p)/0.3));
}

@supports (color: oklch(0% 0 0)) {
  .btn-primary {
    --btn-color: var(--p);
  }

  .btn-error {
    --btn-color: var(--er);
  }

  .btn-gradient.btn-primary {
    --light-shade: var(--p);
  }

  .btn-gradient.btn-error {
    --light-shade: var(--er);
  }
}

.btn-error {
  --tw-text-opacity: 1;
  color: var(--fallback-erc,oklch(var(--erc)/var(--tw-text-opacity, 1)));
  outline-color: var(--fallback-er,oklch(var(--er)/0.3));
}

.btn.glass {
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  outline-color: currentColor;
}

.btn.glass:hover {
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.btn.glass.btn-active {
  --glass-opacity: 25%;
  --glass-border-opacity: 15%;
}

.btn-soft {
  border-style: none;
  background-color: var(--fallback-n,oklch(var(--n)/0.2));
  --tw-text-opacity: 1;
  color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity, 1)));
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.btn-soft:hover {
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.btn-soft.btn-active {
  background-color: var(--fallback-n,oklch(var(--n)/0.3));
}

.btn-soft:focus-visible {
  background-color: var(--fallback-n,oklch(var(--n)/0.3));
  outline-color: var(--fallback-n,oklch(var(--n)/0.5));
}

.btn-soft.btn-primary {
  background-color: var(--fallback-p,oklch(var(--p)/0.2));
  --tw-text-opacity: 1;
  color: var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity, 1)));
  outline-color: var(--fallback-p,oklch(var(--p)/0.5));
}

.btn-soft.btn-primary.btn-active {
  background-color: var(--fallback-p,oklch(var(--p)/0.3));
}

.btn-soft.btn-primary:focus-visible {
  background-color: var(--fallback-p,oklch(var(--p)/0.3));
  outline-color: var(--fallback-p,oklch(var(--p)/0.5));
}

.btn-soft.btn-secondary {
  background-color: var(--fallback-s,oklch(var(--s)/0.2));
  --tw-text-opacity: 1;
  color: var(--fallback-s,oklch(var(--s)/var(--tw-text-opacity, 1)));
  outline-color: var(--fallback-s,oklch(var(--s)/0.5));
}

.btn-soft.btn-secondary.btn-active {
  background-color: var(--fallback-s,oklch(var(--s)/0.3));
}

.btn-soft.btn-secondary:focus-visible {
  background-color: var(--fallback-s,oklch(var(--s)/0.3));
  outline-color: var(--fallback-s,oklch(var(--s)/0.5));
}

.btn-soft.btn-accent {
  background-color: var(--fallback-a,oklch(var(--a)/0.2));
  --tw-text-opacity: 1;
  color: var(--fallback-a,oklch(var(--a)/var(--tw-text-opacity, 1)));
  outline-color: var(--fallback-a,oklch(var(--a)/0.5));
}

.btn-soft.btn-accent.btn-active {
  background-color: var(--fallback-a,oklch(var(--a)/0.3));
}

.btn-soft.btn-accent:focus-visible {
  background-color: var(--fallback-a,oklch(var(--a)/0.3));
  outline-color: var(--fallback-a,oklch(var(--a)/0.5));
}

.btn-soft.btn-success {
  background-color: var(--fallback-su,oklch(var(--su)/0.2));
  --tw-text-opacity: 1;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity, 1)));
  outline-color: var(--fallback-su,oklch(var(--su)/0.5));
}

.btn-soft.btn-success.btn-active {
  background-color: var(--fallback-su,oklch(var(--su)/0.3));
}

.btn-soft.btn-success:focus-visible {
  background-color: var(--fallback-su,oklch(var(--su)/0.3));
  outline-color: var(--fallback-su,oklch(var(--su)/0.5));
}

.btn-soft.btn-info {
  background-color: var(--fallback-in,oklch(var(--in)/0.2));
  --tw-text-opacity: 1;
  color: var(--fallback-in,oklch(var(--in)/var(--tw-text-opacity, 1)));
  outline-color: var(--fallback-in,oklch(var(--in)/0.5));
}

.btn-soft.btn-info.btn-active {
  background-color: var(--fallback-in,oklch(var(--in)/0.3));
}

.btn-soft.btn-info:focus-visible {
  background-color: var(--fallback-in,oklch(var(--in)/0.3));
  outline-color: var(--fallback-in,oklch(var(--in)/0.5));
}

.btn-soft.btn-warning {
  background-color: var(--fallback-wa,oklch(var(--wa)/0.2));
  --tw-text-opacity: 1;
  color: var(--fallback-wa,oklch(var(--wa)/var(--tw-text-opacity, 1)));
  outline-color: var(--fallback-wa,oklch(var(--wa)/0.5));
}

.btn-soft.btn-warning.btn-active {
  background-color: var(--fallback-wa,oklch(var(--wa)/0.3));
}

.btn-soft.btn-warning:focus-visible {
  background-color: var(--fallback-wa,oklch(var(--wa)/0.3));
  outline-color: var(--fallback-wa,oklch(var(--wa)/0.5));
}

.btn-soft.btn-error {
  background-color: var(--fallback-er,oklch(var(--er)/0.2));
  --tw-text-opacity: 1;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity, 1)));
  outline-color: var(--fallback-er,oklch(var(--er)/0.5));
}

.btn-soft.btn-error.btn-active {
  background-color: var(--fallback-er,oklch(var(--er)/0.3));
}

.btn-soft.btn-error:focus-visible {
  background-color: var(--fallback-er,oklch(var(--er)/0.3));
  outline-color: var(--fallback-er,oklch(var(--er)/0.5));
}

.btn-outline.btn-primary {
  --tw-text-opacity: 1;
  color: var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity, 1)));
}

.btn-outline.btn-primary.btn-active {
  --tw-border-opacity: 1;
  border-color: var(--fallback-p,oklch(var(--p)/var(--tw-border-opacity, 1)));
  background-color: var(--fallback-p,oklch(var(--p)/0.1));
}

.btn-outline.btn-primary:focus-visible {
  background-color: var(--fallback-p,oklch(var(--p)/0.1));
}

.btn-outline.btn-error {
  --tw-text-opacity: 1;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity, 1)));
}

.btn-outline.btn-error.btn-active {
  --tw-border-opacity: 1;
  border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity, 1)));
  background-color: var(--fallback-er,oklch(var(--er)/0.1));
}

.btn-outline.btn-error:focus-visible {
  background-color: var(--fallback-er,oklch(var(--er)/0.1));
}

.btn-text {
  border-color: transparent;
  background-color: transparent;
  --tw-text-opacity: 1;
  color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity, 1)));
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.btn-text:hover {
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.btn-text.btn-active {
  border-color: transparent;
  background-color: var(--fallback-bc,oklch(var(--bc)/0.1));
}

.btn-text:focus-visible {
  border-color: transparent;
  background-color: var(--fallback-bc,oklch(var(--bc)/0.1));
  outline-color: currentColor;
}

.btn-text.btn-primary {
  --tw-text-opacity: 1;
  color: var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity, 1)));
}

.btn-text.btn-primary.btn-active {
  background-color: var(--fallback-p,oklch(var(--p)/0.1));
}

.btn-text.btn-primary:focus-visible {
  background-color: var(--fallback-p,oklch(var(--p)/0.1));
}

.btn-text.btn-secondary {
  --tw-text-opacity: 1;
  color: var(--fallback-s,oklch(var(--s)/var(--tw-text-opacity, 1)));
}

.btn-text.btn-secondary.btn-active {
  background-color: var(--fallback-s,oklch(var(--s)/0.1));
}

.btn-text.btn-secondary:focus-visible {
  background-color: var(--fallback-s,oklch(var(--s)/0.1));
}

.btn-text.btn-accent {
  --tw-text-opacity: 1;
  color: var(--fallback-a,oklch(var(--a)/var(--tw-text-opacity, 1)));
}

.btn-text.btn-accent.btn-active {
  background-color: var(--fallback-a,oklch(var(--a)/0.1));
}

.btn-text.btn-accent:focus-visible {
  background-color: var(--fallback-a,oklch(var(--a)/0.1));
}

.btn-text.btn-success {
  --tw-text-opacity: 1;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity, 1)));
}

.btn-text.btn-success.btn-active {
  background-color: var(--fallback-su,oklch(var(--su)/0.1));
}

.btn-text.btn-success:focus-visible {
  background-color: var(--fallback-su,oklch(var(--su)/0.1));
}

.btn-text.btn-info {
  --tw-text-opacity: 1;
  color: var(--fallback-in,oklch(var(--in)/var(--tw-text-opacity, 1)));
}

.btn-text.btn-info.btn-active {
  background-color: var(--fallback-in,oklch(var(--in)/0.1));
}

.btn-text.btn-info:focus-visible {
  background-color: var(--fallback-in,oklch(var(--in)/0.1));
}

.btn-text.btn-warning {
  --tw-text-opacity: 1;
  color: var(--fallback-wa,oklch(var(--wa)/var(--tw-text-opacity, 1)));
}

.btn-text.btn-warning.btn-active {
  background-color: var(--fallback-wa,oklch(var(--wa)/0.1));
}

.btn-text.btn-warning:focus-visible {
  background-color: var(--fallback-wa,oklch(var(--wa)/0.1));
}

.btn-text.btn-error {
  --tw-text-opacity: 1;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity, 1)));
}

.btn-text.btn-error.btn-active {
  background-color: var(--fallback-er,oklch(var(--er)/0.1));
}

.btn-text.btn-error:focus-visible {
  background-color: var(--fallback-er,oklch(var(--er)/0.1));
}

.btn-gradient.btn-primary {
  --tw-border-opacity: 1;
  border-color: var(--fallback-p,oklch(var(--p)/var(--tw-border-opacity, 1)));
  --tw-text-opacity: 1;
  color: var(--fallback-pc,oklch(var(--pc)/var(--tw-text-opacity, 1)));
  --tw-shadow-color: var(--fallback-p,oklch(var(--p)/0.26));
  --tw-shadow: var(--tw-shadow-colored);
}

.btn-gradient.btn-primary:hover {
  --tw-shadow-color: var(--fallback-p,oklch(var(--p)/0.2));
  --tw-shadow: var(--tw-shadow-colored);
}

.btn-gradient.btn-primary:focus-visible {
  outline-color: var(--fallback-p,oklch(var(--p)/0.3));
  border-color: transparent;
}

.btn-gradient.btn-error {
  --tw-border-opacity: 1;
  border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity, 1)));
  --tw-text-opacity: 1;
  color: var(--fallback-erc,oklch(var(--erc)/var(--tw-text-opacity, 1)));
  --tw-shadow-color: var(--fallback-er,oklch(var(--er)/0.26));
  --tw-shadow: var(--tw-shadow-colored);
}

.btn-gradient.btn-error:hover {
  --tw-shadow-color: var(--fallback-er,oklch(var(--er)/0.2));
  --tw-shadow: var(--tw-shadow-colored);
}

.btn-gradient.btn-error:focus-visible {
  outline-color: var(--fallback-er,oklch(var(--er)/0.3));
  border-color: transparent;
}

.btn.btn-disabled,
  .btn.disabled,
  .btn[disabled],
  .btn:disabled {
  pointer-events: none;
  opacity: 0.5;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.btn:is(input[type="checkbox"]:checked),
.btn:is(input[type="radio"]:checked) {
  --tw-border-opacity: 1;
  border-color: var(--fallback-p,oklch(var(--p)/var(--tw-border-opacity, 1)));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-p,oklch(var(--p)/var(--tw-bg-opacity, 1)));
  --tw-text-opacity: 1;
  color: var(--fallback-pc,oklch(var(--pc)/var(--tw-text-opacity, 1)));
}

.btn:is(input[type="checkbox"]:checked):focus-visible, .btn:is(input[type="radio"]:checked):focus-visible {
  outline-color: var(--fallback-p,oklch(var(--p)/1));
}

@keyframes button-pop {
  0% {
    transform: scale(var(--btn-focus-scale, 0.98));
  }

  40% {
    transform: scale(1.02);
  }

  100% {
    transform: scale(1);
  }
}

.card :where(figure:first-child) {
  overflow: hidden;
  border-start-start-radius: inherit;
  border-start-end-radius: inherit;
  border-end-start-radius: unset;
  border-end-end-radius: unset;
}

.card :where(figure:last-child) {
  overflow: hidden;
  border-start-start-radius: unset;
  border-start-end-radius: unset;
  border-end-start-radius: inherit;
  border-end-end-radius: inherit;
}

.card.image-full :where(figure) {
  overflow: hidden;
  border-radius: inherit;
}

.card .alert {
  border-radius: 0px;
}

.card .alert:first-child {
  border-top-left-radius: var(--rounded-box, 0.5rem);
  border-top-right-radius: var(--rounded-box, 0.5rem);
}

.card .alert:last-child {
  border-bottom-right-radius: var(--rounded-box, 0.5rem);
  border-bottom-left-radius: var(--rounded-box, 0.5rem);
}

.carousel-body,
.carousel-slide {
  transition-property: transform;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 700ms;
}

.carousel-prev:hover,
.carousel-next:hover {
  --tw-text-opacity: 1;
  color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity, 1)));
}

.carousel-prev.disabled,
.carousel-next.disabled {
  pointer-events: none;
  color: var(--fallback-bc,oklch(var(--bc)/0.3));
}

.checkbox:focus {
  box-shadow: none;
}

.checkbox:focus-visible {
  outline-style: solid;
  outline-width: 2px;
  outline-offset: 0px;
  outline-color: var(--fallback-n,oklch(var(--n)/0.3));
}

.checkbox:checked,
  .checkbox[checked="true"],
  .checkbox[aria-checked="true"] {
  background-repeat: no-repeat;
  --tw-shadow: 0 1px 2px 0 var(--fallback-bs,oklch(var(--bs)/0.22));
  --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  border-color: var(--chkbg);
  animation: checkmark var(--animation-input, 0.2s) ease-out;
  background-color: var(--chkbg);
  background-image: linear-gradient(-45deg, transparent 66%, var(--chkbg) 66.99%),
      linear-gradient(45deg, transparent 77%, var(--chkbg) 77.99%),
      linear-gradient(-45deg, var(--chkbg) 41%, transparent 41.99%),
      linear-gradient(45deg, var(--chkbg) 34%, var(--chkfg) 34.99%, var(--chkfg) 40%, transparent 40.99%),
      linear-gradient(-45deg, var(--chkfg) 47%, var(--chkbg) 47.99%);
}

.checkbox:indeterminate {
  background-repeat: no-repeat;
  --tw-shadow: 0 1px 2px 0 var(--fallback-bs,oklch(var(--bs)/0.22));
  --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  background-color: var(--chkbg);
  border-color: var(--chkbg);
  animation: checkmark var(--animation-input, 0.2s) ease-out;
  background-image: linear-gradient(90deg, transparent 80%, var(--chkbg) 80%),
      linear-gradient(-90deg, transparent 80%, var(--chkbg) 80%),
      linear-gradient(0deg, var(--chkbg) 45%, var(--chkfg) 45%, var(--chkfg) 55%, var(--chkbg) 55%);
}

.checkbox.disabled,
  .checkbox:disabled,
  .checkbox[disabled] {
  pointer-events: none;
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1)));
  opacity: 0.4;
}

.checkbox.disabled:not(checked), .checkbox:disabled:not(checked), .checkbox[disabled]:not(checked) {
  --tw-bg-opacity: 1;
  background-color: var(--fallback-n,oklch(var(--n)/var(--tw-bg-opacity, 1)));
}

@keyframes checkmark {
  0% {
    background-position-y: 5px;
  }

  50% {
    background-position-y: -2px;
  }

  100% {
    background-position-y: 0;
  }
}

.checkbox.is-valid,
.validate .checkbox:valid {
  --chkbg: var(--fallback-su,oklch(var(--su)/1));
  --chkfg: var(--fallback-suc,oklch(var(--suc)/1));
  --tw-border-opacity: 1 !important;
  border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity, 1))) !important;
}

.checkbox.is-valid:focus-visible, .validate .checkbox:valid:focus-visible {
  outline-color: var(--fallback-su,oklch(var(--su)/0.3)) !important;
}

.checkbox.is-invalid,
.validate .checkbox:invalid {
  --chkbg: var(--fallback-er,oklch(var(--er)/1));
  --chkfg: var(--fallback-erc,oklch(var(--erc)/1));
  --tw-border-opacity: 1 !important;
  border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity, 1))) !important;
}

.checkbox.is-invalid:focus-visible, .validate .checkbox:invalid:focus-visible {
  outline-color: var(--fallback-er,oklch(var(--er)/0.3)) !important;
}

.validate .label:has(+ * .checkbox:valid) > *, 
.validate .label-text:has(+ * .checkbox:valid), 
.validate .label-text:has(~ .checkbox:valid), 
.validate .label:has(~ .checkbox:valid) > *, 

.validate .checkbox:valid ~ .label, 
.validate .checkbox:valid ~ .label-text, 
.validate .checkbox:valid ~ .label .label-text,  
.validate *:has(.checkbox:valid) ~ .label, 
.validate *:has(.checkbox:valid) ~ .label-text, 
.validate *:has(.checkbox:valid) ~ .label .label-text {
  --tw-text-opacity: 1;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity, 1)));
}

.validate .label:has(+ * .checkbox:invalid) > *, 
.validate .label-text:has(+ * .checkbox:invalid), 
.validate .label-text:has(~ .checkbox:invalid), 
.validate .label:has(~ .checkbox:invalid) > *, 

.validate .checkbox:invalid ~ .label, 
.validate .checkbox:invalid ~ .label-text, 
.validate .checkbox:invalid ~ .label .label-text,  
.validate *:has(.checkbox:invalid) ~ .label, 
.validate *:has(.checkbox:invalid) ~ .label-text, 
.validate *:has(.checkbox:invalid) ~ .label .label-text {
  --tw-text-opacity: 1;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity, 1)));
}

.validate *:has(> .checkbox:valid) ~ .success-message,
.validate *:has(> .checkbox:valid) > * > .success-message,

.validate .checkbox:valid ~ .success-message,
.validate .checkbox:valid + * > .success-message {
  display: block;
}

.validate *:has(> .checkbox:invalid) ~ .error-message,
.validate *:has(> .checkbox:invalid) > * > .error-message,

.validate .checkbox:invalid ~ .error-message,
.validate .checkbox:invalid + * > .error-message {
  display: block;
}

.nested-collapse-wrapper .collapse.open.nested-collapse,
.nested-collapse-wrapper .collapse-toggle.open.nested-collapse {
  background-color: var(--fallback-bc,oklch(var(--bc)/0.1));
}

.nested-collapse-wrapper .collapse.open > .collapse-icon,
.nested-collapse-wrapper .collapse-toggle.open > .collapse-icon {
  --tw-rotate: 180deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.drawer-body::-webkit-scrollbar-thumb {
  background-color: var(--fallback-s,oklch(var(--s)/0.5));
}

.drawer-body::-webkit-scrollbar-thumb:hover {
  background-color: var(--fallback-s,oklch(var(--s)/0.8));
}

.drawer-body::-webkit-scrollbar-track {
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b2,oklch(var(--b2)/var(--tw-bg-opacity, 1)));
}

.dropdown-menu > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(0.125rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(0.125rem * var(--tw-space-y-reverse));
}

.dropdown-item:hover,
  .dropdown-item:focus,
  .dropdown-item:focus-within,
  .dropdown-item:focus-visible {
  background-color: var(--fallback-n,oklch(var(--n)/0.1));
  outline: 2px solid transparent;
  outline-offset: 2px;
}

.dropdown-item.active,
  .dropdown-item:active {
  background-color: var(--fallback-p,oklch(var(--p)/0.1));
  --tw-text-opacity: 1;
  color: var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity, 1)));
}

.dropdown-item.disabled,
  .dropdown-item:disabled,
  .dropdown-item[disabled] {
  pointer-events: none;
  background-color: var(--fallback-n,oklch(var(--n)/0.05));
  color: var(--fallback-bc,oklch(var(--bc)/0.5));
}

.dropdown-item > .label {
  padding-top: 0.25rem;
  padding-bottom: 0.25rem;
  font-size: 1rem;
  line-height: 1.375rem;
  color: var(--fallback-bc,oklch(var(--bc)/0.8));
}

.dropdown-item > .label-text {
  --tw-text-opacity: 1;
  color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity, 1)));
}

.label {
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
  padding: 0.25rem;
  color: var(--fallback-bc,oklch(var(--bc)/0.8));
}

input {
  background-color: transparent;
}

input:focus {
  outline-width: 0px;
  outline-color: transparent;
}

input:focus-visible {
  outline: unset;
}

.input::-moz-placeholder {
  color: var(--fallback-bc,oklch(var(--bc)/0.5));
}

.input::placeholder {
  color: var(--fallback-bc,oklch(var(--bc)/0.5));
}

.input:hover {
  border-color: var(--fallback-bc,oklch(var(--bc)/0.6));
}

.input[type="file"]:disabled {
  background-color: var(--fallback-n,oklch(var(--n)/0.1));
}

.input:focus,
  .input:focus-within {
  --tw-border-opacity: 1;
  border-color: var(--fallback-p,oklch(var(--p)/var(--tw-border-opacity, 1)));
  --tw-shadow: 0 1px 2px 0 var(--fallback-bs,oklch(var(--bs)/0.22));
  --tw-shadow: var(--tw-shadow-colored);
  --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
  --tw-shadow-color: var(--fallback-p,oklch(var(--p)/0.22));
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  --tw-ring-opacity: 1;
  --tw-ring-color: var(--fallback-p,oklch(var(--p)/var(--tw-ring-opacity, 1)));
}

.input:-webkit-autofill,
  .input:-webkit-autofill:focus {
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1)));
  --tw-text-opacity: 1;
  color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity, 1)));
}

.input[list]::-webkit-calendar-picker-indicator {
  line-height: 1em;
}

.input.disabled,
  .input:disabled,
  .input[disabled] {
  pointer-events: none;
  border-width: 0px;
  border-color: var(--fallback-bc,oklch(var(--bc)/0.1));
  background-color: var(--fallback-n,oklch(var(--n)/0.1));
  color: var(--fallback-bc,oklch(var(--bc)/0.5));
}

.input::-webkit-date-and-time-value {
  text-align: inherit;
}

.input.input-floating.disabled,
    .input.input-floating:disabled,
    .input.input-floating[disabled] {
  border-width: 1px;
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1)));
}

.input.input-floating.disabled ~ .input-floating-label, .input.input-floating:disabled ~ .input-floating-label, .input.input-floating[disabled] ~ .input-floating-label {
  color: var(--fallback-bc,oklch(var(--bc)/0.5));
}

.input.input-filled.disabled,
    .input.input-filled:disabled,
    .input.input-filled[disabled] {
  border-bottom-width: 1px;
}

.input.input-filled.disabled ~ .input-filled-label, .input.input-filled:disabled ~ .input-filled-label, .input.input-filled[disabled] ~ .input-filled-label {
  color: var(--fallback-bc,oklch(var(--bc)/0.5));
}

.input.input-filled.input-sm:not(:-moz-placeholder-shown) {
  padding-top: 0.5rem;
}

.input.input-filled.input-sm:focus,
  .input.input-filled.input-sm:not(:placeholder-shown) {
  padding-top: 0.5rem;
}

.input.input-filled:not(:-moz-placeholder-shown), .input.input-filled.input-lg:not(:-moz-placeholder-shown) {
  padding-top: 0.75rem;
}

.input.input-filled:focus,
  .input.input-filled.input-lg:focus,
  .input.input-filled:not(:placeholder-shown),
  .input.input-filled.input-lg:not(:placeholder-shown) {
  padding-top: 0.75rem;
}

.input-group:has(input.disabled),
  .input-group:has(input:disabled),
  .input-group:has(input[disabled]) {
  pointer-events: none;
  border-color: var(--fallback-bc,oklch(var(--bc)/0.1));
  background-color: var(--fallback-n,oklch(var(--n)/0.1));
  color: var(--fallback-bc,oklch(var(--bc)/0.5));
}

.input-group .input {
  border-width: 0px;
  background-color: transparent;
}

.input-group .input:focus,
    .input-group .input:focus-within {
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color);
}

.input-group .input.disabled,
    .input-group .input:disabled,
    .input-group .input[disabled] {
  background-color: transparent;
}

.input-group-filled .input {
  border-width: 0px;
  background-color: transparent;
}

.input-group-filled .input.disabled,
    .input-group-filled .input:disabled,
    .input-group-filled .input[disabled] {
  background-color: transparent;
}

.input[type="file"].input-floating::file-selector-button {
  border-inline-end-width: 1px;
  border-color: var(--fallback-bc,oklch(var(--bc)/0.25));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1)));
}

.input.is-valid,
.validate .input:valid {
  --tw-border-opacity: 1;
  border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity, 1)));
}

.input.is-valid:focus,
  .input.is-valid:focus-within,
  .validate .input:valid:focus,
  .validate .input:valid:focus-within {
  --tw-shadow-color: var(--fallback-su,oklch(var(--su)/0.22));
  --tw-shadow: var(--tw-shadow-colored);
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
  --tw-ring-opacity: 1;
  --tw-ring-color: var(--fallback-su,oklch(var(--su)/var(--tw-ring-opacity, 1)));
}

.input.is-valid.input-filled:focus,
  .input.is-valid.input-filled:focus-within,
  .validate .input:valid.input-filled:focus,
  .validate .input:valid.input-filled:focus-within {
  --tw-border-opacity: 1;
  border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity, 1)));
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color);
}

.input.is-valid ~ .input-floating-label,
  .input.is-valid ~ .input-filled-label,
  .validate .input:valid ~ .input-floating-label,
  .validate .input:valid ~ .input-filled-label {
  --tw-text-opacity: 1;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity, 1)));
}

.input.is-valid:focus ~ .input-filled-focused,
  .input.is-valid:focus-within ~ .input-filled-focused,
  .validate .input:valid:focus ~ .input-filled-focused,
  .validate .input:valid:focus-within ~ .input-filled-focused {
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-su,oklch(var(--su)/var(--tw-bg-opacity, 1)));
}

.label:has(+ * .is-valid) > *, 
.label-text:has(+ * .is-valid), 
.label-text:has(~ .is-valid), 
.label:has(~ .is-valid) > *, 


.is-valid ~ .label, 
.is-valid ~ .label-text, 
.is-valid ~ .label .label-text,  
*:has(.is-valid) ~ .label, 
*:has(.is-valid) ~ .label-text, 
*:has(.is-valid) ~ .label .label-text, 



.validate .label:has(+ * .input:valid) > *, 
.validate .label-text:has(+ * .input:valid), 
.validate .label-text:has(~ .input:valid), 
.validate .label:has(~ .input:valid) > *, 


.validate .input:valid ~ .label, 
.validate .input:valid ~ .label.label-text, 
.validate .input:valid ~ .label .label-text,  
.validate *:has(.input:valid) ~ .label, 
.validate *:has(.input:valid) ~ .label-text, 
.validate *:has(.input:valid) ~ .label .label-text {
  --tw-text-opacity: 1;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity, 1)));
}

.input:focus.is-valid ~ .input-floating-label,
.input:focus.is-valid ~ .input-filled-label {
  --tw-text-opacity: 1;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity, 1)));
}

.input.is-invalid,
.validate .input:invalid {
  --tw-border-opacity: 1;
  border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity, 1)));
}

.input.is-invalid:focus,
  .input.is-invalid:focus-within,
  .validate .input:invalid:focus,
  .validate .input:invalid:focus-within {
  --tw-shadow-color: var(--fallback-er,oklch(var(--er)/0.22));
  --tw-shadow: var(--tw-shadow-colored);
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
  --tw-ring-opacity: 1;
  --tw-ring-color: var(--fallback-er,oklch(var(--er)/var(--tw-ring-opacity, 1)));
}

.input.is-invalid.input-filled:focus,
  .input.is-invalid.input-filled:focus-within,
  .validate .input:invalid.input-filled:focus,
  .validate .input:invalid.input-filled:focus-within {
  --tw-border-opacity: 1;
  border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity, 1)));
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color);
}

.input.is-invalid ~ .input-floating-label,
  .input.is-invalid ~ .input-filled-label,
  .validate .input:invalid ~ .input-floating-label,
  .validate .input:invalid ~ .input-filled-label {
  --tw-text-opacity: 1;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity, 1)));
}

.input.is-invalid:focus ~ .input-filled-focused,
  .input.is-invalid:focus-within ~ .input-filled-focused,
  .validate .input:invalid:focus ~ .input-filled-focused,
  .validate .input:invalid:focus-within ~ .input-filled-focused {
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-er,oklch(var(--er)/var(--tw-bg-opacity, 1)));
}

.label:has(+ * .is-invalid) > *, 
.label-text:has(+ * .is-invalid), 
.label-text:has(~ .is-invalid), 
.label:has(~ .is-invalid) > *, 


.is-invalid ~ .label, 
.is-invalid ~ .label-text, 
.is-invalid ~ .label .label-text,  
*:has(.is-invalid) ~ .label, 
*:has(.is-invalid) ~ .label-text, 
*:has(.is-invalid) ~ .label .label-text, 



.validate .label:has(+ * .input:invalid) > *, 
.validate .label-text:has(+ * .input:invalid), 
.validate .label-text:has(~ .input:invalid), 
.validate .label:has(~ .input:invalid) > *, 


.validate .input:invalid ~ .label, 
.validate .input:invalid ~ .label.label-text, 
.validate .input:invalid ~ .label .label-text,  
.validate *:has(.input:invalid) ~ .label, 
.validate *:has(.input:invalid) ~ .label-text, 
.validate *:has(.input:invalid) ~ .label .label-text {
  --tw-text-opacity: 1;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity, 1)));
}

.input:focus.is-invalid ~ .input-floating-label,
.input:focus.is-invalid ~ .input-filled-label {
  --tw-text-opacity: 1;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity, 1)));
}

.validate *:has(> .input:valid) ~ .success-message,
.validate *:has(> .input:valid)  > * > .success-message,

.validate .input:valid ~ .success-message,
.validate .input:valid  + * > .success-message {
  display: block;
}

.validate *:has(> .input:invalid) ~ .error-message,
.validate *:has(> .input:invalid) > * > .error-message,

.validate .input:invalid ~ .error-message,
.validate .input:invalid + * > .error-message {
  display: block;
}

.validate .input-group > .input:valid,
.input-group > .input:valid,
.validate .input-group > .input:invalid,
.input-group > .input:invalid,
.validate .input-group > * > .input:valid,
.input-group > * > .input:valid,
.validate .input-group > * > .input:invalid,
.input-group > * > .input:invalid,
.input-group > .input.is-valid,
.input-group > .input.is-invalid,
.input-group > * > .input.is-valid,
.input-group > * > .input.is-invalid {
  border-width: 0px;
}

.validate .input-group > .input:valid:focus-within,
.input-group > .input:valid:focus-within,
.validate .input-group > .input:invalid:focus-within,
.input-group > .input:invalid:focus-within,
.validate .input-group > * > .input:valid:focus-within,
.input-group > * > .input:valid:focus-within,
.validate .input-group > * > .input:invalid:focus-within,
.input-group > * > .input:invalid:focus-within,
.input-group > .input.is-valid:focus-within,
.input-group > .input.is-invalid:focus-within,
.input-group > * > .input.is-valid:focus-within,
.input-group > * > .input.is-invalid:focus-within {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}

.validate .input-group > .input:valid:focus,
.input-group > .input:valid:focus,
.validate .input-group > .input:invalid:focus,
.input-group > .input:invalid:focus,
.validate .input-group > * > .input:valid:focus,
.input-group > * > .input:valid:focus,
.validate .input-group > * > .input:invalid:focus,
.input-group > * > .input:invalid:focus,
.input-group > .input.is-valid:focus,
.input-group > .input.is-invalid:focus,
.input-group > * > .input.is-valid:focus,
.input-group > * > .input.is-invalid:focus {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}

.input-group:has(.is-valid),
  .validate .input-group:has(.input:valid) {
  --tw-border-opacity: 1;
  border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity, 1)));
}

.input-group:has(.is-valid):has(:focus),
    .input-group:has(.is-valid):has(:focus-within),
    .validate .input-group:has(.input:valid):has(:focus),
    .validate .input-group:has(.input:valid):has(:focus-within) {
  --tw-border-opacity: 1;
  border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity, 1)));
  --tw-shadow: 0 1px 2px 0 var(--fallback-bs,oklch(var(--bs)/0.22));
  --tw-shadow: var(--tw-shadow-colored);
  --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
  --tw-shadow-color: var(--fallback-su,oklch(var(--su)/0.22));
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  --tw-ring-opacity: 1;
  --tw-ring-color: var(--fallback-su,oklch(var(--su)/var(--tw-ring-opacity, 1)));
}

.input-group:has(.is-invalid),
  .validate .input-group:has(.input:invalid) {
  --tw-border-opacity: 1;
  border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity, 1)));
}

.input-group:has(.is-invalid):has(:focus),
    .input-group:has(.is-invalid):has(:focus-within),
    .validate .input-group:has(.input:invalid):has(:focus),
    .validate .input-group:has(.input:invalid):has(:focus-within) {
  --tw-border-opacity: 1;
  border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity, 1)));
  --tw-shadow: 0 1px 2px 0 var(--fallback-bs,oklch(var(--bs)/0.22));
  --tw-shadow: var(--tw-shadow-colored);
  --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
  --tw-shadow-color: var(--fallback-er,oklch(var(--er)/0.22));
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  --tw-ring-opacity: 1;
  --tw-ring-color: var(--fallback-er,oklch(var(--er)/var(--tw-ring-opacity, 1)));
}

.input-group-filled:has(.is-valid),
  .validate .input-group-filled:has(.input:valid) {
  --tw-border-opacity: 1;
  border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity, 1)));
}

.input-group-filled:has(.is-valid):focus ~ .input-filled-focused,
    .input-group-filled:has(.is-valid):focus-within ~ .input-filled-focused,
    .validate .input-group-filled:has(.input:valid):focus ~ .input-filled-focused,
    .validate .input-group-filled:has(.input:valid):focus-within ~ .input-filled-focused {
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-su,oklch(var(--su)/var(--tw-bg-opacity, 1)));
}

.input-group-filled:has(.is-invalid),
  .validate .input-group-filled:has(.input:invalid) {
  --tw-border-opacity: 1;
  border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity, 1)));
}

.input-group-filled:has(.is-invalid):focus ~ .input-filled-focused,
    .input-group-filled:has(.is-invalid):focus-within ~ .input-filled-focused,
    .validate .input-group-filled:has(.input:invalid):focus ~ .input-filled-focused,
    .validate .input-group-filled:has(.input:invalid):focus-within ~ .input-filled-focused {
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-er,oklch(var(--er)/var(--tw-bg-opacity, 1)));
}

.join .btn {
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.join > :where(*:not(:first-child)) {
  margin-top: 0px;
  margin-bottom: 0px;
  margin-inline-start: -1px;
}

.join > :where(*:not(:first-child)):is(.btn) {
  margin-inline-start: calc(var(--border-btn) * -1);
}

@supports (color:color-mix(in oklab,black,black)) {
  @media (hover:hover) {
    .link-neutral:hover {
      color: color-mix(in oklab,var(--fallback-n,oklch(var(--n)/1)) 80%,black);
    }
  }
}

.link-neutral {
  --tw-text-opacity: 1;
  color: var(--fallback-n,oklch(var(--n)/var(--tw-text-opacity, 1)));
}

.\!link:focus {
  outline: 2px solid transparent !important;
  outline-offset: 2px !important;
}

.link:focus {
  outline: 2px solid transparent;
  outline-offset: 2px;
}

.\!link:focus-visible {
  outline: 2px solid currentColor !important;
  outline-offset: 2px !important;
}

.link:focus-visible {
  outline: 2px solid currentColor;
  outline-offset: 2px;
}

.\!link.disabled,
  .\!link[disabled],
  .\!link:disabled {
  pointer-events: none !important;
  opacity: 0.4 !important;
}

.link.disabled,
  .link[disabled],
  .link:disabled {
  pointer-events: none;
  opacity: 0.4;
}

.\!link.disabled,
  .\!link[disabled],
  .\!link:disabled {
  pointer-events: none !important;
  opacity: 0.4 !important;
}

.loading {
  pointer-events: none;
  display: inline-block;
  aspect-ratio: 1 / 1;
  width: 1.5rem;
  background-color: currentColor;
  -webkit-mask-size: 100%;
          mask-size: 100%;
  -webkit-mask-repeat: no-repeat;
          mask-repeat: no-repeat;
  -webkit-mask-position: center;
          mask-position: center;
  -webkit-mask-image: url("data:image/svg+xml,%3Csvg width='24' height='24' stroke='%23000' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Cstyle%3E.spinner_V8m1%7Btransform-origin:center;animation:spinner_zKoa 2s linear infinite%7D.spinner_V8m1 circle%7Bstroke-linecap:round;animation:spinner_YpZS 1.5s ease-out infinite%7D%40keyframes spinner_zKoa%7B100%25%7Btransform:rotate(360deg)%7D%7D%40keyframes spinner_YpZS%7B0%25%7Bstroke-dasharray:0 150;stroke-dashoffset:0%7D47.5%25%7Bstroke-dasharray:42 150;stroke-dashoffset:-16%7D95%25%2C100%25%7Bstroke-dasharray:42 150;stroke-dashoffset:-59%7D%7D%3C%2Fstyle%3E%3Cg class='spinner_V8m1'%3E%3Ccircle cx='12' cy='12' r='9.5' fill='none' stroke-width='3'%3E%3C%2Fcircle%3E%3C%2Fg%3E%3C%2Fsvg%3E");
          mask-image: url("data:image/svg+xml,%3Csvg width='24' height='24' stroke='%23000' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Cstyle%3E.spinner_V8m1%7Btransform-origin:center;animation:spinner_zKoa 2s linear infinite%7D.spinner_V8m1 circle%7Bstroke-linecap:round;animation:spinner_YpZS 1.5s ease-out infinite%7D%40keyframes spinner_zKoa%7B100%25%7Btransform:rotate(360deg)%7D%7D%40keyframes spinner_YpZS%7B0%25%7Bstroke-dasharray:0 150;stroke-dashoffset:0%7D47.5%25%7Bstroke-dasharray:42 150;stroke-dashoffset:-16%7D95%25%2C100%25%7Bstroke-dasharray:42 150;stroke-dashoffset:-59%7D%7D%3C%2Fstyle%3E%3Cg class='spinner_V8m1'%3E%3Ccircle cx='12' cy='12' r='9.5' fill='none' stroke-width='3'%3E%3C%2Fcircle%3E%3C%2Fg%3E%3C%2Fsvg%3E");
}

.loading-spinner {
  -webkit-mask-image: url("data:image/svg+xml,%3Csvg width='24' height='24' stroke='%23000' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Cstyle%3E.spinner_V8m1%7Btransform-origin:center;animation:spinner_zKoa 2s linear infinite%7D.spinner_V8m1 circle%7Bstroke-linecap:round;animation:spinner_YpZS 1.5s ease-out infinite%7D%40keyframes spinner_zKoa%7B100%25%7Btransform:rotate(360deg)%7D%7D%40keyframes spinner_YpZS%7B0%25%7Bstroke-dasharray:0 150;stroke-dashoffset:0%7D47.5%25%7Bstroke-dasharray:42 150;stroke-dashoffset:-16%7D95%25%2C100%25%7Bstroke-dasharray:42 150;stroke-dashoffset:-59%7D%7D%3C%2Fstyle%3E%3Cg class='spinner_V8m1'%3E%3Ccircle cx='12' cy='12' r='9.5' fill='none' stroke-width='3'%3E%3C%2Fcircle%3E%3C%2Fg%3E%3C%2Fsvg%3E");
          mask-image: url("data:image/svg+xml,%3Csvg width='24' height='24' stroke='%23000' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Cstyle%3E.spinner_V8m1%7Btransform-origin:center;animation:spinner_zKoa 2s linear infinite%7D.spinner_V8m1 circle%7Bstroke-linecap:round;animation:spinner_YpZS 1.5s ease-out infinite%7D%40keyframes spinner_zKoa%7B100%25%7Btransform:rotate(360deg)%7D%7D%40keyframes spinner_YpZS%7B0%25%7Bstroke-dasharray:0 150;stroke-dashoffset:0%7D47.5%25%7Bstroke-dasharray:42 150;stroke-dashoffset:-16%7D95%25%2C100%25%7Bstroke-dasharray:42 150;stroke-dashoffset:-59%7D%7D%3C%2Fstyle%3E%3Cg class='spinner_V8m1'%3E%3Ccircle cx='12' cy='12' r='9.5' fill='none' stroke-width='3'%3E%3C%2Fcircle%3E%3C%2Fg%3E%3C%2Fsvg%3E");
}

:where(.menu li:empty) {
  --tw-bg-opacity: 1;
  background-color: var(--fallback-bc,oklch(var(--bc)/var(--tw-bg-opacity, 1)));
  opacity: 0.1;
  margin: 0.5rem 1rem;
  height: 1px;
}

.menu :where(li:not(.dropdown) ul) {
  margin-inline-start: 1rem;
  padding-inline-start: 0.5rem;
}

.menu :where(li:not(.dropdown) ul):before {
  position: absolute;
  bottom: 0.6rem;
  inset-inline-start: 0px;
  top: 0.75rem;
  width: 1px;
  --tw-bg-opacity: 1;
  background-color: var(--fallback-bc,oklch(var(--bc)/var(--tw-bg-opacity, 1)));
  opacity: 0.1;
  content: "";
}

.menu :where(li:not(.menu-title, .tooltip) > *:not(ul, .collapse, .menu-title, .btn)) {
  border-radius: var(--rounded-btn, 0.375rem);
  padding-left: 1rem;
  padding-right: 1rem;
  padding-top: 0.625rem;
  padding-bottom: 0.625rem;
  text-align: start;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
  transition-duration: 200ms;
  text-wrap: balance;
}

.menu li.tooltip > * {
  border-radius: var(--rounded-btn, 0.375rem);
  padding-left: 1rem;
  padding-right: 1rem;
  padding-top: 0.625rem;
  padding-bottom: 0.625rem;
  text-align: start;
}

:where(.menu li:not(.menu-title, .disabled, [disabled], :disabled)) {
  --tw-text-opacity: 1;
  color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity, 1)));
}

:where(.menu li:not(.menu-title, .disabled, [disabled], :disabled) > *:not(ul, .collapse, .menu-title)):not(.active, .btn).focus, :where(.menu li:not(.menu-title, .disabled, [disabled], :disabled) > *:not(ul, .collapse, .menu-title)):not(.active, .btn):focus, :where(.menu li:not(.menu-title, .disabled, [disabled], :disabled) > *:not(ul, .collapse, .menu-title)):not(.active, .btn):focus-visible {
  cursor: pointer;
  background-color: var(--fallback-bc,oklch(var(--bc)/0.1));
  --tw-text-opacity: 1;
  color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity, 1)));
  outline: 2px solid transparent;
  outline-offset: 2px;
}

.menu li:not(.disabled, :disabled, [disabled]) > :not(ul, .menu-title, .collapse, .btn):active,
.menu li:not(.disabled, :disabled, [disabled]) > :not(ul, .menu-title, .collapse, .btn).active {
  background-color: var(--fallback-p,oklch(var(--p)/0.1));
  --tw-text-opacity: 1;
  color: var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity, 1)));
}

.menu li.disabled,
.menu li:disabled,
.menu li[disabled] {
  pointer-events: none;
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
  opacity: 0.5;
}

.mockup-phone .display {
  overflow: hidden;
  border-radius: 40px;
  margin-top: -25px;
}

.mockup-browser .mockup-browser-toolbar .input {
  position: relative;
  margin-left: auto;
  margin-right: auto;
  display: block;
  height: 1.75rem;
  width: 24rem;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  padding-inline-start: 2rem;
  padding-top: 0.125rem;
}

.mockup-browser .mockup-browser-toolbar .input:before {
  content: "";
  position: absolute;
  inset-inline-start: 0.5rem;
  top: 50%;
  aspect-ratio: 1 / 1;
  height: 0.75rem;
  --tw-translate-y: -50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  border-radius: 9999px;
  border-width: 2px;
  border-color: currentColor;
  opacity: 0.6;
}

.mockup-browser .mockup-browser-toolbar .input:after {
  content: "";
  position: absolute;
  inset-inline-start: 1.25rem;
  top: 50%;
  height: 0.5rem;
  --tw-translate-y: 25%;
  --tw-rotate: -45deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  border-radius: 9999px;
  border-width: 1px;
  border-color: currentColor;
  opacity: 0.6;
}

.open.modal {
  transition-duration: 500ms;
}

.open .modal {
  transition-duration: 500ms;
}

.modal::-webkit-scrollbar-thumb {
  background-color: var(--fallback-s,oklch(var(--s)/0.5));
}

.modal::-webkit-scrollbar-thumb:hover {
  background-color: var(--fallback-s,oklch(var(--s)/0.8));
}

.modal::-webkit-scrollbar-track {
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b2,oklch(var(--b2)/var(--tw-bg-opacity, 1)));
}

.modal::-webkit-scrollbar {
  width: 0.5rem;
}

.open.modal-dialog {
  transition-duration: 500ms;
}

.open .modal-dialog {
  transition-duration: 500ms;
}

.pin-input::-moz-placeholder {
  color: var(--fallback-bc,oklch(var(--bc)/0.8));
}

.pin-input::placeholder {
  color: var(--fallback-bc,oklch(var(--bc)/0.8));
}

.pin-input:hover {
  border-color: var(--fallback-bc,oklch(var(--bc)/0.6));
}

.pin-input:focus,
  .pin-input:focus-within {
  --tw-border-opacity: 1;
  border-color: var(--fallback-p,oklch(var(--p)/var(--tw-border-opacity, 1)));
  --tw-shadow: 0 4px 6px -1px var(--fallback-bs,oklch(var(--bs)/0.2));
  --tw-shadow: var(--tw-shadow-colored);
  --tw-shadow-colored: 0 4px 6px -1px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
  --tw-shadow-color: var(--fallback-p,oklch(var(--p)/0.2));
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  --tw-ring-opacity: 1;
  --tw-ring-color: var(--fallback-p,oklch(var(--p)/var(--tw-ring-opacity, 1)));
}

.pin-input.disabled,
  .pin-input:disabled,
  .pin-input[disabled] {
  pointer-events: none;
  border-color: var(--fallback-bc,oklch(var(--bc)/0.25));
  background-color: var(--fallback-bc,oklch(var(--bc)/0.05));
  color: var(--fallback-bc,oklch(var(--bc)/0.5));
}

.pin-input.disabled::-moz-placeholder, .pin-input:disabled::-moz-placeholder, .pin-input[disabled]::-moz-placeholder {
  color: var(--fallback-bc,oklch(var(--bc)/0.4));
  --tw-placeholder-opacity: 0.2;
}

.pin-input.disabled::placeholder,
  .pin-input:disabled::placeholder,
  .pin-input[disabled]::placeholder {
  color: var(--fallback-bc,oklch(var(--bc)/0.4));
  --tw-placeholder-opacity: 0.2;
}

.progress-primary {
  --tw-bg-opacity: 1;
  background-color: var(--fallback-p,oklch(var(--p)/var(--tw-bg-opacity, 1)));
  --tw-text-opacity: 1;
  color: var(--fallback-pc,oklch(var(--pc)/var(--tw-text-opacity, 1)));
  --progress-color: var(--fallback-p,oklch(var(--p)/1));
}

@keyframes indeterminate-progress {
  0% {
    background-position-x: -75%;
  }

  50% {
    background-position-x: 125%;
  }

  100% {
    background-position-x: -75%;
  }
}

@keyframes progress-bar-stripes {
  0% {
    background-position-x: 0.75rem;
  }
}

.radio.disabled,
  .radio:disabled,
  .radio[disabled],
  .radio-inset.disabled,
  .radio-inset:disabled,
  .radio-inset[disabled] {
  pointer-events: none;
  opacity: 0.4;
}

.radio.disabled:hover, .radio:disabled:hover, .radio[disabled]:hover, .radio-inset.disabled:hover, .radio-inset:disabled:hover, .radio-inset[disabled]:hover {
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color);
}

@keyframes radiomark {
  0% {
    box-shadow: 0 0 0 9px var(--basebg) inset,
      0 0 0 9px var(--basebg) inset;
  }

  50% {
    box-shadow: 0 0 0 6px var(--basebg) inset,
      0 0 0 6px var(--basebg) inset;
  }

  100% {
    box-shadow: 0 0 0 3px var(--basebg) inset,
      0 0 0 3px var(--basebg) inset;
  }
}

@keyframes radioinsetmark {
  0% {
    border-width: 2px;
  }

  50% {
    border-width: 4px;
  }

  100% {
    border-width: 6px;
  }
}

.custom-label-option .label, .custom-option .label {
  padding: 0px;
  font-size: 1rem;
  line-height: 1.375rem;
}

.custom-label-option .label:first-of-type, .custom-option .label:first-of-type {
  padding-bottom: 0.25rem;
}

.custom-label-option .label .label-text, .custom-option .label .label-text {
  font-weight: 500;
  --tw-text-opacity: 1;
  color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity, 1)));
}

.validate .custom-label-option:has(.radio:invalid),
  .custom-label-option:has(.radio.is-invalid),
  .validate .custom-option:has(.radio:invalid),
  .custom-option:has(.radio.is-invalid) {
  --tw-border-opacity: 1;
  border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity, 1)));
}

.validate .custom-label-option:has(.radio:valid),
  .custom-label-option:has(.radio.is-valid),
  .validate .custom-option:has(.radio:valid),
  .custom-option:has(.radio.is-valid) {
  --tw-border-opacity: 1;
  border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity, 1)));
}

.validate .custom-option:has(.radio:valid):has(:checked), .custom-option:has(.radio.is-valid):has(:checked) {
  --tw-border-opacity: 1;
  border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity, 1)));
  --tw-ring-opacity: 1;
  --tw-ring-color: var(--fallback-su,oklch(var(--su)/var(--tw-ring-opacity, 1)));
}

.validate .custom-label-option:has(.radio:valid),
  .custom-label-option:has(.radio.is-valid) {
  background-color: var(--fallback-su,oklch(var(--su)/0.2));
}

.validate .custom-label-option:has(.radio:valid):has(:checked), .custom-label-option:has(.radio.is-valid):has(:checked) {
  --tw-border-opacity: 1;
  border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity, 1)));
  background-color: var(--fallback-su,oklch(var(--su)/0.2));
  --tw-ring-opacity: 1;
  --tw-ring-color: var(--fallback-su,oklch(var(--su)/var(--tw-ring-opacity, 1)));
}

.validate .custom-label-option:has(.radio:invalid),
  .custom-label-option:has(.radio.is-invalid) {
  background-color: var(--fallback-er,oklch(var(--er)/0.2));
}

.radio.is-valid,
.validate .radio:valid {
  --tw-border-opacity: 1 !important;
  border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity, 1))) !important;
}

.radio.is-valid:hover,
.validate .radio:valid:hover {
  --tw-ring-color: var(--fallback-su,oklch(var(--su)/0.1)) !important;
}

.radio.is-valid:focus-visible, .validate .radio:valid:focus-visible {
  outline-color: var(--fallback-su,oklch(var(--su)/0.3)) !important;
}

.radio.is-valid:checked,
  .radio.is-valid[aria-checked="true"],
  .validate .radio:valid:checked,
  .validate .radio:valid[aria-checked="true"] {
  --tw-border-opacity: 1 !important;
  border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity, 1))) !important;
  --tw-bg-opacity: 1 !important;
  background-color: var(--fallback-su,oklch(var(--su)/var(--tw-bg-opacity, 1))) !important;
}

.radio.is-invalid,
.validate .radio:invalid {
  --tw-border-opacity: 1 !important;
  border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity, 1))) !important;
}

.radio.is-invalid:hover,
.validate .radio:invalid:hover {
  --tw-ring-color: var(--fallback-er,oklch(var(--er)/0.1)) !important;
}

.radio.is-invalid:focus-visible, .validate .radio:invalid:focus-visible {
  outline-color: var(--fallback-er,oklch(var(--er)/0.3)) !important;
}

.radio.is-invalid:checked,
  .radio.is-invalid[aria-checked="true"],
  .validate .radio:invalid:checked,
  .validate .radio:invalid[aria-checked="true"] {
  --tw-border-opacity: 1 !important;
  border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity, 1))) !important;
  --tw-bg-opacity: 1 !important;
  background-color: var(--fallback-er,oklch(var(--er)/var(--tw-bg-opacity, 1))) !important;
}

.validate .label:has(+ * .radio:valid) > *, 
.validate .label-text:has(+ * .radio:valid), 
.validate .label-text:has(~ .radio:valid), 
.validate .label:has(~ .radio:valid) > *, 

.validate .radio:valid ~ .label, 
.validate .radio:valid ~ .label-text, 
.validate .radio:valid ~ .label .label-text,  
.validate *:has(.radio:valid) ~ .label, 
.validate *:has(.radio:valid) ~ .label-text, 
.validate *:has(.radio:valid) ~ .label .label-text {
  --tw-text-opacity: 1;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity, 1)));
}

.validate .label:has(+ * .radio:invalid) > *, 
.validate .label-text:has(+ * .radio:invalid), 
.validate .label-text:has(~ .radio:invalid), 
.validate .label:has(~ .radio:invalid) > *, 

.validate .radio:invalid ~ .label, 
.validate .radio:invalid ~ .label-text, 
.validate .radio:invalid ~ .label .label-text,  
.validate *:has(.radio:invalid) ~ .label, 
.validate *:has(.radio:invalid) ~ .label-text, 
.validate *:has(.radio:invalid) ~ .label .label-text {
  --tw-text-opacity: 1;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity, 1)));
}

.validate *:has(> .radio:valid) ~ .success-message,
.validate *:has(> .radio:valid) > * > .success-message,

.validate .radio:valid ~ .success-message,
.validate .radio:valid + * > .success-message {
  display: block;
}

.validate *:has(> .radio:invalid) ~ .error-message,
.validate *:has(> .radio:invalid) > * > .error-message,

.validate .radio:invalid ~ .error-message,
.validate .radio:invalid + * > .error-message {
  display: block;
}

.radio-inset.is-valid,
.validate .radio-inset:valid {
  --tw-border-opacity: 1 !important;
  border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity, 1))) !important;
}

.radio-inset.is-valid:hover,
.validate .radio-inset:valid:hover {
  --tw-ring-color: var(--fallback-su,oklch(var(--su)/0.1)) !important;
}

.radio-inset.is-valid:focus-visible, .validate .radio-inset:valid:focus-visible {
  outline-color: var(--fallback-su,oklch(var(--su)/0.3)) !important;
}

.radio-inset.is-valid:checked,
  .radio-inset.is-valid[aria-checked="true"],
  .validate .radio-inset:valid:checked,
  .validate .radio-inset:valid[aria-checked="true"] {
  --tw-border-opacity: 1 !important;
  border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity, 1))) !important;
}

.radio-inset.is-invalid,
.validate .radio-inset:invalid {
  --tw-border-opacity: 1 !important;
  border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity, 1))) !important;
}

.radio-inset.is-invalid:hover,
.validate .radio-inset:invalid:hover {
  --tw-ring-color: var(--fallback-er,oklch(var(--er)/0.1)) !important;
}

.radio-inset.is-invalid:focus-visible, .validate .radio-inset:invalid:focus-visible {
  outline-color: var(--fallback-er,oklch(var(--er)/0.3)) !important;
}

.radio-inset.is-invalid:checked,
  .radio-inset.is-invalid[aria-checked="true"],
  .validate .radio-inset:invalid:checked,
  .validate .radio-inset:invalid[aria-checked="true"] {
  --tw-border-opacity: 1 !important;
  border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity, 1))) !important;
}

.validate .label:has(+ * .radio-inset:valid) > *, 
.validate .label:has(+ * .radio-inset:valid).label-text, 
.validate .label:has(~ .radio-inset:valid).label-text, 
.validate .label:has(~ .radio-inset:valid) > *, 

.validate .radio-inset:valid ~ .label, 
.validate .radio-inset:valid ~ .label.label-text, 
.validate .radio-inset:valid ~ .label .label-text,  
.validate *:has(.radio-inset:valid) ~ .label, 
.validate *:has(.radio-inset:valid) ~ .label.label-text, 
.validate *:has(.radio-inset:valid) ~ .label .label-text {
  --tw-text-opacity: 1;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity, 1)));
}

.validate .label:has(+ * .radio-inset:invalid) > *, 
.validate .label-text:has(+ * .radio-inset:invalid), 
.validate .label-text:has(~ .radio-inset:invalid), 
.validate .label:has(~ .radio-inset:invalid) > *, 

.validate .radio-inset:invalid ~ .label, 
.validate .radio-inset:invalid ~ .label-text, 
.validate .radio-inset:invalid ~ .label .label-text,  
.validate *:has(.radio-inset:invalid) ~ .label, 
.validate *:has(.radio-inset:invalid) ~ .label-text, 
.validate *:has(.radio-inset:invalid) ~ .label .label-text {
  --tw-text-opacity: 1;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity, 1)));
}

.validate *:has(> .radio-inset:valid) ~ .success-message,
.validate *:has(> .radio-inset:valid) > * > .success-message,

.validate .radio-inset:valid ~ .success-message,
.validate .radio-inset:valid + * > .success-message {
  display: block;
}

.validate *:has(> .radio-inset:invalid) ~ .error-message,
.validate *:has(> .radio-inset:invalid) > * > .error-message,

.validate .radio-inset:invalid ~ .error-message,
.validate .radio-inset:invalid + * > .error-message {
  display: block;
}

.range::-webkit-slider-runnable-track {
  height: 0.5rem;
  width: 100%;
  border-radius: 9999px;
  background-color: var(--fallback-n,oklch(var(--n)/0.1));
}

.range::-moz-range-track {
  height: 0.5rem;
  width: 100%;
  border-radius: 9999px;
  background-color: var(--fallback-n,oklch(var(--n)/0.1));
}

.range::-webkit-slider-thumb {
  position: relative;
  top: 50%;
  width: 1rem;
  height: 1rem;
  --tw-translate-y: -50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  border-radius: 9999px;
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1)));
  --tw-shadow: 0 2px 4px 0 var(--fallback-bs,oklch(var(--bs)/0.26));
  --tw-shadow-colored: 0 2px 4px 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  -webkit-transition-property: all;
  transition-property: all;
  transition-duration: 150ms;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  appearance: none;
  box-sizing: border-box;
  -webkit-appearance: none;
  color: var(--range-shdw);
  border-color: var(--range-shdw);
  border-style: solid;
  border-width: 3px;
}

.range::-webkit-slider-thumb:hover {
  --tw-scale-x: 1.25;
  --tw-scale-y: 1.25;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  cursor: grab;
  box-shadow: 0 0 0 2px var(--range-shdw);
}

.range::-webkit-slider-thumb:active {
  --tw-scale-x: 1.25;
  --tw-scale-y: 1.25;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  cursor: grabbing;
  box-shadow: 0 0 0 3px var(--range-shdw);
}

.range::-moz-range-thumb {
  position: relative;
  width: 1rem;
  height: 1rem;
  border-radius: 9999px;
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1)));
  --tw-shadow: 0 2px 4px 0 var(--fallback-bs,oklch(var(--bs)/0.26));
  --tw-shadow-colored: 0 2px 4px 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  -moz-transition-property: all;
  transition-property: all;
  transition-duration: 150ms;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  top: 50%;
  color: var(--range-shdw);
  box-sizing: border-box;
  border-color: var(--range-shdw);
  border-style: solid;
  border-width: 3px;
}

.range::-moz-range-thumb:hover {
  cursor: grab;
  box-shadow: 0 0 0 2px var(--range-shdw);
}

.range::-moz-range-thumb:active {
  cursor: grabbing;
  box-shadow: 0 0 0 3px var(--range-shdw);
}

.range.disabled,
.range:disabled,
.range[disabled] {
  pointer-events: none;
  opacity: 0.3;
}

[dir="rtl"] .range::-webkit-slider-thumb {
  transform: translateY(-50%) scaleX(-1);
}

[dir="rtl"] .range::-moz-range-thumb {
  transform: translateY(-50%) scaleX(-1);
}

[dir="rtl"] .range::-webkit-slider-runnable-track,
[dir="rtl"] .range::-moz-range-track {
  direction: rtl;
}

.select:hover {
  border-color: var(--fallback-bc,oklch(var(--bc)/0.6));
}

.select:focus,
  .select:focus-within {
  --tw-border-opacity: 1;
  border-color: var(--fallback-p,oklch(var(--p)/var(--tw-border-opacity, 1)));
  --tw-shadow: 0 1px 2px 0 var(--fallback-bs,oklch(var(--bs)/0.22));
  --tw-shadow: var(--tw-shadow-colored);
  --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
  --tw-shadow-color: var(--fallback-p,oklch(var(--p)/0.22));
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  --tw-ring-opacity: 1;
  --tw-ring-color: var(--fallback-p,oklch(var(--p)/var(--tw-ring-opacity, 1)));
}

.select:focus ~ .select-floating-label,
    .select:focus ~ .select-filled-label,
    .select:focus-within ~ .select-floating-label,
    .select:focus-within ~ .select-filled-label {
  --tw-text-opacity: 1;
  color: var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity, 1)));
}

.select:focus.is-valid ~ .select-floating-label,
    .select:focus.is-valid ~ .select-filled-label,
    .select:focus-within.is-valid ~ .select-floating-label,
    .select:focus-within.is-valid ~ .select-filled-label {
  --tw-text-opacity: 1;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity, 1)));
}

.select:focus.is-invalid ~ .select-floating-label,
    .select:focus.is-invalid ~ .select-filled-label,
    .select:focus-within.is-invalid ~ .select-floating-label,
    .select:focus-within.is-invalid ~ .select-filled-label {
  --tw-text-opacity: 1;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity, 1)));
}

.select:focus-visible {
  outline: unset;
}

.select.disabled,
  .select:disabled,
  .select[disabled] {
  pointer-events: none;
  border-width: 0px;
  border-color: var(--fallback-bc,oklch(var(--bc)/0.1));
  background-color: var(--fallback-n,oklch(var(--n)/0.1));
  color: var(--fallback-bc,oklch(var(--bc)/0.5));
}

.select.disabled::-moz-placeholder, .select:disabled::-moz-placeholder, .select[disabled]::-moz-placeholder {
  color: var(--fallback-bc,oklch(var(--bc)/0.5));
}

.select.disabled::placeholder,
  .select:disabled::placeholder,
  .select[disabled]::placeholder {
  color: var(--fallback-bc,oklch(var(--bc)/0.5));
}

.select-multiple,
  .select[multiple],
  .select[size].select:not([size="1"]) {
  overflow-y: auto;
  overflow-x: hidden;
  background-image: none;
}

.select-multiple::-webkit-scrollbar-thumb,
  .select[multiple]::-webkit-scrollbar-thumb,
  .select[size].select:not([size="1"])::-webkit-scrollbar-thumb {
  border-radius: 9999px;
  background-color: var(--fallback-s,oklch(var(--s)/0.5));
}

.select-multiple::-webkit-scrollbar-thumb:hover,
  .select[multiple]::-webkit-scrollbar-thumb:hover,
  .select[size].select:not([size="1"])::-webkit-scrollbar-thumb:hover {
  background-color: var(--fallback-s,oklch(var(--s)/0.8));
}

.select-multiple::-webkit-scrollbar-track,
  .select[multiple]::-webkit-scrollbar-track,
  .select[size].select:not([size="1"])::-webkit-scrollbar-track {
  border-radius: 9999px;
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b2,oklch(var(--b2)/var(--tw-bg-opacity, 1)));
}

.select-multiple::-webkit-scrollbar,
  .select[multiple]::-webkit-scrollbar,
  .select[size].select:not([size="1"])::-webkit-scrollbar {
  width: 0.5rem;
}

.select.select-floating.disabled,
    .select.select-floating:disabled,
    .select.select-floating[disabled] {
  border-width: 1px;
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1)));
}

.select.select-floating.disabled ~ .select-floating-label, .select.select-floating:disabled ~ .select-floating-label, .select.select-floating[disabled] ~ .select-floating-label {
  color: var(--fallback-bc,oklch(var(--bc)/0.5));
}

.select.select-filled.disabled,
    .select.select-filled:disabled,
    .select.select-filled[disabled] {
  border-bottom-width: 1px;
}

.select.select-filled.disabled ~ .select-filled-label, .select.select-filled:disabled ~ .select-filled-label, .select.select-filled[disabled] ~ .select-filled-label {
  color: var(--fallback-bc,oklch(var(--bc)/0.5));
}

[dir="rtl"] .select {
  background-position: calc(0% + 1.3em) center;
}

.select.select-floating.select-lg ~ .select-floating-label {
  font-size: 0.875rem;
  line-height: 1.25rem;
}

.select.select-filled.select-lg ~ .select-filled-label {
  font-size: 0.875rem;
  line-height: 1.25rem;
}

.input-group .select {
  border-width: 0px;
}

.input-group .select:focus,
    .input-group .select:focus-within {
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color);
}

.select.is-valid,
.validate .select:valid {
  --tw-border-opacity: 1;
  border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity, 1)));
}

.select.is-valid:focus,
  .select.is-valid:focus-within,
  .validate .select:valid:focus,
  .validate .select:valid:focus-within {
  --tw-shadow-color: var(--fallback-su,oklch(var(--su)/0.22));
  --tw-shadow: var(--tw-shadow-colored);
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
  --tw-ring-opacity: 1;
  --tw-ring-color: var(--fallback-su,oklch(var(--su)/var(--tw-ring-opacity, 1)));
}

.select.is-valid.select-filled:focus,
  .select.is-valid.select-filled:focus-within,
  .validate .select:valid.select-filled:focus,
  .validate .select:valid.select-filled:focus-within {
  --tw-border-opacity: 1;
  border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity, 1)));
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color);
}

.select.is-valid ~ .select-floating-label,
  .select.is-valid ~ .select-filled-label,
  .validate .select:valid ~ .select-floating-label,
  .validate .select:valid ~ .select-filled-label {
  --tw-text-opacity: 1;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity, 1)));
}

.select.is-valid:focus ~ .select-filled-focused,
  .select.is-valid:focus-within ~ .select-filled-focused,
  .validate .select:valid:focus ~ .select-filled-focused,
  .validate .select:valid:focus-within ~ .select-filled-focused {
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-su,oklch(var(--su)/var(--tw-bg-opacity, 1)));
}

.select:focus.is-valid ~ .select-floating-label,
.validate .select:focus:valid ~ .select-floating-label,
.select:focus.is-valid ~ .select-filled-label,
.validate .select:focus:valid ~ .select-filled-label {
  --tw-text-opacity: 1;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity, 1)));
}

.select:focus.is-invalid ~ .select-floating-label,
.validate .select:focus:invalid ~ .select-floating-label,
.select:focus.is-invalid ~ .select-filled-label,
.validate .select:focus:invalid ~ .select-filled-label {
  --tw-text-opacity: 1;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity, 1)));
}

.select.is-invalid,
.validate .select:invalid {
  --tw-border-opacity: 1;
  border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity, 1)));
}

.select.is-invalid:focus,
  .select.is-invalid:focus-within,
  .validate .select:invalid:focus,
  .validate .select:invalid:focus-within {
  --tw-shadow-color: var(--fallback-er,oklch(var(--er)/0.22));
  --tw-shadow: var(--tw-shadow-colored);
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
  --tw-ring-opacity: 1;
  --tw-ring-color: var(--fallback-er,oklch(var(--er)/var(--tw-ring-opacity, 1)));
}

.select.is-invalid.select-filled:focus,
  .select.is-invalid.select-filled:focus-within,
  .validate .select:invalid.select-filled:focus,
  .validate .select:invalid.select-filled:focus-within {
  --tw-border-opacity: 1;
  border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity, 1)));
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color);
}

.select.is-invalid ~ .select-floating-label,
  .select.is-invalid ~ .select-filled-label,
  .validate .select:invalid ~ .select-floating-label,
  .validate .select:invalid ~ .select-filled-label {
  --tw-text-opacity: 1;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity, 1)));
}

.select.is-invalid:focus ~ .select-filled-focused,
  .select.is-invalid:focus-within ~ .select-filled-focused,
  .validate .select:invalid:focus ~ .select-filled-focused,
  .validate .select:invalid:focus-within ~ .select-filled-focused {
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-er,oklch(var(--er)/var(--tw-bg-opacity, 1)));
}

.validate .label:has(+ * .select:valid) > *, 
.validate .label-text:has(+ * .select:valid), 
.validate .label-text:has(~ .select:valid).label-text, 
.validate .label:has(~ .select:valid) > *, 

.validate .select:valid ~ .label, 
.validate .select:valid ~ .label-text, 
.validate .select:valid ~ .label .label-text,  
.validate *:has(.select:valid) ~ .label, 
.validate *:has(.select:valid) ~ .label-text, 
.validate *:has(.select:valid) ~ .label .label-text {
  --tw-text-opacity: 1;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity, 1)));
}

.validate .label:has(+ * .select:invalid) > *, 
.validate .label-text:has(+ * .select:invalid), 
.validate .label-text:has(~ .select:invalid), 
.validate .label:has(~ .select:invalid) > *, 

.validate .select:invalid ~ .label, 
.validate .select:invalid ~ .label-text, 
.validate .select:invalid ~ .label .label-text,  
.validate *:has(.select:invalid) ~ .label, 
.validate *:has(.select:invalid) ~ .label-text, 
.validate *:has(.select:invalid) ~ .label .label-text {
  --tw-text-opacity: 1;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity, 1)));
}

.validate *:has(> .select:valid) ~ .success-message,
.validate *:has(> .select:valid) > * > .success-message,

.validate .select:valid ~ .success-message,
.validate .select:valid + * > .success-message {
  display: block;
}

.validate *:has(> .select:invalid) ~ .error-message,
.validate *:has(> .select:invalid) > * > .error-message,

.validate .select:invalid ~ .error-message,
.validate .select:invalid + * > .error-message {
  display: block;
}

@keyframes skeleton {
  from {
    background-position: 150%;
  }

  to {
    background-position: -50%;
  }
}

:where(.stats) > :not([hidden]) ~ :not([hidden]) {
  --tw-divide-x-reverse: 0;
  border-right-width: calc(1px * var(--tw-divide-x-reverse));
  border-left-width: calc(1px * calc(1 - var(--tw-divide-x-reverse)));
  --tw-divide-y-reverse: 0;
  border-top-width: calc(0px * calc(1 - var(--tw-divide-y-reverse)));
  border-bottom-width: calc(0px * var(--tw-divide-y-reverse));
}

:is([dir="rtl"] .stats > :not([hidden]) ~ :not([hidden])) {
  --tw-divide-x-reverse: 1;
}

[dir="rtl"] .switch {
  --handleoffsetcalculator: calc(var(--handleoffset) * 1);
}

.switch:focus-visible {
  outline-style: solid;
  outline-width: 2px;
  outline-offset: 0px;
  outline-color: var(--fallback-n,oklch(var(--n)/0.3));
}

.switch:checked,
  .switch[checked="true"],
  .switch[aria-checked="true"] {
  background-image: none;
  --handleoffsetcalculator: var(--handleoffset);
  --tw-text-opacity: 1;
  color: var(--fallback-n,oklch(var(--n)/var(--tw-text-opacity, 1)));
}

[dir="rtl"] .switch:checked, [dir="rtl"] .switch[checked="true"], [dir="rtl"] .switch[aria-checked="true"] {
  --handleoffsetcalculator: calc(var(--handleoffset) * -1);
}

.switch:indeterminate {
  --tw-text-opacity: 1;
  color: var(--fallback-n,oklch(var(--n)/var(--tw-text-opacity, 1)));
  box-shadow: calc(var(--handleoffset) / 2) 0 0 3px var(--tglbg) inset,
      calc(var(--handleoffset) / -2) 0 0 3px var(--tglbg) inset,
      0 0 0 3px var(--tglbg) inset;
}

[dir="rtl"] .switch:indeterminate {
  box-shadow: calc(var(--handleoffset) / 2) 0 0 3px var(--tglbg) inset,
        calc(var(--handleoffset) / -2) 0 0 3px var(--tglbg) inset,
        0 0 0 3px var(--tglbg) inset;
}

.switch.disabled,
  .switch:disabled,
  .switch[disabled] {
  pointer-events: none;
  background-color: transparent;
  opacity: 0.4;
}

.switch-outline.disabled,
    .switch-outline:disabled,
    .switch-outline[disabled] {
  pointer-events: none;
  border-color: currentColor;
  background-color: transparent;
  opacity: 0.3;
  --switchhandleborder: 0 0 0 3px var(--fallback-bc,oklch(var(--bc)/1)) inset,
        var(--handleoffsetcalculator) 0 0 3px var(--fallback-bc,oklch(var(--bc)/1)) inset;
}

.switch.is-valid,
.validate .switch:valid {
  --tglbg: var(--fallback-su,oklch(var(--su)/1));
}

.switch.is-valid:focus-visible, .validate .switch:valid:focus-visible {
  outline-color: var(--fallback-su,oklch(var(--su)/0.3)) !important;
}

.switch.is-valid:checked,
  .switch.is-valid[checked="true"],
  .switch.is-valid[aria-checked="true"],
  .validate .switch:valid:checked,
  .validate .switch:valid[checked="true"],
  .validate .switch:valid[aria-checked="true"] {
  --tglbg: var(--fallback-su,oklch(var(--su)/1));
}

.switch.is-invalid,
.validate .switch:invalid {
  --tglbg: var(--fallback-er,oklch(var(--er)/1));
}

.switch.is-invalid:focus-visible, .validate .switch:invalid:focus-visible {
  outline-color: var(--fallback-er,oklch(var(--er)/0.3)) !important;
}

.switch.is-invalid:checked,
  .switch.is-invalid[checked="true"],
  .switch.is-invalid[aria-checked="true"],
  .validate .switch:invalid:checked,
  .validate .switch:invalid[checked="true"],
  .validate .switch:invalid[aria-checked="true"] {
  --tglbg: var(--fallback-er,oklch(var(--er)/1));
}

.validate .label:has(+ * .switch:valid) > *, 
.validate .label-text:has(+ * .switch:valid), 
.validate .label-text:has(~ .switch:valid), 
.validate .label:has(~ .switch:valid) > *, 


.validate .switch:valid ~ .label, 
.validate .switch:valid ~ .label-text, 
.validate .switch:valid ~ .label .label-text,  
.validate *:has(.switch:valid) ~ .label, 
.validate *:has(.switch:valid) ~ .label-text, 
.validate *:has(.switch:valid) ~ .label .label-text {
  --tw-text-opacity: 1;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity, 1)));
}

.validate .label:has(+ * .switch:invalid) > *, 
.validate .label-text:has(+ * .switch:invalid), 
.validate .label-text:has(~ .switch:invalid), 
.validate .label:has(~ .switch:invalid) > *, 

.validate .switch:invalid ~ .label, 
.validate .switch:invalid ~ .label-text, 
.validate .switch:invalid ~ .label .label-text,  
.validate *:has(.switch:invalid) ~ .label, 
.validate *:has(.switch:invalid) ~ .label-text, 
.validate *:has(.switch:invalid) ~ .label .label-text {
  --tw-text-opacity: 1;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity, 1)));
}

.validate *:has(> .switch:valid) ~ .success-message,
.validate *:has(> .switch:valid) > * > .success-message,

.validate .switch:valid ~ .success-message,
.validate .switch:valid + * > .success-message {
  display: block;
}

.validate *:has(> .switch:invalid) ~ .error-message,
.validate *:has(> .switch:invalid) > * > .error-message,

.validate .switch:invalid ~ .error-message,
.validate .switch:invalid + * > .error-message {
  display: block;
}

.switch-outline.is-valid,
.validate .switch-outline:valid {
  --tglbg: var(--fallback-b1,oklch(var(--b1)/1));
  --tw-border-opacity: 1;
  border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity, 1)));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-su,oklch(var(--su)/var(--tw-bg-opacity, 1)));
}

.switch-outline.is-valid:checked,
  .switch-outline.is-valid[checked="true"],
  .switch-outline.is-valid[aria-checked="true"],
  .validate .switch-outline:valid:checked,
  .validate .switch-outline:valid[checked="true"],
  .validate .switch-outline:valid[aria-checked="true"] {
  --tglbg: var(--fallback-b1,oklch(var(--b1)/1));
  --tw-border-opacity: 1;
  border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity, 1)));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-su,oklch(var(--su)/var(--tw-bg-opacity, 1)));
}

.switch-outline.is-invalid,
.validate .switch-outline:invalid {
  --tglbg: var(--fallback-b1,oklch(var(--b1)/1));
  --tw-border-opacity: 1;
  border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity, 1)));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-er,oklch(var(--er)/var(--tw-bg-opacity, 1)));
}

.switch-outline.is-invalid:checked,
  .switch-outline.is-invalid[checked="true"],
  .switch-outline.is-invalid[aria-checked="true"],
  .validate .switch-outline:invalid:checked,
  .validate .switch-outline:invalid[checked="true"],
  .validate .switch-outline:invalid[aria-checked="true"] {
  --tglbg: var(--fallback-b1,oklch(var(--b1)/1));
  --tw-border-opacity: 1;
  border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity, 1)));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-er,oklch(var(--er)/var(--tw-bg-opacity, 1)));
}

.validate .label:has(+ * .switch-outline:valid) > *, 
.validate .label-text:has(+ * .switch-outline:valid), 
.validate .label-text:has(~ .switch-outline:valid), 
.validate .label:has(~ .switch-outline:valid) > *, 


.validate .switch-outline:valid ~ .label, 
.validate .switch-outline:valid ~ .label-text, 
.validate .switch-outline:valid ~ .label .label-text,  
.validate *:has(.switch-outline:valid) ~ .label, 
.validate *:has(.switch-outline:valid) ~ .label-text, 
.validate *:has(.switch-outline:valid) ~ .label .label-text {
  --tw-text-opacity: 1;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity, 1)));
}

.validate .label:has(+ * .switch-outline:invalid) > *, 
.validate .label-text:has(+ * .switch-outline:invalid), 
.validate .label-text:has(~ .switch-outline:invalid), 
.validate .label:has(~ .switch-outline:invalid) > *, 

.validate .switch-outline:invalid ~ .label, 
.validate .switch-outline:invalid ~ .label-text, 
.validate .switch-outline:invalid ~ .label .label-text,  
.validate *:has(.switch-outline:invalid) ~ .label, 
.validate *:has(.switch-outline:invalid) ~ .label-text, 
.validate *:has(.switch-outline:invalid) ~ .label .label-text {
  --tw-text-opacity: 1;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity, 1)));
}

.validate *:has(> .switch-outline:valid) ~ .success-message,
.validate *:has(> .switch-outline:valid) > * > .success-message,

.validate .switch-outline:valid ~ .success-message,
.validate .switch-outline:valid + * > .success-message {
  display: block;
}

.validate *:has(> .switch-outline:invalid) ~ .error-message,
.validate *:has(> .switch-outline:invalid) > * > .error-message,

.validate .switch-outline:invalid ~ .error-message,
.validate .switch-outline:invalid + * > .error-message {
  display: block;
}

.tabs-lifted > .tab:focus-visible {
  border-end-end-radius: 0;
  border-end-start-radius: 0;
}

.tab.tab-active:not([disabled]) {
  --tw-border-opacity: 1;
  border-color: var(--fallback-p,oklch(var(--p)/var(--tw-border-opacity, 1)));
  color: var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity, 1)));
  --tw-text-opacity: 1;
}

.tab:focus,
  .tab:focus-visible {
  outline: 2px solid transparent;
  outline-offset: 2px;
}

.tab[disabled] {
  pointer-events: none;
  border-color: var(--fallback-bc,oklch(var(--bc)/var(--tw-border-opacity, 1)));
  --tw-border-opacity: 0.3;
  color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity, 1)));
  --tw-text-opacity: 0.4;
}

.tabs-bordered > .tab {
  border-color: var(--fallback-bc,oklch(var(--bc)/0.1));
  border-style: solid;
  border-bottom-width: calc(var(--tab-border, 1px) + 1px);
}

.tabs-lifted > .tab {
  border: var(--tab-border, 1px) solid transparent;
  border-width: 0 0 var(--tab-border, 1px) 0;
  border-radius: var(--tab-radius, 0.375rem);
  border-bottom-color: var(--tab-border-color);
  padding-inline-start: var(--tab-padding, 1rem);
  padding-inline-end: var(--tab-padding, 1rem);
  padding-top: var(--tab-border, 1px);
}

.tabs-lifted > .tab.tab-active:not([disabled]) {
  background-color: var(--tab-bg);
  border-width: var(--tab-border, 1px) var(--tab-border, 1px) 0 var(--tab-border, 1px);
  border-color: var(--tab-border-color);
  border-end-start-radius: 0;
  border-end-end-radius: 0;
  padding-inline-start: calc(var(--tab-padding, 1rem) - var(--tab-border, 1px));
  padding-inline-end: calc(var(--tab-padding, 1rem) - var(--tab-border, 1px));
  padding-bottom: var(--tab-border, 1px);
  padding-top: 0;
}

.tabs-lifted > .tab.tab-active:not([disabled]):before {
  z-index: 1;
  content: "";
  display: block;
  position: absolute;
  width: calc(100% + var(--tab-radius, 0.375rem) * 2);
  height: var(--tab-radius, 0.375rem);
  bottom: 0;
  background-size: var(--tab-radius, 0.375rem);
  background-position: top left,
        top right;
  background-repeat: no-repeat;
  --tab-grad: calc(69% - var(--tab-border, 1px));
  --radius-start: radial-gradient(
        circle at top left,
        transparent var(--tab-grad),
        var(--tab-border-color) calc(var(--tab-grad) + 0.25px),
        var(--tab-border-color) calc(var(--tab-grad) + var(--tab-border, 1px)),
        var(--tab-bg) calc(var(--tab-grad) + var(--tab-border, 1px) + 0.25px)
      );
  --radius-end: radial-gradient(
        circle at top right,
        transparent var(--tab-grad),
        var(--tab-border-color) calc(var(--tab-grad) + 0.25px),
        var(--tab-border-color) calc(var(--tab-grad) + var(--tab-border, 1px)),
        var(--tab-bg) calc(var(--tab-grad) + var(--tab-border, 1px) + 0.25px)
      );
  background-image: var(--radius-start), var(--radius-end);
}

.tabs-lifted > .tab.tab-active:not([disabled]):first-child:before {
  background-image: var(--radius-end);
  background-position: top right;
}

[dir="rtl"] .tabs-lifted > .tab.tab-active:not([disabled]):first-child:before {
  background-image: var(--radius-start);
  background-position: top left;
}

.tabs-lifted > .tab.tab-active:not([disabled]):last-child:before {
  background-image: var(--radius-start);
  background-position: top left;
}

[dir="rtl"] .tabs-lifted > .tab.tab-active:not([disabled]):last-child:before {
  background-image: var(--radius-end);
  background-position: top right;
}

.\!table:where([dir="rtl"], [dir="rtl"] *) {
  text-align: right !important;
}

.table:where([dir="rtl"], [dir="rtl"] *) {
  text-align: right;
}

.\!table::-webkit-scrollbar-thumb {
  background-color: var(--fallback-s,oklch(var(--s)/0.5)) !important;
}

.table::-webkit-scrollbar-thumb {
  background-color: var(--fallback-s,oklch(var(--s)/0.5));
}

.\!table::-webkit-scrollbar-thumb:hover {
  background-color: var(--fallback-s,oklch(var(--s)/0.8)) !important;
}

.table::-webkit-scrollbar-thumb:hover {
  background-color: var(--fallback-s,oklch(var(--s)/0.8));
}

.\!table::-webkit-scrollbar-track {
  --tw-bg-opacity: 1 !important;
  background-color: var(--fallback-b2,oklch(var(--b2)/var(--tw-bg-opacity, 1))) !important;
}

.table::-webkit-scrollbar-track {
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b2,oklch(var(--b2)/var(--tw-bg-opacity, 1)));
}

.\!table::-webkit-scrollbar {
  width: 0.5rem !important;
}

.table::-webkit-scrollbar {
  width: 0.5rem;
}

.\!table :where(th, td) {
  text-wrap: nowrap !important;
  padding-left: 1.25rem !important;
  padding-right: 1.25rem !important;
  padding-top: 0.55rem !important;
  padding-bottom: 0.55rem !important;
  vertical-align: middle !important;
  font-size: 1rem !important;
  line-height: 1.375rem !important;
}

.table :where(th, td) {
  text-wrap: nowrap;
  padding-left: 1.25rem;
  padding-right: 1.25rem;
  padding-top: 0.55rem;
  padding-bottom: 0.55rem;
  vertical-align: middle;
  font-size: 1rem;
  line-height: 1.375rem;
}

.\!table :where(th) {
  text-wrap: nowrap !important;
  font-size: 0.875rem !important;
  line-height: 1.25rem !important;
  font-weight: 500 !important;
  text-transform: uppercase !important;
  --tw-text-opacity: 1 !important;
  color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity, 1))) !important;
  letter-spacing: 1px !important;
}

.table :where(th) {
  text-wrap: nowrap;
  font-size: 0.875rem;
  line-height: 1.25rem;
  font-weight: 500;
  text-transform: uppercase;
  --tw-text-opacity: 1;
  color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity, 1)));
  letter-spacing: 1px;
}

.\!table tr.active,
  .\!table tr.active:nth-child(even) {
  background-color: var(--fallback-bc,oklch(var(--bc)/0.1)) !important;
}

.table tr.active,
  .table tr.active:nth-child(even),
  .table-striped tbody tr:nth-child(even) {
  background-color: var(--fallback-bc,oklch(var(--bc)/0.1));
}

.\!table tr.active,
  .\!table tr.active:nth-child(even) {
  background-color: var(--fallback-bc,oklch(var(--bc)/0.1)) !important;
}

.table-striped tr.active,
    .table-striped tr.active:nth-child(even),
    .table-striped-striped tbody tr:nth-child(even) {
  background-color: var(--fallback-bc,oklch(var(--bc)/0.1));
}

.\!table :where(thead, tbody) :where(tr:not(:last-child)),
    .\!table :where(thead, tbody) :where(tr:first-child:last-child) {
  border-bottom-width: 1px !important;
  border-color: var(--fallback-bc,oklch(var(--bc)/0.25)) !important;
}

.table :where(thead, tbody) :where(tr:not(:last-child)),
    .table :where(thead, tbody) :where(tr:first-child:last-child) {
  border-bottom-width: 1px;
  border-color: var(--fallback-bc,oklch(var(--bc)/0.25));
}

.\!table :where(thead, tbody) :where(tr:not(:last-child)),
    .\!table :where(thead, tbody) :where(tr:first-child:last-child) {
  border-bottom-width: 1px !important;
  border-color: var(--fallback-bc,oklch(var(--bc)/0.25)) !important;
}

.\!table :where(thead, tfoot, th) {
  white-space: nowrap !important;
  --tw-text-opacity: 1 !important;
  color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity, 1))) !important;
}

.table :where(thead, tfoot, th) {
  white-space: nowrap;
  --tw-text-opacity: 1;
  color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity, 1)));
}

textarea {
  background-color: transparent;
}

textarea:focus {
  outline-width: 0px;
  outline-color: transparent;
}

textarea:focus-visible {
  outline: unset;
}

.textarea::-moz-placeholder {
  color: var(--fallback-bc,oklch(var(--bc)/0.5));
}

.textarea::placeholder {
  color: var(--fallback-bc,oklch(var(--bc)/0.5));
}

.textarea::-webkit-scrollbar-thumb {
  border-radius: 9999px;
  background-color: var(--fallback-s,oklch(var(--s)/0.5));
}

.textarea::-webkit-scrollbar-thumb:hover {
  background-color: var(--fallback-s,oklch(var(--s)/0.8));
}

.textarea::-webkit-scrollbar-track {
  border-radius: 9999px;
  background-color: transparent;
}

.textarea::-webkit-scrollbar {
  width: 0.5rem;
}

.textarea:focus,
  s .textarea:focus-within {
  --tw-border-opacity: 1;
  border-color: var(--fallback-p,oklch(var(--p)/var(--tw-border-opacity, 1)));
  --tw-shadow: 0 1px 2px 0 var(--fallback-bs,oklch(var(--bs)/0.22));
  --tw-shadow: var(--tw-shadow-colored);
  --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
  --tw-shadow-color: var(--fallback-p,oklch(var(--p)/0.22));
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  --tw-ring-opacity: 1;
  --tw-ring-color: var(--fallback-p,oklch(var(--p)/var(--tw-ring-opacity, 1)));
}

.textarea.disabled,
  .textarea:disabled,
  .textarea[disabled] {
  pointer-events: none;
  border-width: 0px;
  border-color: var(--fallback-bc,oklch(var(--bc)/0.1));
  background-color: var(--fallback-n,oklch(var(--n)/0.1));
  color: var(--fallback-bc,oklch(var(--bc)/0.5));
}

.textarea.textarea-floating.disabled,
    .textarea.textarea-floating:disabled,
    .textarea.textarea-floating[disabled] {
  border-width: 1px;
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1)));
}

.textarea.textarea-floating.disabled ~ .textarea-floating-label, .textarea.textarea-floating:disabled ~ .textarea-floating-label, .textarea.textarea-floating[disabled] ~ .textarea-floating-label {
  color: var(--fallback-bc,oklch(var(--bc)/0.5));
}

.textarea.textarea-filled.disabled,
    .textarea.textarea-filled:disabled,
    .textarea.textarea-filled[disabled] {
  border-bottom-width: 1px;
}

.textarea.textarea-filled.disabled ~ .textarea-filled-label, .textarea.textarea-filled:disabled ~ .textarea-filled-label, .textarea.textarea-filled[disabled] ~ .textarea-filled-label {
  color: var(--fallback-bc,oklch(var(--bc)/0.5));
}

.input-group .textarea {
  border-width: 0px;
}

.input-group .textarea:focus,
    .input-group .textarea:focus-within {
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color);
}

.textarea.is-valid,
.validate .textarea:valid {
  --tw-border-opacity: 1;
  border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity, 1)));
}

.textarea.is-valid:focus,
  .textarea.is-valid:focus-within,
  .validate .textarea:valid:focus,
  .validate .textarea:valid:focus-within {
  --tw-shadow-color: var(--fallback-su,oklch(var(--su)/0.22));
  --tw-shadow: var(--tw-shadow-colored);
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
  --tw-ring-opacity: 1;
  --tw-ring-color: var(--fallback-su,oklch(var(--su)/var(--tw-ring-opacity, 1)));
}

.textarea.is-valid.textarea-filled:focus,
  .textarea.is-valid.textarea-filled:focus-within,
  .validate .textarea:valid.textarea-filled:focus,
  .validate .textarea:valid.textarea-filled:focus-within {
  --tw-border-opacity: 1;
  border-color: var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity, 1)));
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color);
}

.textarea.is-valid ~ .textarea-floating-label,
  .textarea.is-valid ~ .textarea-filled-label,
  .validate .textarea:valid ~ .textarea-floating-label,
  .validate .textarea:valid ~ .textarea-filled-label {
  --tw-text-opacity: 1;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity, 1)));
}

.textarea.is-valid:focus ~ .textarea-filled-focused,
  .textarea.is-valid:focus-within ~ .textarea-filled-focused,
  .validate .textarea:valid:focus ~ .textarea-filled-focused,
  .validate .textarea:valid:focus-within ~ .textarea-filled-focused {
  --tw-bg-opacity: 1;
  background-color: var(--fallback-su,oklch(var(--su)/var(--tw-bg-opacity, 1)));
}

.textarea:focus.is-valid ~ .textarea-floating-label,
.validate .textarea:focus:valid ~ .textarea-floating-label,
.textarea:focus.is-valid ~ .textarea-filled-label,
.validate .textarea:focus:valid ~ .textarea-filled-label {
  --tw-text-opacity: 1;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity, 1)));
}

.textarea:focus.is-invalid ~ .textarea-floating-label,
.validate .textarea:focus:invalid ~ .textarea-floating-label,
.textarea:focus.is-invalid ~ .textarea-filled-label,
.validate .textarea:focus:invalid ~ .textarea-filled-label {
  --tw-text-opacity: 1;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity, 1)));
}

.textarea.is-invalid,
.validate .textarea:invalid {
  --tw-border-opacity: 1;
  border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity, 1)));
}

.textarea.is-invalid:focus,
  .textarea.is-invalid:focus-within,
  .validate .textarea:invalid:focus,
  .validate .textarea:invalid:focus-within {
  --tw-shadow-color: var(--fallback-er,oklch(var(--er)/0.22));
  --tw-shadow: var(--tw-shadow-colored);
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
  --tw-ring-opacity: 1;
  --tw-ring-color: var(--fallback-er,oklch(var(--er)/var(--tw-ring-opacity, 1)));
}

.textarea.is-invalid.textarea-filled:focus,
  .textarea.is-invalid.textarea-filled:focus-within,
  .validate .textarea:invalid.textarea-filled:focus,
  .validate .textarea:invalid.textarea-filled:focus-within {
  --tw-border-opacity: 1;
  border-color: var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity, 1)));
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color);
}

.textarea.is-invalid ~ .textarea-floating-label,
  .textarea.is-invalid ~ .textarea-filled-label,
  .validate .textarea:invalid ~ .textarea-floating-label,
  .validate .textarea:invalid ~ .textarea-filled-label {
  --tw-text-opacity: 1;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity, 1)));
}

.textarea.is-invalid:focus ~ .textarea-filled-focused,
  .textarea.is-invalid:focus-within ~ .textarea-filled-focused,
  .validate .textarea:invalid:focus ~ .textarea-filled-focused,
  .validate .textarea:invalid:focus-within ~ .textarea-filled-focused {
  --tw-bg-opacity: 1;
  background-color: var(--fallback-er,oklch(var(--er)/var(--tw-bg-opacity, 1)));
}

.validate .label:has(+ * .textarea:valid) > *, 
.validate .label-text:has(+ * .textarea:valid), 
.validate .label-text:has(~ .textarea:valid), 
.validate .label:has(~ .textarea:valid) > *, 

.validate .textarea:valid ~ .label, 
.validate .textarea:valid ~ .label-text, 
.validate .textarea:valid ~ .label .label-text,  
.validate *:has(.textarea:valid) ~ .label, 
.validate *:has(.textarea:valid) ~ .label-text, 
.validate *:has(.textarea:valid) ~ .label .label-text {
  --tw-text-opacity: 1;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity, 1)));
}

.validate .label:has(+ * .textarea:invalid) > *, 
.validate .label-text:has(+ * .textarea:invalid), 
.validate .label-text:has(~ .textarea:invalid), 
.validate .label:has(~ .textarea:invalid) > *, 

.validate .textarea:invalid ~ .label, 
.validate .textarea:invalid ~ .label-text, 
.validate .textarea:invalid ~ .label .label-text,  
.validate *:has(.textarea:invalid) ~ .label, 
.validate *:has(.textarea:invalid) ~ .label-text, 
.validate *:has(.textarea:invalid) ~ .label .label-text {
  --tw-text-opacity: 1;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity, 1)));
}

.validate *:has(> .textarea:valid) ~ .success-message,
.validate *:has(> .textarea:valid) > * > .success-message,

.validate .textarea:valid ~ .success-message,
.validate .textarea:valid + * > .success-message {
  display: block;
}

.validate *:has(> .textarea:invalid) ~ .error-message,
.validate *:has(> .textarea:invalid) > * > .error-message,

.validate .textarea:invalid ~ .error-message,
.validate .textarea:invalid + * > .error-message {
  display: block;
}

.\!timeline hr {
  height: 1.5px !important;
}

.timeline hr {
  height: 1.5px;
}

:where(.\!timeline hr) {
  border-color: transparent !important;
  background-color: var(--fallback-bc,oklch(var(--bc)/0.1)) !important;
}

:where(.timeline hr) {
  border-color: transparent;
  background-color: var(--fallback-bc,oklch(var(--bc)/0.1));
}

:where(.\!timeline:has(.timeline-middle) hr):first-child {
  border-start-end-radius: var(--rounded-tooltip, 0.25rem) !important;
  border-end-end-radius: var(--rounded-tooltip, 0.25rem) !important;
  border-start-start-radius: 0px !important;
  border-end-start-radius: 0px !important;
}

:where(.timeline:has(.timeline-middle) hr):first-child {
  border-start-end-radius: var(--rounded-tooltip, 0.25rem);
  border-end-end-radius: var(--rounded-tooltip, 0.25rem);
  border-start-start-radius: 0px;
  border-end-start-radius: 0px;
}

:where(.\!timeline:has(.timeline-middle) hr):last-child {
  border-start-start-radius: var(--rounded-tooltip, 0.25rem) !important;
  border-end-start-radius: var(--rounded-tooltip, 0.25rem) !important;
  border-start-end-radius: 0px !important;
  border-end-end-radius: 0px !important;
}

:where(.timeline:has(.timeline-middle) hr):last-child {
  border-start-start-radius: var(--rounded-tooltip, 0.25rem);
  border-end-start-radius: var(--rounded-tooltip, 0.25rem);
  border-start-end-radius: 0px;
  border-end-end-radius: 0px;
}

:where(.\!timeline:not(:has(.timeline-middle)) :first-child hr:last-child) {
  border-start-start-radius: var(--rounded-tooltip, 0.25rem) !important;
  border-end-start-radius: var(--rounded-tooltip, 0.25rem) !important;
  border-start-end-radius: 0px !important;
  border-end-end-radius: 0px !important;
}

:where(.timeline:not(:has(.timeline-middle)) :first-child hr:last-child) {
  border-start-start-radius: var(--rounded-tooltip, 0.25rem);
  border-end-start-radius: var(--rounded-tooltip, 0.25rem);
  border-start-end-radius: 0px;
  border-end-end-radius: 0px;
}

:where(.\!timeline:not(:has(.timeline-middle)) :last-child hr:first-child) {
  border-start-end-radius: var(--rounded-tooltip, 0.25rem) !important;
  border-end-end-radius: var(--rounded-tooltip, 0.25rem) !important;
  border-start-start-radius: 0px !important;
  border-end-start-radius: 0px !important;
}

:where(.timeline:not(:has(.timeline-middle)) :last-child hr:first-child) {
  border-start-end-radius: var(--rounded-tooltip, 0.25rem);
  border-end-end-radius: var(--rounded-tooltip, 0.25rem);
  border-start-start-radius: 0px;
  border-end-start-radius: 0px;
}

.apexcharts-tooltip-series-group.apexcharts-active {
  padding-bottom: 0px !important;
}

.apexcharts-tooltip.apexcharts-theme-light,
.apexcharts-tooltip.apexcharts-theme-dark {
  border-style: none !important;
  --tw-bg-opacity: 1 !important;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1))) !important;
  --tw-shadow: 0 2px 4px 0 var(--fallback-bs,oklch(var(--bs)/0.26)) !important;
  --tw-shadow-colored: 0 2px 4px 0 var(--tw-shadow-color) !important;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow) !important;
}

.apexcharts-legend-text {
  margin-left: 0px !important;
  padding-left: 0px !important;
}

.apexcharts-legend-marker {
  top: 0px !important;
}

.apexcharts-tooltip-title {
  border-top-left-radius: 0.5rem;
  border-top-right-radius: 0.5rem;
  border-color: var(--fallback-bc,oklch(var(--bc)/0.4)) !important;
  --tw-bg-opacity: 1 !important;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1))) !important;
  padding-left: 0.625rem !important;
  padding-right: 0.625rem !important;
  font-size: 0.875rem !important;
  line-height: 1.25rem !important;
  font-weight: 600 !important;
  --tw-text-opacity: 1;
  color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity, 1)));
}

.flatpickr-calendar {
  visibility: hidden;
  position: absolute;
  display: flex;
  max-width: 18rem;
  touch-action: manipulation;
  flex-direction: row;
  gap: 0.375rem;
  overflow: hidden;
  border-radius: var(--rounded-box, 0.5rem);
  border-color: transparent;
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1)));
  --tw-shadow: 0 4px 6px -1px var(--fallback-bs,oklch(var(--bs)/0.2));
  --tw-shadow-colored: 0 4px 6px -1px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.flatpickr-calendar.hasWeeks {
  max-width: 21rem;
}

.flatpickr-calendar::after,
  .flatpickr-calendar::before {
  content: none;
}

.flatpickr-current-month {
  position: absolute;
  inset-inline-start: 1rem;
  display: flex;
  width: auto;
  align-items: center;
  justify-content: center;
  gap: 0.25rem;
  padding-top: 0px;
  font-size: 1rem;
  line-height: 1.375rem;
  font-weight: 500;
  --tw-text-opacity: 1;
  color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity, 1)));
}

.flatpickr-current-month:where([dir="rtl"], [dir="rtl"] *) {
  inset-inline-end: 1rem;
  inset-inline-start: auto;
}

.flatpickr-current-month .flatpickr-monthDropdown-months,
  .flatpickr-current-month input.cur-year {
  display: flex;
  cursor: pointer;
  align-items: center;
  justify-content: center;
  border-radius: 0px;
  border-width: 0px;
  vertical-align: middle;
  font-weight: 500;
  outline: 2px solid transparent;
  outline-offset: 2px;
  font-size: inherit;
  font-family: inherit;
  line-height: inherit;
  color: inherit;
}

.flatpickr-current-month span.cur-month {
  margin: 0px;
  font-weight: 500;
}

.flatpickr-current-month span.cur-month:hover {
  background-color: transparent;
}

.flatpickr-current-month .numInputWrapper {
  display: inline-block;
  width: 6ch;
}

.flatpickr-current-month .numInputWrapper:hover {
  background-color: transparent;
}

.flatpickr-current-month .flatpickr-monthDropdown-months {
  position: relative;
  margin-top: -1px;
  cursor: pointer;
  --tw-bg-opacity: 1 !important;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1))) !important;
  padding: 0px;
}

.flatpickr-current-month input.cur-year {
  margin: 0px;
  height: 1.25rem;
  cursor: default;
  padding-inline-start: 0.25rem;
}

.flatpickr-current-month input.cur-year:focus {
  outline: 2px solid transparent;
  outline-offset: 2px;
}

.flatpickr-current-month input.cur-year[disabled],
    .flatpickr-current-month input.cur-year[disabled]:hover {
  pointer-events: none;
  background-color: transparent;
}

.flatpickr-months .flatpickr-month {
  position: relative;
  display: flex;
  height: 3.75rem;
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
  align-items: center;
  overflow: hidden;
  border-top-left-radius: var(--rounded-box, 0.5rem);
  border-top-right-radius: var(--rounded-box, 0.5rem);
  padding-left: 1rem;
  padding-right: 1rem;
  text-align: center;
}

.flatpickr-months .flatpickr-prev-month,
  .flatpickr-months .flatpickr-next-month {
  position: absolute;
  top: 1rem;
  display: flex;
  width: 1.75rem;
  height: 1.75rem;
  align-items: center;
  justify-content: center;
  border-radius: 9999px;
  background-color: var(--fallback-n,oklch(var(--n)/0.1));
  padding: 0px;
  --tw-text-opacity: 1;
  color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity, 1)));
  text-decoration-line: none;
}

.flatpickr-months .flatpickr-prev-month:hover,
  .flatpickr-months .flatpickr-next-month:hover {
  fill: var(--fallback-bc,oklch(var(--bc)/0.9));
}

.flatpickr-months .flatpickr-prev-month:where([dir="rtl"], [dir="rtl"] *),
  .flatpickr-months .flatpickr-next-month:where([dir="rtl"], [dir="rtl"] *) {
  --tw-rotate: 180deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.flatpickr-months .flatpickr-prev-month svg, .flatpickr-months .flatpickr-next-month svg {
  width: 0.75rem;
  height: 0.75rem;
  fill: var(--fallback-bc,oklch(var(--bc)/0.9));
  vertical-align: middle;
  --tw-text-opacity: 1;
  color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity, 1)));
}

.flatpickr-months .flatpickr-prev-month:hover svg,
  .flatpickr-months .flatpickr-next-month:hover svg {
  fill: var(--fallback-bc,oklch(var(--bc)/0.9));
}

.flatpickr-months .flatpickr-prev-month.flatpickr-prev-month {
  inset-inline-end: 50px;
  inset-inline-start: auto;
}

.flatpickr-months .flatpickr-prev-month.flatpickr-prev-month:where([dir="rtl"], [dir="rtl"] *) {
  inset-inline-end: auto;
  inset-inline-start: 3.5rem;
  --tw-skew-x: -1deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.flatpickr-months .flatpickr-next-month.flatpickr-prev-month {
  inset-inline-end: 0px;
  inset-inline-start: 0px;
}

.flatpickr-months .flatpickr-next-month.flatpickr-next-month {
  inset-inline-end: 1rem;
}

.flatpickr-months .flatpickr-next-month.flatpickr-next-month:where([dir="rtl"], [dir="rtl"] *) {
  inset-inline-end: auto;
  inset-inline-start: 1rem;
  --tw-skew-x: -1deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.flatpickr-weekdays {
  display: flex;
  width: 100%;
  align-items: center;
  overflow: hidden;
  padding-left: 0.75rem;
  padding-right: 0.75rem;
  text-align: center;
}

.flatpickr-weekdaycontainer {
  display: flex;
  width: 100%;
}

span.flatpickr-weekday,
.flatpickr-weekwrapper .flatpickr-weekday {
  margin: 0px;
  display: block;
  cursor: default;
  text-align: center;
  font-size: 0.875rem;
  line-height: 1.25rem;
  font-weight: 500;
  --tw-text-opacity: 1;
  color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity, 1)));
}

.flatpickr-days {
  position: relative;
  display: flex;
  width: 100%;
  max-width: 18rem;
  flex-wrap: wrap;
  overflow: hidden;
  padding-left: 0.625rem;
  padding-right: 0.625rem;
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
}

.flatpickr-days:focus {
  outline: 2px solid transparent;
  outline-offset: 2px;
}

.flatpickr-calendar.hasTime .flatpickr-days {
  border-bottom-right-radius: 0px;
  border-bottom-left-radius: 0px;
  border-bottom-width: 0px;
}

.flatpickr-days .dayContainer {
  display: flex;
  min-width: 100%;
  max-width: 100%;
  flex-wrap: wrap;
  justify-content: center;
  row-gap: 0.125rem;
  padding: 0px;
  opacity: 1;
  outline: 2px solid transparent;
  outline-offset: 2px;
}

.flatpickr-day {
  position: relative;
  margin: 0px;
  display: flex;
  width: 2.375rem;
  height: 2.375rem;
  max-width: 2.375rem;
  cursor: pointer;
  align-items: center;
  justify-content: center;
  text-align: center;
  font-size: 1rem;
  line-height: 1.375rem;
  --tw-text-opacity: 1;
  color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity, 1)));
}

.flatpickr-day.today:not(.selected) {
  border-color: transparent;
  background-color: var(--fallback-p,oklch(var(--p)/0.2));
  --tw-text-opacity: 1;
  color: var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity, 1)));
}

.flatpickr-day.inRange,
  .flatpickr-day.prevMonthDay.inRange,
  .flatpickr-day.nextMonthDay.inRange,
  .flatpickr-day.today.inRange,
  .flatpickr-day.prevMonthDay.today.inRange,
  .flatpickr-day.nextMonthDay.today.inRange,
  .flatpickr-day:hover,
  .flatpickr-day.prevMonthDay:hover,
  .flatpickr-day.nextMonthDay:hover,
  .flatpickr-day:focus,
  .flatpickr-day.prevMonthDay:focus,
  .flatpickr-day.nextMonthDay:focus {
  cursor: pointer;
  outline: 2px solid transparent;
  outline-offset: 2px;
}

.flatpickr-day:hover:not(.selected, .today), .flatpickr-day:focus:not(.selected, .today), .flatpickr-day.prevMonthDay:hover:not(.selected, .today), .flatpickr-day.nextMonthDay:hover:not(.selected, .today), .flatpickr-day.prevMonthDay:focus:not(.selected, .today), .flatpickr-day.nextMonthDay:focus:not(.selected, .today) {
  border-color: transparent;
  background-color: var(--fallback-n,oklch(var(--n)/0.1));
}

.flatpickr-day.selected,
  .flatpickr-day.startRange,
  .flatpickr-day.endRange,
  .flatpickr-day.selected.inRange,
  .flatpickr-day.startRange.inRange,
  .flatpickr-day.endRange.inRange,
  .flatpickr-day.selected:focus,
  .flatpickr-day.startRange:focus,
  .flatpickr-day.endRange:focus,
  .flatpickr-day.selected:hover,
  .flatpickr-day.startRange:hover,
  .flatpickr-day.endRange:hover,
  .flatpickr-day.selected.prevMonthDay,
  .flatpickr-day.startRange.prevMonthDay,
  .flatpickr-day.endRange.prevMonthDay,
  .flatpickr-day.selected.nextMonthDay,
  .flatpickr-day.startRange.nextMonthDay,
  .flatpickr-day.endRange.nextMonthDay {
  border-color: transparent;
  --tw-bg-opacity: 1;
  background-color: var(--fallback-p,oklch(var(--p)/var(--tw-bg-opacity, 1)));
  --tw-text-opacity: 1;
  color: var(--fallback-pc,oklch(var(--pc)/var(--tw-text-opacity, 1)));
  --tw-shadow: 0 2px 4px 0 var(--fallback-bs,oklch(var(--bs)/0.26));
  --tw-shadow-colored: 0 2px 4px 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.flatpickr-day.inRange:not(.startRange):not(.endRange) {
  border-radius: 0px;
  border-color: transparent;
}

.flatpickr-day.disabled,
  .flatpickr-day.disabled:hover {
  pointer-events: none;
  border-color: transparent;
  background-color: transparent;
  color: var(--fallback-bc,oklch(var(--bc)/0.5));
}

.flatpickr-day.prevMonthDay,
  .flatpickr-day.nextMonthDay,
  .flatpickr-day.notAllowed,
  .flatpickr-day.notAllowed.prevMonthDay,
  .flatpickr-day.notAllowed.nextMonthDay {
  border-color: transparent;
  background-color: transparent;
}

.flatpickr-day.week.selected {
  border-radius: 0px;
}

.flatpickr-day.selected.startRange,
  .flatpickr-day.startRange.startRange,
  .flatpickr-day.endRange.startRange {
  border-end-end-radius: 0px;
  border-start-end-radius: 0px;
}

.flatpickr-day.selected.endRange,
  .flatpickr-day.startRange.endRange,
  .flatpickr-day.endRange.endRange {
  border-end-start-radius: 0px;
  border-start-start-radius: 0px;
}

.flatpickr-day.flatpickr-disabled,
  .flatpickr-day.flatpickr-disabled:hover,
  .flatpickr-day.prevMonthDay,
  .flatpickr-day.nextMonthDay,
  .flatpickr-day.notAllowed,
  .flatpickr-day.notAllowed.prevMonthDay,
  .flatpickr-day.notAllowed.nextMonthDay {
  color: var(--fallback-bc,oklch(var(--bc)/0.5));
}

.flatpickr-day.inRange,
.flatpickr-day.inRange:hover {
  background-color: var(--fallback-p,oklch(var(--p)/0.2));
  --tw-text-opacity: 1;
  color: var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity, 1)));
  box-shadow: unset;
}

.flatpickr-day.selected.startRange + .endRange:not(:nth-child(7n + 1)),
.flatpickr-day.startRange.startRange + .endRange:not(:nth-child(7n + 1)),
.flatpickr-day.endRange.startRange + .endRange:not(:nth-child(7n + 1)) {
  box-shadow: unset;
}

.flatpickr-weekwrapper span.flatpickr-day,
  .flatpickr-weekwrapper span.flatpickr-day:hover {
  margin: 0px;
  display: flex;
  width: 2.375rem;
  height: 2.375rem;
  max-width: 2.375rem;
  cursor: pointer;
  align-items: center;
  justify-content: center;
  text-align: center;
  font-size: 1rem;
  line-height: 1.375rem;
  --tw-text-opacity: 1;
  color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity, 1)));
}

.flatpickr-weekwrapper span.flatpickr-day:not(:last-child),
  .flatpickr-weekwrapper span.flatpickr-day:hover:not(:last-child) {
  margin-bottom: 0.125rem;
}

.flatpickr-weekwrapper .flatpickr-weeks {
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
  padding-inline-end: 0px;
  padding-inline-start: 0.625rem;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.flatpickr-weekwrapper .flatpickr-weekday {
  padding-inline-start: 0.75rem;
  line-height: 28px;
}

.flatpickr-calendar .flatpickr-innerContainer:has(> .flatpickr-weekwrapper) > .flatpickr-rContainer .flatpickr-weekdays,
  .flatpickr-calendar .flatpickr-innerContainer:has(> .flatpickr-weekwrapper) > .flatpickr-rContainer .flatpickr-days {
  padding-inline-start: 0px;
}

.flatpickr-calendar.hasTime .flatpickr-time {
  height: 100%;
  border-color: var(--fallback-bc,oklch(var(--bc)/0.1));
  padding-left: 1.125rem;
  padding-right: 1.125rem;
  padding-top: 0.75rem;
  padding-bottom: 0.75rem;
}

.flatpickr-time {
  max-height: unset;
  gap: 0.5rem;
  line-height: 30px;
}

.flatpickr-time .numInputWrapper {
  border-radius: var(--rounded-btn, 0.375rem);
  height: inherit;
}

.flatpickr-time input:hover,
  .flatpickr-time .flatpickr-am-pm:hover,
  .flatpickr-time input:focus,
  .flatpickr-time .flatpickr-am-pm:focus {
  background: unset;
}

.flatpickr-time .numInputWrapper span.arrowUp {
  top: 10%;
}

.flatpickr-time:after {
  content: none;
}

.flatpickr-calendar.hasTime.noCalendar > .flatpickr-time {
  border-color: transparent;
}

.flatpickr-time input.flatpickr-hour {
  height: auto;
  border-radius: var(--rounded-btn, 0.375rem);
  border-width: 1px;
  border-style: solid;
  border-color: var(--fallback-bc,oklch(var(--bc)/0.1));
  font-size: 1rem;
  line-height: 1.375rem;
  line-height: inherit;
  font-weight: 400;
  --tw-text-opacity: 1;
  color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity, 1)));
}

.flatpickr-time input.flatpickr-minute {
  height: auto;
  border-radius: var(--rounded-btn, 0.375rem);
  border-width: 1px;
  border-style: solid;
  border-color: var(--fallback-bc,oklch(var(--bc)/0.1));
  font-size: 1rem;
  line-height: 1.375rem;
  line-height: inherit;
  --tw-text-opacity: 1;
  color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity, 1)));
}

.flatpickr-time .flatpickr-am-pm {
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: var(--rounded-btn, 0.375rem);
  border-width: 1px;
  border-color: var(--fallback-bc,oklch(var(--bc)/0.1));
  font-size: 1rem;
  line-height: 1.375rem;
  line-height: inherit;
  --tw-text-opacity: 1;
  color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity, 1)));
}

.numInputWrapper:hover,
.numInputWrapper span:hover {
  background: unset;
}

.flatpickr-current-month .numInputWrapper span.arrowUp:after,
.flatpickr-time .numInputWrapper span.arrowUp:after {
  border-bottom-color: var(--fallback-bc,oklch(var(--bc)/0.8));
}

.flatpickr-current-month .numInputWrapper span.arrowDown:after,
.flatpickr-time .numInputWrapper span.arrowDown:after {
  border-top-color: var(--fallback-bc,oklch(var(--bc)/0.8));
}

.numInputWrapper span {
  border-width: 0px;
}

.flatpickr-calendar:not(.inline):not(.open) {
  display: none;
}

:root {
  --fc-page-bg-color: var(--fallback-b1,oklch(var(--b1)/1));
  --fc-neutral-bg-color: var(--fallback-n,oklch(var(--n)/0.3));
  --fc-neutral-text-color: var(--fallback-nc,oklch(var(--nc)/1));
  --fc-border-color: var(--fallback-bc,oklch(var(--bc)/0.16));
  --fc-button-text-color: var(--fallback-p,oklch(var(--p)/1));
  --fc-button-bg-color: var(--fallback-p,oklch(var(--p)/0.16));
  --fc-button-border-color: var(--fallback-p,oklch(var(--p)/0.16));
  --fc-button-hover-bg-color: var(--fallback-p,oklch(var(--p)/0.24));
  --fc-button-hover-border-color: var(--fallback-p,oklch(var(--p)/0.24));
  --fc-button-active-bg-color: var(--fallback-p,oklch(var(--p)/0.24));
  --fc-button-active-border-color: var(--fallback-p,oklch(var(--p)/0.24));
  --fc-event-bg-color: var(--fallback-p,oklch(var(--p)/0.16));
  --fc-event-border-color: var(--fallback-p,oklch(var(--p)/1));
  --fc-event-text-color: var(--fallback-p,oklch(var(--p)/1));
  --fc-event-selected-overlay-color: var(--fallback-s,oklch(var(--s)/0.16));
  --fc-list-event-dot-width: 8px;
  --fc-list-event-hover-bg-color: var(--fallback-s,oklch(var(--s)/0.16));
  --fc-more-link-bg-color: var(--fallback-s,oklch(var(--s)/0.16));
  --fc-more-link-text-color: var(--fallback-s,oklch(var(--s)/1));
  --fc-event-resizer-thickness: 8px;
  --fc-event-resizer-dot-total-width: 8px;
  --fc-event-resizer-dot-border-width: 1px;
  --fc-non-business-color: var(--fallback-in,oklch(var(--in)/0.16));
  --fc-bg-event-color: var(--fallback-n,oklch(var(--n)/1));
  --fc-bg-event-opacity: 0.3;
  --fc-highlight-color: var(--fallback-s,oklch(var(--s)/0.16));
  --fc-today-bg-color: var(--fallback-b2,oklch(var(--b2)/0.5));
  --fc-now-indicator-color: var(--fallback-wa,oklch(var(--wa)/1));
}

@keyframes notyf-fadeinright {
  0% {
    opacity: 0;
    transform: translateX(-25%);
  }

  to {
    opacity: 1;
    transform: translateX(0%);
  }
}

@keyframes notyf-fadeoutleft {
  0% {
    opacity: 1;
    transform: translateX(0);
  }

  to {
    opacity: 0;
    transform: translateX(-25%);
  }
}

@keyframes rating-jump {
  0%,
  100% {
    transform: translateY(0) scale(1);
  }

  50% {
    transform: translateY(-0.3em) scale(1.1);
  }
}

.advance-select-xs ~ .advance-select-menu .advance-select-option {
  width: 100%;
  cursor: pointer;
  padding-left: 0.5rem;
  padding-right: 0.5rem;
  padding-top: 0.25rem;
  padding-bottom: 0.25rem;
  font-size: 0.875rem;
  line-height: 1.25rem;
  font-weight: 400;
}

.advance-select-sm ~ .advance-select-menu .advance-select-option {
  width: 100%;
  cursor: pointer;
  padding-left: 0.5rem;
  padding-right: 0.5rem;
  padding-top: 0.375rem;
  padding-bottom: 0.375rem;
  font-size: 0.875rem;
  line-height: 1.25rem;
  font-weight: 400;
}

.advance-select-lg ~ .advance-select-menu .advance-select-option {
  width: 100%;
  cursor: pointer;
  padding-left: 1rem;
  padding-right: 1rem;
  padding-top: 0.75rem;
  padding-bottom: 0.75rem;
  font-size: 1.125rem;
  line-height: 1.5rem;
  font-weight: 400;
}

.artboard.phone-1.horizontal,
      .artboard.phone-1.artboard-horizontal {
  width: 568px;
  height: 320px;
}

.artboard.phone-2.horizontal,
      .artboard.phone-2.artboard-horizontal {
  width: 667px;
  height: 375px;
}

.artboard.phone-3.horizontal,
      .artboard.phone-3.artboard-horizontal {
  width: 736px;
  height: 414px;
}

.artboard.phone-4.horizontal,
      .artboard.phone-4.artboard-horizontal {
  width: 812px;
  height: 375px;
}

.artboard.phone-5.horizontal,
      .artboard.phone-5.artboard-horizontal {
  width: 896px;
  height: 414px;
}

.artboard.phone-6.horizontal,
      .artboard.phone-6.artboard-horizontal {
  width: 1024px;
  height: 320px;
}

.btn-sm {
  height: 1.875rem;
  min-height: 1.875rem;
  padding-left: 0.75rem;
  padding-right: 0.75rem;
  font-size: 0.875rem;
  line-height: 1.25rem;
}

.btn-block {
  width: 100%;
}

.btn-square:where(.btn-sm) {
  height: 1.875rem;
  width: 1.875rem;
  padding: 0px;
}

.btn-circle:where(.btn-xs) {
  height: 1.5rem;
  width: 1.5rem;
  border-radius: 9999px;
  padding: 0px;
}

.btn-circle:where(.btn-sm) {
  height: 1.875rem;
  width: 1.875rem;
  border-radius: 9999px;
  padding: 0px;
}

.btn-circle:where(.btn-lg) {
  height: 2.875rem;
  width: 2.875rem;
  border-radius: 9999px;
  padding: 0px;
}

.drawer-start {
  inset-inline-start: 0px;
  top: 0px;
  --tw-translate-x: -100%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  inset-inline-end: calc(100vw - 23.45rem);
}

.drawer-start:where([dir="rtl"], [dir="rtl"] *) {
  --tw-translate-x: 100%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.indicator :where(.indicator-item) {
  bottom: auto;
  inset-inline-end: 0px;
  inset-inline-start: auto;
  top: 0px;
  --tw-translate-y: -50%;
  --tw-translate-x: 50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.indicator :where(.indicator-item):where([dir="rtl"], [dir="rtl"] *) {
  --tw-translate-x: -50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.indicator :where(.indicator-item.indicator-start) {
  inset-inline-end: auto;
  inset-inline-start: 0px;
  --tw-translate-x: -50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.indicator :where(.indicator-item.indicator-start):where([dir="rtl"], [dir="rtl"] *) {
  --tw-translate-x: 50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.indicator :where(.indicator-item.indicator-center) {
  inset-inline-end: 50%;
  inset-inline-start: 50%;
  --tw-translate-x: -50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.indicator :where(.indicator-item.indicator-center):where([dir="rtl"], [dir="rtl"] *) {
  --tw-translate-x: 50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.indicator :where(.indicator-item.indicator-end) {
  inset-inline-end: 0px;
  inset-inline-start: auto;
  --tw-translate-x: 50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.indicator :where(.indicator-item.indicator-end):where([dir="rtl"], [dir="rtl"] *) {
  --tw-translate-x: -50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.indicator :where(.indicator-item.indicator-bottom) {
  bottom: 0px;
  top: auto;
  --tw-translate-y: 50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.indicator :where(.indicator-item.indicator-middle) {
  top: 50%;
}

.indicator :where(.indicator-item.indicator-top) {
  bottom: auto;
  top: 0px;
  --tw-translate-y: -50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.join.join-vertical {
  flex-direction: column;
}

.join.join-vertical .join-item:first-child:not(:last-child),
  .join.join-vertical *:first-child:not(:last-child) .join-item {
  border-end-start-radius: 0;
  border-end-end-radius: 0;
  border-start-start-radius: inherit;
  border-start-end-radius: inherit;
}

.join.join-vertical .join-item:last-child:not(:first-child),
  .join.join-vertical *:last-child:not(:first-child) .join-item {
  border-start-start-radius: 0;
  border-start-end-radius: 0;
  border-end-start-radius: inherit;
  border-end-end-radius: inherit;
}

.menu-horizontal > li:not(.menu-title) > .collapse > ul {
  position: absolute;
}

.menu-vertical > li:not(.menu-title) > .collapse > ul {
  position: relative;
}

.tabs-lg :where(.tab) {
  height: 2.875rem;
  font-size: 1.125rem;
  line-height: 1.5rem;
  --tab-padding: 1.25rem;
}

.tabs-sm :where(.tab) {
  height: 1.875rem;
  font-size: 0.875rem;
  line-height: 1.25rem;
  --tab-padding: 0.75rem;
}

.tabs-xs :where(.tab) {
  height: 1.5rem;
  font-size: 0.875rem;
  line-height: 1.25rem;
  --tab-padding: 0.5rem;
}

.drawer-start,
.drawer-end,
.drawer-top,
.drawer-bottom {
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  transition-property: all;
  transition-duration: 300ms;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}

.join.join-vertical > :where(*:not(:first-child)) {
  margin-left: 0px;
  margin-right: 0px;
  margin-top: -1px;
}

.menu-horizontal > li:not(.menu-title) > .collapse > ul {
  margin-inline-start: 0px;
  margin-top: 1rem;
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
  padding-inline-end: 0.5rem;
}

.menu-horizontal > li > .collapse > ul:before {
  content: none;
}

:where(.menu-horizontal > li:not(.menu-title) > .collapse > ul) {
  border-radius: var(--rounded-box, 0.5rem);
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1)));
  --tw-shadow: 0 2px 4px 0 var(--fallback-bs,oklch(var(--bs)/0.26));
  --tw-shadow-colored: 0 2px 4px 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.menu-vertical > li:not(.menu-title) > .collapse > ul {
  margin-inline-start: 1rem;
  margin-top: 0px;
  padding-top: 0px;
  padding-bottom: 0px;
  padding-inline-end: 0px;
}

.tabs-bordered.tabs-vertical > .tab {
  width: 100%;
  justify-content: flex-start;
  border-bottom-width: 0px;
  border-inline-end-width: calc(var(--tab-border, 1px) + 1px);
}

@keyframes RomboConfettiPop {
  0% {
    opacity: 0;
    transform: scale(1);
  }

  33% {
    opacity: 1;
    transform: scale(1.15);
  }

  50% {
    transform: scale(0.975);
  }

  65% {
    transform: scale(1.025);
  }

  80% {
    transform: scale(0.99);
  }

  87% {
    transform: scale(1.01);
  }

  100% {
    opacity: 1;
    transform: scale(1);
  }
}

@keyframes topfetti {
  0% {
    background-position: 5% 90%, 10% 90%, 10% 90%, 15% 90%, 25% 90%, 25% 90%, 40% 90%, 55% 90%, 70% 90%;
  }

  50% {
    background-position: 0% 80%, 0% 20%, 10% 40%, 20% 0%, 30% 30%, 22% 50%, 50% 50%, 65% 20%, 90% 30%;
  }

  100% {
    background-position: 0% 70%, 0% 10%, 10% 30%, 20% -10%, 30% 20%, 22% 40%, 50% 40%, 65% 10%, 90% 20%;
    background-size: 0% 0%, 0% 0%, 0% 0%, 0% 0%, 0% 0%, 0% 0%;
  }
}

@keyframes bottomfetti {
  0% {
    background-position: 10% -10%, 30% 10%, 55% -10%, 70% -10%, 85% -10%,70% -10%, 70% 0%;
  }

  50% {
    background-position: 0% 80%, 20% 80%, 45% 60%, 60% 100%, 75% 70%, 95% 60%, 105% 0%;
  }

  100% {
    background-position: 0% 90%, 20% 90%, 45% 70%, 60% 110%, 75% 80%, 95% 70%, 110% 10%;
    background-size: 0% 0%, 0% 0%, 0% 0%, 0% 0%, 0% 0%, 0% 0%;
  }
}

.pointer-events-none {
  pointer-events: none;
}

.visible {
  visibility: visible;
}

.invisible {
  visibility: hidden;
}

.collapse {
  visibility: collapse;
}

.static {
  position: static;
}

.fixed {
  position: fixed;
}

.absolute {
  position: absolute;
}

.\!relative {
  position: relative !important;
}

.relative {
  position: relative;
}

.sticky {
  position: sticky;
}

.inset-0 {
  inset: 0px;
}

.inset-y-0 {
  top: 0px;
  bottom: 0px;
}

.bottom-0 {
  bottom: 0px;
}

.bottom-4 {
  bottom: 1rem;
}

.bottom-full {
  bottom: 100%;
}

.left-0 {
  left: 0px;
}

.right-0 {
  right: 0px;
}

.right-3 {
  right: 0.75rem;
}

.right-4 {
  right: 1rem;
}

.top-0 {
  top: 0px;
}

.top-1\/2 {
  top: 50%;
}

.top-3 {
  top: 0.75rem;
}

.top-full {
  top: 100%;
}

.z-10 {
  z-index: 10;
}

.z-50 {
  z-index: 50;
}

.mx-3 {
  margin-left: 0.75rem;
  margin-right: 0.75rem;
}

.mx-auto {
  margin-left: auto;
  margin-right: auto;
}

.-mx-4 {
  margin-left: -1rem;
  margin-right: -1rem;
}

.\!me-1 {
  margin-inline-end: 0.25rem !important;
}

.\!me-1\.5 {
  margin-inline-end: 0.375rem !important;
}

.\!ms-auto {
  margin-inline-start: auto !important;
}

.mb-0\.5 {
  margin-bottom: 0.125rem;
}

.mb-1 {
  margin-bottom: 0.25rem;
}

.mb-10 {
  margin-bottom: 2.5rem;
}

.mb-2 {
  margin-bottom: 0.5rem;
}

.mb-3 {
  margin-bottom: 0.75rem;
}

.mb-4 {
  margin-bottom: 1rem;
}

.mb-6 {
  margin-bottom: 1.5rem;
}

.me-2 {
  margin-inline-end: 0.5rem;
}

.ml-2 {
  margin-left: 0.5rem;
}

.mr-2 {
  margin-right: 0.5rem;
}

.ms-2 {
  margin-inline-start: 0.5rem;
}

.mt-1 {
  margin-top: 0.25rem;
}

.mt-10 {
  margin-top: 2.5rem;
}

.mt-2 {
  margin-top: 0.5rem;
}

.mt-20 {
  margin-top: 5rem;
}

.mt-3 {
  margin-top: 0.75rem;
}

.mt-4 {
  margin-top: 1rem;
}

.mt-6 {
  margin-top: 1.5rem;
}

.mt-8 {
  margin-top: 2rem;
}

.block {
  display: block;
}

.inline-block {
  display: inline-block;
}

.inline {
  display: inline;
}

.\!flex {
  display: flex !important;
}

.flex {
  display: flex;
}

.inline-flex {
  display: inline-flex;
}

.\!table {
  display: table !important;
}

.table {
  display: table;
}

.grid {
  display: grid;
}

.contents {
  display: contents;
}

.hidden {
  display: none;
}

.size-10 {
  width: 2.5rem;
  height: 2.5rem;
}

.size-4 {
  width: 1rem;
  height: 1rem;
}

.size-5 {
  width: 1.25rem;
  height: 1.25rem;
}

.size-8 {
  width: 2rem;
  height: 2rem;
}

.\!h-2\.5 {
  height: 0.625rem !important;
}

.h-16 {
  height: 4rem;
}

.h-2 {
  height: 0.5rem;
}

.h-4 {
  height: 1rem;
}

.h-5 {
  height: 1.25rem;
}

.h-6 {
  height: 1.5rem;
}

.h-80 {
  height: 20rem;
}

.h-\[500px\] {
  height: 500px;
}

.h-screen {
  height: 100vh;
}

.h-60 {
  height: 15rem;
}

.max-h-\[90vh\] {
  max-height: 90vh;
}

.min-h-16 {
  min-height: 4rem;
}

.min-h-\[400px\] {
  min-height: 400px;
}

.min-h-screen {
  min-height: 100vh;
}

.\!w-2\.5 {
  width: 0.625rem !important;
}

.w-1\/2 {
  width: 50%;
}

.w-24 {
  width: 6rem;
}

.w-3\/4 {
  width: 75%;
}

.w-4 {
  width: 1rem;
}

.w-48 {
  width: 12rem;
}

.w-5 {
  width: 1.25rem;
}

.w-6 {
  width: 1.5rem;
}

.w-80 {
  width: 20rem;
}

.w-auto {
  width: auto;
}

.w-full {
  width: 100%;
}

.min-w-28 {
  min-width: 7rem;
}

.min-w-48 {
  min-width: 12rem;
}

.min-w-60 {
  min-width: 15rem;
}

.min-w-full {
  min-width: 100%;
}

.max-w-2xl {
  max-width: 42rem;
}

.max-w-4xl {
  max-width: 56rem;
}

.max-w-64 {
  max-width: 16rem;
}

.max-w-full {
  max-width: 100%;
}

.max-w-md {
  max-width: 28rem;
}

.max-w-7xl {
  max-width: 80rem;
}

.flex-1 {
  flex: 1 1 0%;
}

.flex-shrink-0 {
  flex-shrink: 0;
}

.shrink {
  flex-shrink: 1;
}

.shrink-0 {
  flex-shrink: 0;
}

.flex-grow {
  flex-grow: 1;
}

.border-collapse {
  border-collapse: collapse;
}

.-translate-y-1\/2 {
  --tw-translate-y: -50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.transform {
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

@keyframes pulse {
  50% {
    opacity: .5;
  }
}

.animate-pulse {
  animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
}

@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}

.animate-spin {
  animation: spin 1s linear infinite;
}

.cursor-pointer {
  cursor: pointer;
}

.resize {
  resize: both;
}

.appearance-none {
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
}

.grid-cols-1 {
  grid-template-columns: repeat(1, minmax(0, 1fr));
}

.grid-cols-2 {
  grid-template-columns: repeat(2, minmax(0, 1fr));
}

.flex-col {
  flex-direction: column;
}

.flex-wrap {
  flex-wrap: wrap;
}

.flex-nowrap {
  flex-wrap: nowrap;
}

.items-start {
  align-items: flex-start;
}

.items-center {
  align-items: center;
}

.justify-end {
  justify-content: flex-end;
}

.justify-center {
  justify-content: center;
}

.\!justify-between {
  justify-content: space-between !important;
}

.justify-between {
  justify-content: space-between;
}

.gap-1 {
  gap: 0.25rem;
}

.gap-2 {
  gap: 0.5rem;
}

.gap-3 {
  gap: 0.75rem;
}

.gap-4 {
  gap: 1rem;
}

.gap-6 {
  gap: 1.5rem;
}

.gap-x-1 {
  -moz-column-gap: 0.25rem;
       column-gap: 0.25rem;
}

.gap-x-2 {
  -moz-column-gap: 0.5rem;
       column-gap: 0.5rem;
}

.gap-x-3 {
  -moz-column-gap: 0.75rem;
       column-gap: 0.75rem;
}

.space-x-4 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0;
  margin-right: calc(1rem * var(--tw-space-x-reverse));
  margin-left: calc(1rem * calc(1 - var(--tw-space-x-reverse)));
}

.space-y-2 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(0.5rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(0.5rem * var(--tw-space-y-reverse));
}

.space-y-3 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(0.75rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(0.75rem * var(--tw-space-y-reverse));
}

.space-y-4 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(1rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(1rem * var(--tw-space-y-reverse));
}

.space-y-5 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(1.25rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(1.25rem * var(--tw-space-y-reverse));
}

.space-y-6 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(1.5rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(1.5rem * var(--tw-space-y-reverse));
}

.space-y-8 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(2rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(2rem * var(--tw-space-y-reverse));
}

.divide-y > :not([hidden]) ~ :not([hidden]) {
  --tw-divide-y-reverse: 0;
  border-top-width: calc(1px * calc(1 - var(--tw-divide-y-reverse)));
  border-bottom-width: calc(1px * var(--tw-divide-y-reverse));
}

.divide-gray-100 > :not([hidden]) ~ :not([hidden]) {
  --tw-divide-opacity: 1;
  border-color: rgb(243 244 246 / var(--tw-divide-opacity, 1));
}

.divide-gray-200 > :not([hidden]) ~ :not([hidden]) {
  --tw-divide-opacity: 1;
  border-color: rgb(229 231 235 / var(--tw-divide-opacity, 1));
}

.overflow-hidden {
  overflow: hidden;
}

.overflow-x-auto {
  overflow-x: auto;
}

.overflow-y-auto {
  overflow-y: auto;
}

.truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.whitespace-normal {
  white-space: normal;
}

.whitespace-nowrap {
  white-space: nowrap;
}

.rounded {
  border-radius: 0.25rem;
}

.rounded-2xl {
  border-radius: 1rem;
}

.rounded-box {
  border-radius: var(--rounded-box, 0.5rem);
}

.rounded-btn {
  border-radius: var(--rounded-btn, 0.375rem);
}

.rounded-full {
  border-radius: 9999px;
}

.rounded-lg {
  border-radius: 0.5rem;
}

.rounded-md {
  border-radius: 0.375rem;
}

.rounded-xl {
  border-radius: 0.75rem;
}

.rounded-t-lg {
  border-top-left-radius: 0.5rem;
  border-top-right-radius: 0.5rem;
}

.border {
  border-width: 1px;
}

.border-b {
  border-bottom-width: 1px;
}

.border-r {
  border-right-width: 1px;
}

.border-t {
  border-top-width: 1px;
}

.\!border-none {
  border-style: none !important;
}

.\!border-base-content\/40 {
  border-color: var(--fallback-bc,oklch(var(--bc)/0.4)) !important;
}

.border-base-content\/20 {
  border-color: var(--fallback-bc,oklch(var(--bc)/0.2));
}

.border-base-content\/25 {
  border-color: var(--fallback-bc,oklch(var(--bc)/0.25));
}

.border-base-content\/40 {
  border-color: var(--fallback-bc,oklch(var(--bc)/0.4));
}

.border-blue-500 {
  --tw-border-opacity: 1;
  border-color: rgb(59 130 246 / var(--tw-border-opacity, 1));
}

.border-gray-100 {
  --tw-border-opacity: 1;
  border-color: rgb(243 244 246 / var(--tw-border-opacity, 1));
}

.border-gray-200 {
  --tw-border-opacity: 1;
  border-color: rgb(229 231 235 / var(--tw-border-opacity, 1));
}

.border-gray-300 {
  --tw-border-opacity: 1;
  border-color: rgb(209 213 219 / var(--tw-border-opacity, 1));
}

.border-green-500 {
  --tw-border-opacity: 1;
  border-color: rgb(34 197 94 / var(--tw-border-opacity, 1));
}

.border-red-500 {
  --tw-border-opacity: 1;
  border-color: rgb(239 68 68 / var(--tw-border-opacity, 1));
}

.border-transparent {
  border-color: transparent;
}

.border-yellow-500 {
  --tw-border-opacity: 1;
  border-color: rgb(234 179 8 / var(--tw-border-opacity, 1));
}

.border-opacity-20 {
  --tw-border-opacity: 0.2;
}

.\!bg-base-100 {
  --tw-bg-opacity: 1 !important;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1))) !important;
}

.bg-base-100 {
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity, 1)));
}

.bg-base-shadow\/70 {
  background-color: var(--fallback-bs,oklch(var(--bs)/0.7));
}

.bg-black\/50 {
  background-color: rgb(0 0 0 / 0.5);
}

.bg-blue-100 {
  --tw-bg-opacity: 1;
  background-color: rgb(219 234 254 / var(--tw-bg-opacity, 1));
}

.bg-blue-500\/10 {
  background-color: rgb(59 130 246 / 0.1);
}

.bg-blue-500\/20 {
  background-color: rgb(59 130 246 / 0.2);
}

.bg-blue-600 {
  --tw-bg-opacity: 1;
  background-color: rgb(37 99 235 / var(--tw-bg-opacity, 1));
}

.bg-gray-100 {
  --tw-bg-opacity: 1;
  background-color: rgb(243 244 246 / var(--tw-bg-opacity, 1));
}

.bg-gray-200 {
  --tw-bg-opacity: 1;
  background-color: rgb(229 231 235 / var(--tw-bg-opacity, 1));
}

.bg-gray-50 {
  --tw-bg-opacity: 1;
  background-color: rgb(249 250 251 / var(--tw-bg-opacity, 1));
}

.bg-gray-50\/50 {
  background-color: rgb(249 250 251 / 0.5);
}

.bg-green-100 {
  --tw-bg-opacity: 1;
  background-color: rgb(220 252 231 / var(--tw-bg-opacity, 1));
}

.bg-green-50 {
  --tw-bg-opacity: 1;
  background-color: rgb(240 253 244 / var(--tw-bg-opacity, 1));
}

.bg-green-500 {
  --tw-bg-opacity: 1;
  background-color: rgb(34 197 94 / var(--tw-bg-opacity, 1));
}

.bg-green-500\/10 {
  background-color: rgb(34 197 94 / 0.1);
}

.bg-green-500\/20 {
  background-color: rgb(34 197 94 / 0.2);
}

.bg-green-600 {
  --tw-bg-opacity: 1;
  background-color: rgb(22 163 74 / var(--tw-bg-opacity, 1));
}

.bg-indigo-100 {
  --tw-bg-opacity: 1;
  background-color: rgb(224 231 255 / var(--tw-bg-opacity, 1));
}

.bg-purple-100 {
  --tw-bg-opacity: 1;
  background-color: rgb(243 232 255 / var(--tw-bg-opacity, 1));
}

.bg-red-100 {
  --tw-bg-opacity: 1;
  background-color: rgb(254 226 226 / var(--tw-bg-opacity, 1));
}

.bg-red-50 {
  --tw-bg-opacity: 1;
  background-color: rgb(254 242 242 / var(--tw-bg-opacity, 1));
}

.bg-red-500\/10 {
  background-color: rgb(239 68 68 / 0.1);
}

.bg-red-500\/20 {
  background-color: rgb(239 68 68 / 0.2);
}

.bg-white {
  --tw-bg-opacity: 1;
  background-color: rgb(255 255 255 / var(--tw-bg-opacity, 1));
}

.bg-yellow-100 {
  --tw-bg-opacity: 1;
  background-color: rgb(254 249 195 / var(--tw-bg-opacity, 1));
}

.bg-yellow-500\/10 {
  background-color: rgb(234 179 8 / 0.1);
}

.bg-yellow-500\/20 {
  background-color: rgb(234 179 8 / 0.2);
}

.bg-blue-500 {
  --tw-bg-opacity: 1;
  background-color: rgb(59 130 246 / var(--tw-bg-opacity, 1));
}

.bg-red-600 {
  --tw-bg-opacity: 1;
  background-color: rgb(220 38 38 / var(--tw-bg-opacity, 1));
}

.bg-red-500 {
  --tw-bg-opacity: 1;
  background-color: rgb(239 68 68 / var(--tw-bg-opacity, 1));
}

.bg-opacity-90 {
  --tw-bg-opacity: 0.9;
}

.bg-gradient-to-br {
  background-image: linear-gradient(to bottom right, var(--tw-gradient-stops));
}

.from-blue-50 {
  --tw-gradient-from: #eff6ff var(--tw-gradient-from-position);
  --tw-gradient-to: rgb(239 246 255 / 0) var(--tw-gradient-to-position);
  --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);
}

.from-gray-50 {
  --tw-gradient-from: #f9fafb var(--tw-gradient-from-position);
  --tw-gradient-to: rgb(249 250 251 / 0) var(--tw-gradient-to-position);
  --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);
}

.to-blue-100 {
  --tw-gradient-to: #dbeafe var(--tw-gradient-to-position);
}

.to-gray-100 {
  --tw-gradient-to: #f3f4f6 var(--tw-gradient-to-position);
}

.fill-black {
  fill: #000;
}

.p-0 {
  padding: 0px;
}

.p-0\.5 {
  padding: 0.125rem;
}

.p-1 {
  padding: 0.25rem;
}

.p-1\.5 {
  padding: 0.375rem;
}

.p-2 {
  padding: 0.5rem;
}

.p-2\.5 {
  padding: 0.625rem;
}

.p-3 {
  padding: 0.75rem;
}

.p-4 {
  padding: 1rem;
}

.p-5 {
  padding: 1.25rem;
}

.p-6 {
  padding: 1.5rem;
}

.p-8 {
  padding: 2rem;
}

.\!px-2 {
  padding-left: 0.5rem !important;
  padding-right: 0.5rem !important;
}

.\!px-2\.5 {
  padding-left: 0.625rem !important;
  padding-right: 0.625rem !important;
}

.px-14 {
  padding-left: 3.5rem;
  padding-right: 3.5rem;
}

.px-2 {
  padding-left: 0.5rem;
  padding-right: 0.5rem;
}

.px-3 {
  padding-left: 0.75rem;
  padding-right: 0.75rem;
}

.px-4 {
  padding-left: 1rem;
  padding-right: 1rem;
}

.px-6 {
  padding-left: 1.5rem;
  padding-right: 1.5rem;
}

.py-1 {
  padding-top: 0.25rem;
  padding-bottom: 0.25rem;
}

.py-10 {
  padding-top: 2.5rem;
  padding-bottom: 2.5rem;
}

.py-12 {
  padding-top: 3rem;
  padding-bottom: 3rem;
}

.py-2 {
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
}

.py-2\.5 {
  padding-top: 0.625rem;
  padding-bottom: 0.625rem;
}

.py-3 {
  padding-top: 0.75rem;
  padding-bottom: 0.75rem;
}

.py-4 {
  padding-top: 1rem;
  padding-bottom: 1rem;
}

.pb-4 {
  padding-bottom: 1rem;
}

.pl-10 {
  padding-left: 2.5rem;
}

.pl-3 {
  padding-left: 0.75rem;
}

.pr-10 {
  padding-right: 2.5rem;
}

.pr-3 {
  padding-right: 0.75rem;
}

.pt-16 {
  padding-top: 4rem;
}

.pt-4 {
  padding-top: 1rem;
}

.pt-6 {
  padding-top: 1.5rem;
}

.text-left {
  text-align: left;
}

.text-center {
  text-align: center;
}

.align-middle {
  vertical-align: middle;
}

.align-bottom {
  vertical-align: bottom;
}

.\!text-sm {
  font-size: 0.875rem !important;
  line-height: 1.25rem !important;
}

.text-2xl {
  font-size: 1.5rem;
  line-height: 2rem;
}

.text-3xl {
  font-size: 1.875rem;
  line-height: 2.25rem;
}

.text-base {
  font-size: 1rem;
  line-height: 1.375rem;
}

.text-lg {
  font-size: 1.125rem;
  line-height: 1.5rem;
}

.text-sm {
  font-size: 0.875rem;
  line-height: 1.25rem;
}

.text-xl {
  font-size: 1.25rem;
  line-height: 1.625rem;
}

.text-xs {
  font-size: 0.75rem;
  line-height: 1rem;
}

.\!font-medium {
  font-weight: 500 !important;
}

.\!font-semibold {
  font-weight: 600 !important;
}

.font-bold {
  font-weight: 700;
}

.font-extrabold {
  font-weight: 800;
}

.font-medium {
  font-weight: 500;
}

.font-semibold {
  font-weight: 600;
}

.uppercase {
  text-transform: uppercase;
}

.lowercase {
  text-transform: lowercase;
}

.capitalize {
  text-transform: capitalize;
}

.italic {
  font-style: italic;
}

.ordinal {
  --tw-ordinal: ordinal;
  font-variant-numeric: var(--tw-ordinal) var(--tw-slashed-zero) var(--tw-numeric-figure) var(--tw-numeric-spacing) var(--tw-numeric-fraction);
}

.tracking-wider {
  letter-spacing: 0.05em;
}

.text-base-content {
  --tw-text-opacity: 1;
  color: var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity, 1)));
}

.text-base-content\/50 {
  color: var(--fallback-bc,oklch(var(--bc)/0.5));
}

.text-base-content\/80 {
  color: var(--fallback-bc,oklch(var(--bc)/0.8));
}

.text-blue-400 {
  --tw-text-opacity: 1;
  color: rgb(96 165 250 / var(--tw-text-opacity, 1));
}

.text-blue-600 {
  --tw-text-opacity: 1;
  color: rgb(37 99 235 / var(--tw-text-opacity, 1));
}

.text-blue-700 {
  --tw-text-opacity: 1;
  color: rgb(29 78 216 / var(--tw-text-opacity, 1));
}

.text-blue-800 {
  --tw-text-opacity: 1;
  color: rgb(30 64 175 / var(--tw-text-opacity, 1));
}

.text-error {
  --tw-text-opacity: 1;
  color: var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity, 1)));
}

.text-gray-400 {
  --tw-text-opacity: 1;
  color: rgb(156 163 175 / var(--tw-text-opacity, 1));
}

.text-gray-500 {
  --tw-text-opacity: 1;
  color: rgb(107 114 128 / var(--tw-text-opacity, 1));
}

.text-gray-600 {
  --tw-text-opacity: 1;
  color: rgb(75 85 99 / var(--tw-text-opacity, 1));
}

.text-gray-700 {
  --tw-text-opacity: 1;
  color: rgb(55 65 81 / var(--tw-text-opacity, 1));
}

.text-gray-800 {
  --tw-text-opacity: 1;
  color: rgb(31 41 55 / var(--tw-text-opacity, 1));
}

.text-gray-900 {
  --tw-text-opacity: 1;
  color: rgb(17 24 39 / var(--tw-text-opacity, 1));
}

.text-green-500 {
  --tw-text-opacity: 1;
  color: rgb(34 197 94 / var(--tw-text-opacity, 1));
}

.text-green-600 {
  --tw-text-opacity: 1;
  color: rgb(22 163 74 / var(--tw-text-opacity, 1));
}

.text-green-700 {
  --tw-text-opacity: 1;
  color: rgb(21 128 61 / var(--tw-text-opacity, 1));
}

.text-green-800 {
  --tw-text-opacity: 1;
  color: rgb(22 101 52 / var(--tw-text-opacity, 1));
}

.text-indigo-600 {
  --tw-text-opacity: 1;
  color: rgb(79 70 229 / var(--tw-text-opacity, 1));
}

.text-primary {
  --tw-text-opacity: 1;
  color: var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity, 1)));
}

.text-purple-600 {
  --tw-text-opacity: 1;
  color: rgb(147 51 234 / var(--tw-text-opacity, 1));
}

.text-purple-800 {
  --tw-text-opacity: 1;
  color: rgb(107 33 168 / var(--tw-text-opacity, 1));
}

.text-red-500 {
  --tw-text-opacity: 1;
  color: rgb(239 68 68 / var(--tw-text-opacity, 1));
}

.text-red-600 {
  --tw-text-opacity: 1;
  color: rgb(220 38 38 / var(--tw-text-opacity, 1));
}

.text-red-700 {
  --tw-text-opacity: 1;
  color: rgb(185 28 28 / var(--tw-text-opacity, 1));
}

.text-red-800 {
  --tw-text-opacity: 1;
  color: rgb(153 27 27 / var(--tw-text-opacity, 1));
}

.text-success {
  --tw-text-opacity: 1;
  color: var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity, 1)));
}

.text-white {
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity, 1));
}

.text-yellow-600 {
  --tw-text-opacity: 1;
  color: rgb(202 138 4 / var(--tw-text-opacity, 1));
}

.text-yellow-700 {
  --tw-text-opacity: 1;
  color: rgb(161 98 7 / var(--tw-text-opacity, 1));
}

.text-yellow-800 {
  --tw-text-opacity: 1;
  color: rgb(133 77 14 / var(--tw-text-opacity, 1));
}

.no-underline {
  text-decoration-line: none;
}

.placeholder-gray-400::-moz-placeholder {
  --tw-placeholder-opacity: 1;
  color: rgb(156 163 175 / var(--tw-placeholder-opacity, 1));
}

.placeholder-gray-400::placeholder {
  --tw-placeholder-opacity: 1;
  color: rgb(156 163 175 / var(--tw-placeholder-opacity, 1));
}

.opacity-0 {
  opacity: 0;
}

.opacity-25 {
  opacity: 0.25;
}

.opacity-75 {
  opacity: 0.75;
}

.opacity-90 {
  opacity: 0.9;
}

.shadow {
  --tw-shadow: 0 2px 4px 0 var(--fallback-bs,oklch(var(--bs)/0.26));
  --tw-shadow-colored: 0 2px 4px 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.shadow-lg {
  --tw-shadow: 0 10px 15px -2px var(--fallback-bs,oklch(var(--bs)/0.34));
  --tw-shadow-colored: 0 10px 15px -2px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.shadow-md {
  --tw-shadow: 0 4px 6px -1px var(--fallback-bs,oklch(var(--bs)/0.2));
  --tw-shadow-colored: 0 4px 6px -1px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.shadow-sm {
  --tw-shadow: 0 1px 2px 0 var(--fallback-bs,oklch(var(--bs)/0.22));
  --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.shadow-xl {
  --tw-shadow: 0 20px 25px -6px var(--fallback-bs,oklch(var(--bs)/0.38));
  --tw-shadow-colored: 0 20px 25px -6px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.outline {
  outline-style: solid;
}

.ring-2 {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}

.ring-blue-500 {
  --tw-ring-opacity: 1;
  --tw-ring-color: rgb(59 130 246 / var(--tw-ring-opacity, 1));
}

.blur {
  --tw-blur: blur(8px);
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

.invert {
  --tw-invert: invert(100%);
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

.filter {
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

.backdrop-blur-lg {
  --tw-backdrop-blur: blur(16px);
  -webkit-backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
  backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
}

.backdrop-blur-sm {
  --tw-backdrop-blur: blur(4px);
  -webkit-backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
  backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
}

.transition {
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.transition-all {
  transition-property: all;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.transition-colors {
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.transition-shadow {
  transition-property: box-shadow;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.duration-200 {
  transition-duration: 200ms;
}

.duration-300 {
  transition-duration: 300ms;
}

.duration-500 {
  transition-duration: 500ms;
}

.ease-out {
  transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
}

.\[--auto-close\:inside\] {
  --auto-close: inside;
}

.\[--offset\:8\] {
  --offset: 8;
}

.\[--placement\:bottom-end\] {
  --placement: bottom-end;
}

.selected .combo-box-selected\:carousel-box.carousel-box {
  --tw-bg-opacity: 1;
  background-color: var(--fallback-p,oklch(var(--p)/var(--tw-bg-opacity, 1)));
}

.selected .combo-box-selected\:carousel-box .carousel-box {
  --tw-bg-opacity: 1;
  background-color: var(--fallback-p,oklch(var(--p)/var(--tw-bg-opacity, 1)));
}

.selected .combo-box-selected\:carousel-dot.carousel-dot {
  --tw-bg-opacity: 1;
  background-color: var(--fallback-p,oklch(var(--p)/var(--tw-bg-opacity, 1)));
}

.selected .combo-box-selected\:carousel-dot .carousel-dot {
  --tw-bg-opacity: 1;
  background-color: var(--fallback-p,oklch(var(--p)/var(--tw-bg-opacity, 1)));
}

@media (hover:hover) {
  
.menu li:not(.disabled, :disabled, [disabled]) > .combo-box-selected\:active:not(ul, .menu-title, .collapse, .btn) {
    background-color: var(--fallback-p,oklch(var(--p)/0.1));
    --tw-text-opacity: 1;
    color: var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity, 1)));
  }
}

.selected .combo-box-selected\:active.advance-select-option {
  background-color: var(--fallback-p,oklch(var(--p)/0.1));
  --tw-text-opacity: 1;
  color: var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity, 1)));
}

.selected .combo-box-selected\:active.dropdown-item {
  background-color: var(--fallback-p,oklch(var(--p)/0.1));
  --tw-text-opacity: 1;
  color: var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity, 1)));
}


.menu li:not(.disabled, :disabled, [disabled]) > .selected .combo-box-selected\:menu:not(ul, .menu-title, .collapse, .btn) {
  background-color: var(--fallback-p,oklch(var(--p)/0.1));
  --tw-text-opacity: 1;
  color: var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity, 1)));
}

.table .selected .combo-box-selected\:activetr,
  .table .selected .combo-box-selected\:activetr:nth-child(even) {
  background-color: var(--fallback-bc,oklch(var(--bc)/0.1));
}

.table-striped .selected .combo-box-selected\:activetr,
    .table-striped .selected .combo-box-selected\:activetr:nth-child(even) {
  background-color: var(--fallback-bc,oklch(var(--bc)/0.1));
}

.selected.combo-box-selected\:carousel-box.carousel-box {
  --tw-bg-opacity: 1;
  background-color: var(--fallback-p,oklch(var(--p)/var(--tw-bg-opacity, 1)));
}

.selected.combo-box-selected\:carousel-box .carousel-box {
  --tw-bg-opacity: 1;
  background-color: var(--fallback-p,oklch(var(--p)/var(--tw-bg-opacity, 1)));
}

.selected.combo-box-selected\:carousel-dot.carousel-dot {
  --tw-bg-opacity: 1;
  background-color: var(--fallback-p,oklch(var(--p)/var(--tw-bg-opacity, 1)));
}

.selected.combo-box-selected\:carousel-dot .carousel-dot {
  --tw-bg-opacity: 1;
  background-color: var(--fallback-p,oklch(var(--p)/var(--tw-bg-opacity, 1)));
}

@media (hover:hover) {
  
.menu li:not(.disabled, :disabled, [disabled]) > .combo-box-selected\:active:not(ul, .menu-title, .collapse, .btn) {
    background-color: var(--fallback-p,oklch(var(--p)/0.1));
    --tw-text-opacity: 1;
    color: var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity, 1)));
  }
}

.selected.combo-box-selected\:active.advance-select-option {
  background-color: var(--fallback-p,oklch(var(--p)/0.1));
  --tw-text-opacity: 1;
  color: var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity, 1)));
}

.selected.combo-box-selected\:active.dropdown-item {
  background-color: var(--fallback-p,oklch(var(--p)/0.1));
  --tw-text-opacity: 1;
  color: var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity, 1)));
}


.menu li:not(.disabled, :disabled, [disabled]) > .selected.combo-box-selected\:menu:not(ul, .menu-title, .collapse, .btn) {
  background-color: var(--fallback-p,oklch(var(--p)/0.1));
  --tw-text-opacity: 1;
  color: var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity, 1)));
}

.table tr.selected.combo-box-selected\:active,
  .table tr.selected.combo-box-selected\:active:nth-child(even) {
  background-color: var(--fallback-bc,oklch(var(--bc)/0.1));
}

.table-striped tr.selected.combo-box-selected\:active,
    .table-striped tr.selected.combo-box-selected\:active:nth-child(even) {
  background-color: var(--fallback-bc,oklch(var(--bc)/0.1));
}

.complete .file-upload-complete\:progress-success {
  --tw-bg-opacity: 1;
  background-color: var(--fallback-su,oklch(var(--su)/var(--tw-bg-opacity, 1)));
  --tw-text-opacity: 1;
  color: var(--fallback-suc,oklch(var(--suc)/var(--tw-text-opacity, 1)));
  --progress-color: var(--fallback-su,oklch(var(--su)/1));
}

.complete.file-upload-complete\:progress-success {
  --tw-bg-opacity: 1;
  background-color: var(--fallback-su,oklch(var(--su)/var(--tw-bg-opacity, 1)));
  --tw-text-opacity: 1;
  color: var(--fallback-suc,oklch(var(--suc)/var(--tw-text-opacity, 1)));
  --progress-color: var(--fallback-su,oklch(var(--su)/1));
}

@media not all and (min-width: 640px) {
  .max-sm\:btn-square {
    height: 2.375rem;
    width: 2.375rem;
    padding: 0px;
  }

  .max-sm\:btn-square:where(.btn-xs) {
    height: 1.5rem;
    width: 1.5rem;
    padding: 0px;
  }

  .max-sm\:btn-square {
    height: 2.375rem;
    width: 2.375rem;
    padding: 0px;
  }

  .max-sm\:btn-square:where(.btn-xs) {
    height: 1.5rem;
    width: 1.5rem;
    padding: 0px;
  }

  .max-sm\:btn-square:where(.btn-sm) {
    height: 1.875rem;
    width: 1.875rem;
    padding: 0px;
  }

  .max-sm\:btn-square {
    height: 2.375rem;
    width: 2.375rem;
    padding: 0px;
  }

  .max-sm\:btn-square:where(.btn-xs) {
    height: 1.5rem;
    width: 1.5rem;
    padding: 0px;
  }

  .max-sm\:btn-square:where(.btn-sm) {
    height: 1.875rem;
    width: 1.875rem;
    padding: 0px;
  }

  .max-sm\:btn-square:where(.btn-lg) {
    height: 2.875rem;
    width: 2.875rem;
    padding: 0px;
  }
}

.hover\:bg-black\/5:hover {
  background-color: rgb(0 0 0 / 0.05);
}

.hover\:bg-blue-700:hover {
  --tw-bg-opacity: 1;
  background-color: rgb(29 78 216 / var(--tw-bg-opacity, 1));
}

.hover\:bg-gray-100:hover {
  --tw-bg-opacity: 1;
  background-color: rgb(243 244 246 / var(--tw-bg-opacity, 1));
}

.hover\:bg-gray-200:hover {
  --tw-bg-opacity: 1;
  background-color: rgb(229 231 235 / var(--tw-bg-opacity, 1));
}

.hover\:bg-gray-50:hover {
  --tw-bg-opacity: 1;
  background-color: rgb(249 250 251 / var(--tw-bg-opacity, 1));
}

.hover\:bg-gray-50\/50:hover {
  background-color: rgb(249 250 251 / 0.5);
}

.hover\:bg-green-50:hover {
  --tw-bg-opacity: 1;
  background-color: rgb(240 253 244 / var(--tw-bg-opacity, 1));
}

.hover\:bg-green-600:hover {
  --tw-bg-opacity: 1;
  background-color: rgb(22 163 74 / var(--tw-bg-opacity, 1));
}

.hover\:bg-green-700:hover {
  --tw-bg-opacity: 1;
  background-color: rgb(21 128 61 / var(--tw-bg-opacity, 1));
}

.hover\:bg-red-50:hover {
  --tw-bg-opacity: 1;
  background-color: rgb(254 242 242 / var(--tw-bg-opacity, 1));
}

.hover\:bg-red-700:hover {
  --tw-bg-opacity: 1;
  background-color: rgb(185 28 28 / var(--tw-bg-opacity, 1));
}

.hover\:bg-blue-600:hover {
  --tw-bg-opacity: 1;
  background-color: rgb(37 99 235 / var(--tw-bg-opacity, 1));
}

.hover\:bg-red-600:hover {
  --tw-bg-opacity: 1;
  background-color: rgb(220 38 38 / var(--tw-bg-opacity, 1));
}

.hover\:text-gray-600:hover {
  --tw-text-opacity: 1;
  color: rgb(75 85 99 / var(--tw-text-opacity, 1));
}

.hover\:text-gray-700:hover {
  --tw-text-opacity: 1;
  color: rgb(55 65 81 / var(--tw-text-opacity, 1));
}

.hover\:text-gray-800:hover {
  --tw-text-opacity: 1;
  color: rgb(31 41 55 / var(--tw-text-opacity, 1));
}

.hover\:text-red-500:hover {
  --tw-text-opacity: 1;
  color: rgb(239 68 68 / var(--tw-text-opacity, 1));
}

.hover\:text-red-700:hover {
  --tw-text-opacity: 1;
  color: rgb(185 28 28 / var(--tw-text-opacity, 1));
}

.hover\:shadow-md:hover {
  --tw-shadow: 0 4px 6px -1px var(--fallback-bs,oklch(var(--bs)/0.2));
  --tw-shadow-colored: 0 4px 6px -1px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.focus\:border-blue-500:focus {
  --tw-border-opacity: 1;
  border-color: rgb(59 130 246 / var(--tw-border-opacity, 1));
}

.focus\:border-green-500:focus {
  --tw-border-opacity: 1;
  border-color: rgb(34 197 94 / var(--tw-border-opacity, 1));
}

.focus\:border-primary:focus {
  --tw-border-opacity: 1;
  border-color: var(--fallback-p,oklch(var(--p)/var(--tw-border-opacity, 1)));
}

.focus\:outline-none:focus {
  outline: 2px solid transparent;
  outline-offset: 2px;
}

.focus\:ring-1:focus {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}

.focus\:ring-2:focus {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}

.focus\:ring-4:focus {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(4px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}

.focus\:ring-blue-500:focus {
  --tw-ring-opacity: 1;
  --tw-ring-color: rgb(59 130 246 / var(--tw-ring-opacity, 1));
}

.focus\:ring-blue-500\/20:focus {
  --tw-ring-color: rgb(59 130 246 / 0.2);
}

.focus\:ring-gray-200:focus {
  --tw-ring-opacity: 1;
  --tw-ring-color: rgb(229 231 235 / var(--tw-ring-opacity, 1));
}

.focus\:ring-gray-500:focus {
  --tw-ring-opacity: 1;
  --tw-ring-color: rgb(107 114 128 / var(--tw-ring-opacity, 1));
}

.focus\:ring-green-500:focus {
  --tw-ring-opacity: 1;
  --tw-ring-color: rgb(34 197 94 / var(--tw-ring-opacity, 1));
}

.focus\:ring-green-500\/20:focus {
  --tw-ring-color: rgb(34 197 94 / 0.2);
}

.focus\:ring-green-500\/50:focus {
  --tw-ring-color: rgb(34 197 94 / 0.5);
}

.focus\:ring-primary:focus {
  --tw-ring-opacity: 1;
  --tw-ring-color: var(--fallback-p,oklch(var(--p)/var(--tw-ring-opacity, 1)));
}

.focus\:ring-red-500\/50:focus {
  --tw-ring-color: rgb(239 68 68 / 0.5);
}

.focus\:ring-offset-2:focus {
  --tw-ring-offset-width: 2px;
}

.disabled\:opacity-50:disabled {
  opacity: 0.5;
}

.group:hover .group-hover\:text-blue-300 {
  --tw-text-opacity: 1;
  color: rgb(147 197 253 / var(--tw-text-opacity, 1));
}

.dropdown.open > .dropdown-open\:opacity-100 {
  opacity: 1;
}

.dropdown.open > .dropdown-toggle .dropdown-open\:opacity-100 {
  opacity: 1;
}

.dropdown.open > .dropdown-menu > .dropdown-open\:opacity-100 {
  opacity: 1;
}

.dropdown-menu.open.dropdown-open\:opacity-100 {
  opacity: 1;
}

.open.overlay-open\:translate-x-0 {
  --tw-translate-x: 0px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.open .overlay-open\:translate-x-0 {
  --tw-translate-x: 0px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.selected .combo-box-selected\:block {
  display: block;
}

.selected.combo-box-selected\:block {
  display: block;
}

@media not all and (min-width: 640px) {
  .max-sm\:rounded-box {
    border-radius: var(--rounded-box, 0.5rem);
  }

  .max-sm\:shadow {
    --tw-shadow: 0 2px 4px 0 var(--fallback-bs,oklch(var(--bs)/0.26));
    --tw-shadow-colored: 0 2px 4px 0 var(--tw-shadow-color);
    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  }
}

@media (min-width: 640px) {
  .sm\:absolute {
    position: absolute;
  }

  .sm\:z-0 {
    z-index: 0;
  }

  .sm\:z-\[1\] {
    z-index: 1;
  }

  .sm\:-mx-6 {
    margin-left: -1.5rem;
    margin-right: -1.5rem;
  }

  .sm\:ml-64 {
    margin-left: 16rem;
  }

  .sm\:inline {
    display: inline;
  }

  .sm\:flex {
    display: flex;
  }

  .sm\:hidden {
    display: none;
  }

  .sm\:h-6 {
    height: 1.5rem;
  }

  .sm\:h-80 {
    height: 20rem;
  }

  .sm\:w-6 {
    width: 1.5rem;
  }

  .sm\:w-auto {
    width: auto;
  }

  .sm\:translate-x-0 {
    --tw-translate-x: 0px;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }

  .sm\:grid-cols-2 {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }

  .sm\:flex-row {
    flex-direction: row;
  }

  .sm\:items-center {
    align-items: center;
  }

  .sm\:gap-6 {
    gap: 1.5rem;
  }

  .sm\:space-y-6 > :not([hidden]) ~ :not([hidden]) {
    --tw-space-y-reverse: 0;
    margin-top: calc(1.5rem * calc(1 - var(--tw-space-y-reverse)));
    margin-bottom: calc(1.5rem * var(--tw-space-y-reverse));
  }

  .sm\:whitespace-nowrap {
    white-space: nowrap;
  }

  .sm\:border-b {
    border-bottom-width: 1px;
  }

  .sm\:p-3 {
    padding: 0.75rem;
  }

  .sm\:p-6 {
    padding: 1.5rem;
  }

  .sm\:px-6 {
    padding-left: 1.5rem;
    padding-right: 1.5rem;
  }

  .sm\:text-2xl {
    font-size: 1.5rem;
    line-height: 2rem;
  }

  .sm\:text-base {
    font-size: 1rem;
    line-height: 1.375rem;
  }

  .sm\:text-lg {
    font-size: 1.125rem;
    line-height: 1.5rem;
  }

  .sm\:text-xl {
    font-size: 1.25rem;
    line-height: 1.625rem;
  }

  .sm\:shadow-none {
    --tw-shadow: 0 0 #0000;
    --tw-shadow-colored: 0 0 #0000;
    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  }
}

@media (min-width: 768px) {
  .md\:grid-cols-2 {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }
}

@media (min-width: 1024px) {
  .lg\:grid-cols-2 {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }

  .lg\:grid-cols-3 {
    grid-template-columns: repeat(3, minmax(0, 1fr));
  }

  .lg\:grid-cols-4 {
    grid-template-columns: repeat(4, minmax(0, 1fr));
  }

  .lg\:flex-row {
    flex-direction: row;
  }

  .lg\:items-center {
    align-items: center;
  }

  .lg\:justify-between {
    justify-content: space-between;
  }

  .lg\:p-8 {
    padding: 2rem;
  }

  .lg\:px-8 {
    padding-left: 2rem;
    padding-right: 2rem;
  }

  .lg\:text-2xl {
    font-size: 1.5rem;
    line-height: 2rem;
  }

  .lg\:text-3xl {
    font-size: 1.875rem;
    line-height: 2.25rem;
  }
}

.rtl\:\!mr-0:where([dir="rtl"], [dir="rtl"] *) {
  margin-right: 0px !important;
}

@media (prefers-color-scheme: dark) {
  .dark\:divide-gray-700 > :not([hidden]) ~ :not([hidden]) {
    --tw-divide-opacity: 1;
    border-color: rgb(55 65 81 / var(--tw-divide-opacity, 1));
  }

  .dark\:border-gray-600 {
    --tw-border-opacity: 1;
    border-color: rgb(75 85 99 / var(--tw-border-opacity, 1));
  }

  .dark\:border-gray-700 {
    --tw-border-opacity: 1;
    border-color: rgb(55 65 81 / var(--tw-border-opacity, 1));
  }

  .dark\:bg-blue-900 {
    --tw-bg-opacity: 1;
    background-color: rgb(30 58 138 / var(--tw-bg-opacity, 1));
  }

  .dark\:bg-gray-600 {
    --tw-bg-opacity: 1;
    background-color: rgb(75 85 99 / var(--tw-bg-opacity, 1));
  }

  .dark\:bg-gray-700 {
    --tw-bg-opacity: 1;
    background-color: rgb(55 65 81 / var(--tw-bg-opacity, 1));
  }

  .dark\:bg-gray-700\/50 {
    background-color: rgb(55 65 81 / 0.5);
  }

  .dark\:bg-gray-800 {
    --tw-bg-opacity: 1;
    background-color: rgb(31 41 55 / var(--tw-bg-opacity, 1));
  }

  .dark\:bg-gray-900 {
    --tw-bg-opacity: 1;
    background-color: rgb(17 24 39 / var(--tw-bg-opacity, 1));
  }

  .dark\:bg-green-900 {
    --tw-bg-opacity: 1;
    background-color: rgb(20 83 45 / var(--tw-bg-opacity, 1));
  }

  .dark\:bg-purple-900 {
    --tw-bg-opacity: 1;
    background-color: rgb(88 28 135 / var(--tw-bg-opacity, 1));
  }

  .dark\:bg-yellow-900 {
    --tw-bg-opacity: 1;
    background-color: rgb(113 63 18 / var(--tw-bg-opacity, 1));
  }

  .dark\:text-blue-200 {
    --tw-text-opacity: 1;
    color: rgb(191 219 254 / var(--tw-text-opacity, 1));
  }

  .dark\:text-blue-300 {
    --tw-text-opacity: 1;
    color: rgb(147 197 253 / var(--tw-text-opacity, 1));
  }

  .dark\:text-gray-200 {
    --tw-text-opacity: 1;
    color: rgb(229 231 235 / var(--tw-text-opacity, 1));
  }

  .dark\:text-gray-300 {
    --tw-text-opacity: 1;
    color: rgb(209 213 219 / var(--tw-text-opacity, 1));
  }

  .dark\:text-gray-400 {
    --tw-text-opacity: 1;
    color: rgb(156 163 175 / var(--tw-text-opacity, 1));
  }

  .dark\:text-green-200 {
    --tw-text-opacity: 1;
    color: rgb(187 247 208 / var(--tw-text-opacity, 1));
  }

  .dark\:text-green-300 {
    --tw-text-opacity: 1;
    color: rgb(134 239 172 / var(--tw-text-opacity, 1));
  }

  .dark\:text-purple-300 {
    --tw-text-opacity: 1;
    color: rgb(216 180 254 / var(--tw-text-opacity, 1));
  }

  .dark\:text-red-200 {
    --tw-text-opacity: 1;
    color: rgb(254 202 202 / var(--tw-text-opacity, 1));
  }

  .dark\:text-red-400 {
    --tw-text-opacity: 1;
    color: rgb(248 113 113 / var(--tw-text-opacity, 1));
  }

  .dark\:text-white {
    --tw-text-opacity: 1;
    color: rgb(255 255 255 / var(--tw-text-opacity, 1));
  }

  .dark\:text-yellow-200 {
    --tw-text-opacity: 1;
    color: rgb(254 240 138 / var(--tw-text-opacity, 1));
  }

  .dark\:text-yellow-300 {
    --tw-text-opacity: 1;
    color: rgb(253 224 71 / var(--tw-text-opacity, 1));
  }

  .dark\:ring-offset-gray-800 {
    --tw-ring-offset-color: #1f2937;
  }

  .dark\:hover\:bg-gray-600:hover {
    --tw-bg-opacity: 1;
    background-color: rgb(75 85 99 / var(--tw-bg-opacity, 1));
  }

  .dark\:hover\:bg-gray-700:hover {
    --tw-bg-opacity: 1;
    background-color: rgb(55 65 81 / var(--tw-bg-opacity, 1));
  }

  .dark\:hover\:bg-gray-700\/50:hover {
    background-color: rgb(55 65 81 / 0.5);
  }

  .dark\:hover\:bg-green-500\/10:hover {
    background-color: rgb(34 197 94 / 0.1);
  }

  .dark\:hover\:bg-red-500\/10:hover {
    background-color: rgb(239 68 68 / 0.1);
  }

  .dark\:hover\:bg-white\/10:hover {
    background-color: rgb(255 255 255 / 0.1);
  }

  .dark\:hover\:text-gray-200:hover {
    --tw-text-opacity: 1;
    color: rgb(229 231 235 / var(--tw-text-opacity, 1));
  }

  .dark\:hover\:text-red-300:hover {
    --tw-text-opacity: 1;
    color: rgb(252 165 165 / var(--tw-text-opacity, 1));
  }

  .dark\:focus\:ring-blue-600:focus {
    --tw-ring-opacity: 1;
    --tw-ring-color: rgb(37 99 235 / var(--tw-ring-opacity, 1));
  }

  .dark\:focus\:ring-gray-700:focus {
    --tw-ring-opacity: 1;
    --tw-ring-color: rgb(55 65 81 / var(--tw-ring-opacity, 1));
  }
}